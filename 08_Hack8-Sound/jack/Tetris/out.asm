@256
D=A
@SP
M=D
@0
D=A
@R14
M=D
@Sys.init
D=A
@R13
M=D
@return0
D=A
@CALL
0;JMP
(return0)
(HALT)
@HALT
0;JMP
(RETURN)
@LCL
D=M
@R13
M=D
@R13
D=M
@5
A=D-A
D=M
@R14
M=D
@SP
A=M-1
D=M
@ARG
A=M
M=D
@ARG
D=M+1
@SP
M=D
@R13
AM=M-1
D=M
@THAT
M=D
@R13
AM=M-1
D=M
@THIS
M=D
@R13
AM=M-1
D=M
@ARG
M=D
@R13
AM=M-1
D=M
@LCL
M=D
@R14
A=M
0;JMP
(CALL)
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
@5
D=D-A
@R14
A=M
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@R13
A=M
0;JMP

(Button.new)
@0
D=A
(Button.new_LOOP)
@Button.new_END
D;JEQ
@SP
A=M
M=0
@SP
M=M+1
D=D-1
@Button.new_LOOP
0;JMP
(Button.new_END)

@2  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@Memory.alloc
D=A
@R13
M=D
@return1
D=A
@CALL
0;JMP
(return1)
@SP  //pop pointer
AM=M-1
D=M
@THIS
M=D
@ARG //push argument
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS    //pop this
D=M
@0
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@THIS    //pop this
D=M
@1
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@R3 //push pointer
D=M
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@Button.draw
D=A
@R13
M=D
@return2
D=A
@CALL
0;JMP
(return2)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@R3 //push pointer
D=M
@SP
A=M
M=D
@SP
M=M+1
@RETURN
0;JMP

(Button.setText)
@0
D=A
(Button.setText_LOOP)
@Button.setText_END
D;JEQ
@SP
A=M
M=0
@SP
M=M+1
D=D-1
@Button.setText_LOOP
0;JMP
(Button.setText_END)

@ARG //push argument
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //pop pointer
AM=M-1
D=M
@THIS
M=D
@ARG //push argument
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS    //pop this
D=M
@1
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@RETURN
0;JMP

(Button.draw)
@2
D=A
(Button.draw_LOOP)
@Button.draw_END
D;JEQ
@SP
A=M
M=0
@SP
M=M+1
D=D-1
@Button.draw_LOOP
0;JMP
(Button.draw_END)

@ARG //push argument
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //pop pointer
AM=M-1
D=M
@THIS
M=D
@THIS    //push this
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@3  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //and
AM=M-1
D=M
A=A-1
M=D&M
@LCL //pop local
D=M
@0
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@THIS    //push this
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@4  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@Math.divide
D=A
@R13
M=D
@return3
D=A
@CALL
0;JMP
(return3)
@LCL //pop local
D=M
@1
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@ARG //push argument
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
@Button.draw$if1
D;JNE
@Button.draw$ifelse1
0;JMP
(Button.draw$if1)
@0
D=A
@R14
M=D
@Screen.DARKGREY
D=A
@R13
M=D
@return4
D=A
@CALL
0;JMP
(return4)
@1
D=A
@R14
M=D
@Screen.setColor
D=A
@R13
M=D
@return5
D=A
@CALL
0;JMP
(return5)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@1  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL //push local
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@60  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@Math.multiply
D=A
@R13
M=D
@return6
D=A
@CALL
0;JMP
(return6)
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@288  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL //push local
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@33  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@Math.multiply
D=A
@R13
M=D
@return7
D=A
@CALL
0;JMP
(return7)
@SP  //sub
AM=M-1
D=M
A=A-1
M=M-D
@58  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@31  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@4
D=A
@R14
M=D
@Screen.drawRectangle
D=A
@R13
M=D
@return8
D=A
@CALL
0;JMP
(return8)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@0
D=A
@R14
M=D
@Screen.DARKGREY
D=A
@R13
M=D
@return9
D=A
@CALL
0;JMP
(return9)
@1
D=A
@R14
M=D
@Screen.setBackColor
D=A
@R13
M=D
@return10
D=A
@CALL
0;JMP
(return10)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@Button.draw$ifend1
0;JMP
(Button.draw$ifelse1)
@0
D=A
@R14
M=D
@Screen.LIGHTGREY
D=A
@R13
M=D
@return11
D=A
@CALL
0;JMP
(return11)
@1
D=A
@R14
M=D
@Screen.setColor
D=A
@R13
M=D
@return12
D=A
@CALL
0;JMP
(return12)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@1  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL //push local
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@60  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@Math.multiply
D=A
@R13
M=D
@return13
D=A
@CALL
0;JMP
(return13)
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@288  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL //push local
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@33  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@Math.multiply
D=A
@R13
M=D
@return14
D=A
@CALL
0;JMP
(return14)
@SP  //sub
AM=M-1
D=M
A=A-1
M=M-D
@58  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@31  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@4
D=A
@R14
M=D
@Screen.drawRectangle
D=A
@R13
M=D
@return15
D=A
@CALL
0;JMP
(return15)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@0
D=A
@R14
M=D
@Screen.LIGHTGREY
D=A
@R13
M=D
@return16
D=A
@CALL
0;JMP
(return16)
@1
D=A
@R14
M=D
@Screen.setBackColor
D=A
@R13
M=D
@return17
D=A
@CALL
0;JMP
(return17)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
(Button.draw$ifend1)
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@Screen.setColor
D=A
@R13
M=D
@return18
D=A
@CALL
0;JMP
(return18)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@27  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@3  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL //push local
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@Math.multiply
D=A
@R13
M=D
@return19
D=A
@CALL
0;JMP
(return19)
@SP  //sub
AM=M-1
D=M
A=A-1
M=M-D
@1  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL //push local
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@15  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@Math.multiply
D=A
@R13
M=D
@return20
D=A
@CALL
0;JMP
(return20)
@2  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@Math.divide
D=A
@R13
M=D
@return21
D=A
@CALL
0;JMP
(return21)
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@2
D=A
@R14
M=D
@Output.moveCursor
D=A
@R13
M=D
@return22
D=A
@CALL
0;JMP
(return22)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@THIS    //push this
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
D=D-M
M=-1
@eq0
D;JEQ
@SP
A=M-1
M=0
(eq0)
@SP  //not
A=M-1
M=!M
@SP
AM=M-1
D=M
@Button.draw$if22
D;JNE
@Button.draw$ifelse22
0;JMP
(Button.draw$if22)
@THIS    //push this
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@Output.printString
D=A
@R13
M=D
@return23
D=A
@CALL
0;JMP
(return23)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
(Button.draw$ifelse22)
@1  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //neg
A=M-1
M=-M
@1
D=A
@R14
M=D
@Screen.setBackColor
D=A
@R13
M=D
@return24
D=A
@CALL
0;JMP
(return24)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@RETURN
0;JMP

(Bat.new)
@0
D=A
(Bat.new_LOOP)
@Bat.new_END
D;JEQ
@SP
A=M
M=0
@SP
M=M+1
D=D-1
@Bat.new_LOOP
0;JMP
(Bat.new_END)

@5  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@Memory.alloc
D=A
@R13
M=D
@return25
D=A
@CALL
0;JMP
(return25)
@SP  //pop pointer
AM=M-1
D=M
@THIS
M=D
@ARG //push argument
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS    //pop this
D=M
@0
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@ARG //push argument
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS    //pop this
D=M
@1
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@ARG //push argument
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS    //pop this
D=M
@2
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@ARG //push argument
D=M
@3
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS    //pop this
D=M
@3
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@THIS    //pop this
D=M
@4
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@R3 //push pointer
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@Bat.show
D=A
@R13
M=D
@return26
D=A
@CALL
0;JMP
(return26)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@R3 //push pointer
D=M
@SP
A=M
M=D
@SP
M=M+1
@RETURN
0;JMP

(Bat.dispose)
@0
D=A
(Bat.dispose_LOOP)
@Bat.dispose_END
D;JEQ
@SP
A=M
M=0
@SP
M=M+1
D=D-1
@Bat.dispose_LOOP
0;JMP
(Bat.dispose_END)

@ARG //push argument
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //pop pointer
AM=M-1
D=M
@THIS
M=D
@R3 //push pointer
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@Memory.deAlloc
D=A
@R13
M=D
@return27
D=A
@CALL
0;JMP
(return27)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@RETURN
0;JMP

(Bat.show)
@0
D=A
(Bat.show_LOOP)
@Bat.show_END
D;JEQ
@SP
A=M
M=0
@SP
M=M+1
D=D-1
@Bat.show_LOOP
0;JMP
(Bat.show_END)

@ARG //push argument
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //pop pointer
AM=M-1
D=M
@THIS
M=D
@R3 //push pointer
D=M
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@Bat.draw
D=A
@R13
M=D
@return28
D=A
@CALL
0;JMP
(return28)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@RETURN
0;JMP

(Bat.hide)
@0
D=A
(Bat.hide_LOOP)
@Bat.hide_END
D;JEQ
@SP
A=M
M=0
@SP
M=M+1
D=D-1
@Bat.hide_LOOP
0;JMP
(Bat.hide_END)

@ARG //push argument
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //pop pointer
AM=M-1
D=M
@THIS
M=D
@R3 //push pointer
D=M
@SP
A=M
M=D
@SP
M=M+1
@1  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //neg
A=M-1
M=-M
@2
D=A
@R14
M=D
@Bat.draw
D=A
@R13
M=D
@return29
D=A
@CALL
0;JMP
(return29)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@RETURN
0;JMP

(Bat.draw)
@0
D=A
(Bat.draw_LOOP)
@Bat.draw_END
D;JEQ
@SP
A=M
M=0
@SP
M=M+1
D=D-1
@Bat.draw_LOOP
0;JMP
(Bat.draw_END)

@ARG //push argument
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //pop pointer
AM=M-1
D=M
@THIS
M=D
@ARG //push argument
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@Screen.setColor
D=A
@R13
M=D
@return30
D=A
@CALL
0;JMP
(return30)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@THIS    //push this
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS    //push this
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS    //push this
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS    //push this
D=M
@3
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@4
D=A
@R14
M=D
@Screen.drawRectangle
D=A
@R13
M=D
@return31
D=A
@CALL
0;JMP
(return31)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@Screen.setColor
D=A
@R13
M=D
@return32
D=A
@CALL
0;JMP
(return32)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@RETURN
0;JMP

(Bat.setDirection)
@0
D=A
(Bat.setDirection_LOOP)
@Bat.setDirection_END
D;JEQ
@SP
A=M
M=0
@SP
M=M+1
D=D-1
@Bat.setDirection_LOOP
0;JMP
(Bat.setDirection_END)

@ARG //push argument
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //pop pointer
AM=M-1
D=M
@THIS
M=D
@ARG //push argument
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS    //pop this
D=M
@4
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@RETURN
0;JMP

(Bat.getLeft)
@0
D=A
(Bat.getLeft_LOOP)
@Bat.getLeft_END
D;JEQ
@SP
A=M
M=0
@SP
M=M+1
D=D-1
@Bat.getLeft_LOOP
0;JMP
(Bat.getLeft_END)

@ARG //push argument
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //pop pointer
AM=M-1
D=M
@THIS
M=D
@THIS    //push this
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@RETURN
0;JMP

(Bat.getRight)
@0
D=A
(Bat.getRight_LOOP)
@Bat.getRight_END
D;JEQ
@SP
A=M
M=0
@SP
M=M+1
D=D-1
@Bat.getRight_LOOP
0;JMP
(Bat.getRight_END)

@ARG //push argument
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //pop pointer
AM=M-1
D=M
@THIS
M=D
@THIS    //push this
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS    //push this
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@RETURN
0;JMP

(Bat.setWidth)
@0
D=A
(Bat.setWidth_LOOP)
@Bat.setWidth_END
D;JEQ
@SP
A=M
M=0
@SP
M=M+1
D=D-1
@Bat.setWidth_LOOP
0;JMP
(Bat.setWidth_END)

@ARG //push argument
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //pop pointer
AM=M-1
D=M
@THIS
M=D
@R3 //push pointer
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@Bat.hide
D=A
@R13
M=D
@return33
D=A
@CALL
0;JMP
(return33)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@ARG //push argument
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS    //pop this
D=M
@2
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@R3 //push pointer
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@Bat.show
D=A
@R13
M=D
@return34
D=A
@CALL
0;JMP
(return34)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@RETURN
0;JMP

(Bat.move)
@0
D=A
(Bat.move_LOOP)
@Bat.move_END
D;JEQ
@SP
A=M
M=0
@SP
M=M+1
D=D-1
@Bat.move_LOOP
0;JMP
(Bat.move_END)

@ARG //push argument
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //pop pointer
AM=M-1
D=M
@THIS
M=D
@R3 //push pointer
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@Bat.hide
D=A
@R13
M=D
@return35
D=A
@CALL
0;JMP
(return35)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@THIS    //push this
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@4  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@THIS    //push this
D=M
@4
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@Math.multiply
D=A
@R13
M=D
@return36
D=A
@CALL
0;JMP
(return36)
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@THIS    //pop this
D=M
@0
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@THIS    //push this
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
D=M-D
M=-1
@lt1
D;JLT
@SP
A=M-1
M=0
(lt1)
@SP
AM=M-1
D=M
@Bat.move$if3
D;JNE
@Bat.move$ifelse3
0;JMP
(Bat.move$if3)
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@THIS    //pop this
D=M
@0
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
(Bat.move$ifelse3)
@THIS    //push this
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS    //push this
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@239  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
D=M-D
M=-1
@gt2
D;JGT
@SP
A=M-1
M=0
(gt2)
@SP
AM=M-1
D=M
@Bat.move$if6
D;JNE
@Bat.move$ifelse6
0;JMP
(Bat.move$if6)
@240  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@THIS    //push this
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //sub
AM=M-1
D=M
A=A-1
M=M-D
@THIS    //pop this
D=M
@0
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
(Bat.move$ifelse6)
@R3 //push pointer
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@Bat.show
D=A
@R13
M=D
@return37
D=A
@CALL
0;JMP
(return37)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@RETURN
0;JMP

(Tile.init)
@0
D=A
(Tile.init_LOOP)
@Tile.init_END
D;JEQ
@SP
A=M
M=0
@SP
M=M+1
D=D-1
@Tile.init_LOOP
0;JMP
(Tile.init_END)

@7  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@Array.new
D=A
@R13
M=D
@return38
D=A
@CALL
0;JMP
(return38)
@SP  //pop static
AM=M-1
D=M
@Tile.0
M=D
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@Tile.0   //push static
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@0
D=A
@R14
M=D
@Screen.YELLOW
D=A
@R13
M=D
@return39
D=A
@CALL
0;JMP
(return39)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@SP  //pop pointer
AM=M-1
D=M
@THAT
M=D
@R5 //push temp
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT    //pop that
D=M
@0
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@1  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@Tile.0   //push static
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@0
D=A
@R14
M=D
@Screen.CYAN
D=A
@R13
M=D
@return40
D=A
@CALL
0;JMP
(return40)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@SP  //pop pointer
AM=M-1
D=M
@THAT
M=D
@R5 //push temp
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT    //pop that
D=M
@0
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@2  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@Tile.0   //push static
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@0
D=A
@R14
M=D
@Screen.MAGENTA
D=A
@R13
M=D
@return41
D=A
@CALL
0;JMP
(return41)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@SP  //pop pointer
AM=M-1
D=M
@THAT
M=D
@R5 //push temp
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT    //pop that
D=M
@0
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@3  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@Tile.0   //push static
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@0
D=A
@R14
M=D
@Screen.GREEN
D=A
@R13
M=D
@return42
D=A
@CALL
0;JMP
(return42)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@SP  //pop pointer
AM=M-1
D=M
@THAT
M=D
@R5 //push temp
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT    //pop that
D=M
@0
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@4  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@Tile.0   //push static
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@0
D=A
@R14
M=D
@Screen.RED
D=A
@R13
M=D
@return43
D=A
@CALL
0;JMP
(return43)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@SP  //pop pointer
AM=M-1
D=M
@THAT
M=D
@R5 //push temp
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT    //pop that
D=M
@0
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@5  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@Tile.0   //push static
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@0
D=A
@R14
M=D
@Screen.BLUE
D=A
@R13
M=D
@return44
D=A
@CALL
0;JMP
(return44)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@SP  //pop pointer
AM=M-1
D=M
@THAT
M=D
@R5 //push temp
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT    //pop that
D=M
@0
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@6  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@Tile.0   //push static
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@0
D=A
@R14
M=D
@Screen.ORANGE
D=A
@R13
M=D
@return45
D=A
@CALL
0;JMP
(return45)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@SP  //pop pointer
AM=M-1
D=M
@THAT
M=D
@R5 //push temp
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT    //pop that
D=M
@0
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@28  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@Array.new
D=A
@R13
M=D
@return46
D=A
@CALL
0;JMP
(return46)
@SP  //pop static
AM=M-1
D=M
@Tile.1
M=D
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@Tile.1   //push static
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@1632  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@SP  //pop pointer
AM=M-1
D=M
@THAT
M=D
@R5 //push temp
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT    //pop that
D=M
@0
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@1  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@Tile.1   //push static
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@1632  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@SP  //pop pointer
AM=M-1
D=M
@THAT
M=D
@R5 //push temp
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT    //pop that
D=M
@0
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@2  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@Tile.1   //push static
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@1632  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@SP  //pop pointer
AM=M-1
D=M
@THAT
M=D
@R5 //push temp
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT    //pop that
D=M
@0
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@3  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@Tile.1   //push static
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@1632  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@SP  //pop pointer
AM=M-1
D=M
@THAT
M=D
@R5 //push temp
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT    //pop that
D=M
@0
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@4  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@Tile.1   //push static
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@3840  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@SP  //pop pointer
AM=M-1
D=M
@THAT
M=D
@R5 //push temp
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT    //pop that
D=M
@0
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@5  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@Tile.1   //push static
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@8738  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@SP  //pop pointer
AM=M-1
D=M
@THAT
M=D
@R5 //push temp
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT    //pop that
D=M
@0
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@6  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@Tile.1   //push static
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@240  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@SP  //pop pointer
AM=M-1
D=M
@THAT
M=D
@R5 //push temp
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT    //pop that
D=M
@0
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@7  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@Tile.1   //push static
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@17476  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@SP  //pop pointer
AM=M-1
D=M
@THAT
M=D
@R5 //push temp
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT    //pop that
D=M
@0
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@8  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@Tile.1   //push static
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@19968  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@SP  //pop pointer
AM=M-1
D=M
@THAT
M=D
@R5 //push temp
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT    //pop that
D=M
@0
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@9  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@Tile.1   //push static
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@17984  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@SP  //pop pointer
AM=M-1
D=M
@THAT
M=D
@R5 //push temp
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT    //pop that
D=M
@0
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@10  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@Tile.1   //push static
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@3648  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@SP  //pop pointer
AM=M-1
D=M
@THAT
M=D
@R5 //push temp
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT    //pop that
D=M
@0
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@11  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@Tile.1   //push static
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@19520  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@SP  //pop pointer
AM=M-1
D=M
@THAT
M=D
@R5 //push temp
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT    //pop that
D=M
@0
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@12  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@Tile.1   //push static
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@27648  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@SP  //pop pointer
AM=M-1
D=M
@THAT
M=D
@R5 //push temp
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT    //pop that
D=M
@0
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@13  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@Tile.1   //push static
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@17952  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@SP  //pop pointer
AM=M-1
D=M
@THAT
M=D
@R5 //push temp
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT    //pop that
D=M
@0
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@14  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@Tile.1   //push static
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@1728  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@SP  //pop pointer
AM=M-1
D=M
@THAT
M=D
@R5 //push temp
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT    //pop that
D=M
@0
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@15  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@Tile.1   //push static
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@29631  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //not
A=M-1
M=!M
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@SP  //pop pointer
AM=M-1
D=M
@THAT
M=D
@R5 //push temp
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT    //pop that
D=M
@0
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@16  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@Tile.1   //push static
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@14847  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //not
A=M-1
M=!M
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@SP  //pop pointer
AM=M-1
D=M
@THAT
M=D
@R5 //push temp
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT    //pop that
D=M
@0
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@17  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@Tile.1   //push static
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@9792  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@SP  //pop pointer
AM=M-1
D=M
@THAT
M=D
@R5 //push temp
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT    //pop that
D=M
@0
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@18  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@Tile.1   //push static
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@3168  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@SP  //pop pointer
AM=M-1
D=M
@THAT
M=D
@R5 //push temp
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT    //pop that
D=M
@0
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@19  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@Tile.1   //push static
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@19584  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@SP  //pop pointer
AM=M-1
D=M
@THAT
M=D
@R5 //push temp
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT    //pop that
D=M
@0
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@20  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@Tile.1   //push static
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@29183  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //not
A=M-1
M=!M
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@SP  //pop pointer
AM=M-1
D=M
@THAT
M=D
@R5 //push temp
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT    //pop that
D=M
@0
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@21  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@Tile.1   //push static
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@25664  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@SP  //pop pointer
AM=M-1
D=M
@THAT
M=D
@R5 //push temp
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT    //pop that
D=M
@0
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@22  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@Tile.1   //push static
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@3616  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@SP  //pop pointer
AM=M-1
D=M
@THAT
M=D
@R5 //push temp
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT    //pop that
D=M
@0
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@23  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@Tile.1   //push static
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@17600  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@SP  //pop pointer
AM=M-1
D=M
@THAT
M=D
@R5 //push temp
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT    //pop that
D=M
@0
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@24  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@Tile.1   //push static
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@11776  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@SP  //pop pointer
AM=M-1
D=M
@THAT
M=D
@R5 //push temp
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT    //pop that
D=M
@0
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@25  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@Tile.1   //push static
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@17504  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@SP  //pop pointer
AM=M-1
D=M
@THAT
M=D
@R5 //push temp
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT    //pop that
D=M
@0
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@26  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@Tile.1   //push static
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@3712  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@SP  //pop pointer
AM=M-1
D=M
@THAT
M=D
@R5 //push temp
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT    //pop that
D=M
@0
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@27  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@Tile.1   //push static
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@15295  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //not
A=M-1
M=!M
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@SP  //pop pointer
AM=M-1
D=M
@THAT
M=D
@R5 //push temp
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT    //pop that
D=M
@0
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@RETURN
0;JMP

(Tile.new)
@1
D=A
(Tile.new_LOOP)
@Tile.new_END
D;JEQ
@SP
A=M
M=0
@SP
M=M+1
D=D-1
@Tile.new_LOOP
0;JMP
(Tile.new_END)

@5  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@Memory.alloc
D=A
@R13
M=D
@return47
D=A
@CALL
0;JMP
(return47)
@SP  //pop pointer
AM=M-1
D=M
@THIS
M=D
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@THIS    //pop this
D=M
@4
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@7  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@THIS    //pop this
D=M
@3
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
(Tile.new$while2)
@THIS    //push this
D=M
@3
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@7  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
D=D-M
M=-1
@eq3
D;JEQ
@SP
A=M-1
M=0
(eq3)
@SP  //not
A=M-1
M=!M
@SP
AM=M-1
D=M
@Tile.new$whileend2
D;JNE
@0
D=A
@R14
M=D
@Random.nextInt
D=A
@R13
M=D
@return48
D=A
@CALL
0;JMP
(return48)
@7  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //and
AM=M-1
D=M
A=A-1
M=D&M
@THIS    //pop this
D=M
@3
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@Tile.new$while2
0;JMP
(Tile.new$whileend2)
@11  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@THIS    //pop this
D=M
@0
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@6  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@THIS    //pop this
D=M
@1
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@THIS    //pop this
D=M
@2
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@R3 //push pointer
D=M
@SP
A=M
M=D
@SP
M=M+1
@RETURN
0;JMP

(Tile.move)
@0
D=A
(Tile.move_LOOP)
@Tile.move_END
D;JEQ
@SP
A=M
M=0
@SP
M=M+1
D=D-1
@Tile.move_LOOP
0;JMP
(Tile.move_END)

@ARG //push argument
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //pop pointer
AM=M-1
D=M
@THIS
M=D
@ARG //push argument
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS    //pop this
D=M
@0
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@ARG //push argument
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS    //pop this
D=M
@1
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@RETURN
0;JMP

(Tile.dispose)
@0
D=A
(Tile.dispose_LOOP)
@Tile.dispose_END
D;JEQ
@SP
A=M
M=0
@SP
M=M+1
D=D-1
@Tile.dispose_LOOP
0;JMP
(Tile.dispose_END)

@ARG //push argument
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //pop pointer
AM=M-1
D=M
@THIS
M=D
@R3 //push pointer
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@Memory.deAlloc
D=A
@R13
M=D
@return49
D=A
@CALL
0;JMP
(return49)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@RETURN
0;JMP

(Tile.check)
@3
D=A
(Tile.check_LOOP)
@Tile.check_END
D;JEQ
@SP
A=M
M=0
@SP
M=M+1
D=D-1
@Tile.check_LOOP
0;JMP
(Tile.check_END)

@ARG //push argument
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //pop pointer
AM=M-1
D=M
@THIS
M=D
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL //pop local
D=M
@0
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL //pop local
D=M
@1
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@Tile.1   //push static
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS    //push this
D=M
@3
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@4  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@Math.multiply
D=A
@R13
M=D
@return50
D=A
@CALL
0;JMP
(return50)
@THIS    //push this
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@SP  //pop pointer
AM=M-1
D=M
@THAT
M=D
@THAT    //push that
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@LCL //pop local
D=M
@2
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
(Tile.check$while2)
@LCL //push local
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@4  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
D=M-D
M=-1
@lt4
D;JLT
@SP
A=M-1
M=0
(lt4)
@SP  //not
A=M-1
M=!M
@SP
AM=M-1
D=M
@Tile.check$whileend2
D;JNE
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL //pop local
D=M
@0
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
(Tile.check$while4)
@LCL //push local
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@4  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
D=M-D
M=-1
@lt5
D;JLT
@SP
A=M-1
M=0
(lt5)
@SP  //not
A=M-1
M=!M
@SP
AM=M-1
D=M
@Tile.check$whileend4
D;JNE
@LCL //push local
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
D=M-D
M=-1
@lt6
D;JLT
@SP
A=M-1
M=0
(lt6)
@SP
AM=M-1
D=M
@Tile.check$if5
D;JNE
@Tile.check$ifelse5
0;JMP
(Tile.check$if5)
@THIS    //push this
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@LCL //push local
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@9  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
D=M-D
M=-1
@gt7
D;JGT
@SP
A=M-1
M=0
(gt7)
@THIS    //push this
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@LCL //push local
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
D=M-D
M=-1
@lt8
D;JLT
@SP
A=M-1
M=0
(lt8)
@SP  //or
AM=M-1
D=M
A=A-1
M=D|M
@THIS    //push this
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@LCL //push local
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@21  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
D=M-D
M=-1
@gt9
D;JGT
@SP
A=M-1
M=0
(gt9)
@SP  //or
AM=M-1
D=M
A=A-1
M=D|M
@THIS    //push this
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@LCL //push local
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
D=M-D
M=-1
@lt10
D;JLT
@SP
A=M-1
M=0
(lt10)
@SP  //or
AM=M-1
D=M
A=A-1
M=D|M
@SP
AM=M-1
D=M
@Tile.check$if6
D;JNE
@Tile.check$ifelse6
0;JMP
(Tile.check$if6)
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@RETURN
0;JMP

(Tile.check$ifelse6)
@THIS    //push this
D=M
@4
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS    //push this
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@LCL //push local
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@THIS    //push this
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@LCL //push local
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@3
D=A
@R14
M=D
@Grid.hasTile
D=A
@R13
M=D
@return51
D=A
@CALL
0;JMP
(return51)
@SP
AM=M-1
D=M
@Tile.check$if9
D;JNE
@Tile.check$ifelse9
0;JMP
(Tile.check$if9)
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@RETURN
0;JMP

(Tile.check$ifelse9)
(Tile.check$ifelse5)
@LCL //push local
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@LCL //pop local
D=M
@0
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@LCL //push local
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@LCL //push local
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@LCL //pop local
D=M
@2
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@Tile.check$while4
0;JMP
(Tile.check$whileend4)
@LCL //push local
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@LCL //pop local
D=M
@1
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@Tile.check$while2
0;JMP
(Tile.check$whileend2)
@1  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //neg
A=M-1
M=-M
@RETURN
0;JMP

(Tile.getScore)
@0
D=A
(Tile.getScore_LOOP)
@Tile.getScore_END
D;JEQ
@SP
A=M
M=0
@SP
M=M+1
D=D-1
@Tile.getScore_LOOP
0;JMP
(Tile.getScore_END)

@ARG //push argument
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //pop pointer
AM=M-1
D=M
@THIS
M=D
@THIS    //push this
D=M
@4
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG //push argument
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@Grid.clearRow
D=A
@R13
M=D
@return52
D=A
@CALL
0;JMP
(return52)
@RETURN
0;JMP

(Tile.rotateRight)
@0
D=A
(Tile.rotateRight_LOOP)
@Tile.rotateRight_END
D;JEQ
@SP
A=M
M=0
@SP
M=M+1
D=D-1
@Tile.rotateRight_LOOP
0;JMP
(Tile.rotateRight_END)

@ARG //push argument
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //pop pointer
AM=M-1
D=M
@THIS
M=D
@R3 //push pointer
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@Tile.erase
D=A
@R13
M=D
@return53
D=A
@CALL
0;JMP
(return53)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@THIS    //push this
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@THIS    //pop this
D=M
@2
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@THIS    //push this
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@3  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
D=M-D
M=-1
@gt11
D;JGT
@SP
A=M-1
M=0
(gt11)
@SP
AM=M-1
D=M
@Tile.rotateRight$if3
D;JNE
@Tile.rotateRight$ifelse3
0;JMP
(Tile.rotateRight$if3)
@THIS    //push this
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@4  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //sub
AM=M-1
D=M
A=A-1
M=M-D
@THIS    //pop this
D=M
@2
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
(Tile.rotateRight$ifelse3)
@R3 //push pointer
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@Tile.check
D=A
@R13
M=D
@return54
D=A
@CALL
0;JMP
(return54)
@SP
AM=M-1
D=M
@Tile.rotateRight$if6
D;JNE
@Tile.rotateRight$ifelse6
0;JMP
(Tile.rotateRight$if6)
@R3 //push pointer
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@Tile.draw
D=A
@R13
M=D
@return55
D=A
@CALL
0;JMP
(return55)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@Tile.rotateRight$ifend6
0;JMP
(Tile.rotateRight$ifelse6)
@THIS    //push this
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //sub
AM=M-1
D=M
A=A-1
M=M-D
@THIS    //pop this
D=M
@2
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@THIS    //push this
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
D=M-D
M=-1
@lt12
D;JLT
@SP
A=M-1
M=0
(lt12)
@SP
AM=M-1
D=M
@Tile.rotateRight$if11
D;JNE
@Tile.rotateRight$ifelse11
0;JMP
(Tile.rotateRight$if11)
@THIS    //push this
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@4  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@THIS    //pop this
D=M
@2
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
(Tile.rotateRight$ifelse11)
@R3 //push pointer
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@Tile.draw
D=A
@R13
M=D
@return56
D=A
@CALL
0;JMP
(return56)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
(Tile.rotateRight$ifend6)
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@RETURN
0;JMP

(Tile.rotateLeft)
@0
D=A
(Tile.rotateLeft_LOOP)
@Tile.rotateLeft_END
D;JEQ
@SP
A=M
M=0
@SP
M=M+1
D=D-1
@Tile.rotateLeft_LOOP
0;JMP
(Tile.rotateLeft_END)

@ARG //push argument
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //pop pointer
AM=M-1
D=M
@THIS
M=D
@R3 //push pointer
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@Tile.erase
D=A
@R13
M=D
@return57
D=A
@CALL
0;JMP
(return57)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@THIS    //push this
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //sub
AM=M-1
D=M
A=A-1
M=M-D
@THIS    //pop this
D=M
@2
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@THIS    //push this
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
D=M-D
M=-1
@lt13
D;JLT
@SP
A=M-1
M=0
(lt13)
@SP
AM=M-1
D=M
@Tile.rotateLeft$if3
D;JNE
@Tile.rotateLeft$ifelse3
0;JMP
(Tile.rotateLeft$if3)
@THIS    //push this
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@4  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@THIS    //pop this
D=M
@2
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
(Tile.rotateLeft$ifelse3)
@R3 //push pointer
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@Tile.check
D=A
@R13
M=D
@return58
D=A
@CALL
0;JMP
(return58)
@SP
AM=M-1
D=M
@Tile.rotateLeft$if6
D;JNE
@Tile.rotateLeft$ifelse6
0;JMP
(Tile.rotateLeft$if6)
@R3 //push pointer
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@Tile.draw
D=A
@R13
M=D
@return59
D=A
@CALL
0;JMP
(return59)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@Tile.rotateLeft$ifend6
0;JMP
(Tile.rotateLeft$ifelse6)
@THIS    //push this
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@THIS    //pop this
D=M
@2
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@THIS    //push this
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@3  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
D=M-D
M=-1
@gt14
D;JGT
@SP
A=M-1
M=0
(gt14)
@SP
AM=M-1
D=M
@Tile.rotateLeft$if11
D;JNE
@Tile.rotateLeft$ifelse11
0;JMP
(Tile.rotateLeft$if11)
@THIS    //push this
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@4  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //sub
AM=M-1
D=M
A=A-1
M=M-D
@THIS    //pop this
D=M
@2
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
(Tile.rotateLeft$ifelse11)
@R3 //push pointer
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@Tile.draw
D=A
@R13
M=D
@return60
D=A
@CALL
0;JMP
(return60)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
(Tile.rotateLeft$ifend6)
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@RETURN
0;JMP

(Tile.moveRight)
@0
D=A
(Tile.moveRight_LOOP)
@Tile.moveRight_END
D;JEQ
@SP
A=M
M=0
@SP
M=M+1
D=D-1
@Tile.moveRight_LOOP
0;JMP
(Tile.moveRight_END)

@ARG //push argument
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //pop pointer
AM=M-1
D=M
@THIS
M=D
@R3 //push pointer
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@Tile.erase
D=A
@R13
M=D
@return61
D=A
@CALL
0;JMP
(return61)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@THIS    //push this
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@THIS    //pop this
D=M
@0
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@R3 //push pointer
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@Tile.check
D=A
@R13
M=D
@return62
D=A
@CALL
0;JMP
(return62)
@SP
AM=M-1
D=M
@Tile.moveRight$if3
D;JNE
@Tile.moveRight$ifelse3
0;JMP
(Tile.moveRight$if3)
@R3 //push pointer
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@Tile.draw
D=A
@R13
M=D
@return63
D=A
@CALL
0;JMP
(return63)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@Tile.moveRight$ifend3
0;JMP
(Tile.moveRight$ifelse3)
@THIS    //push this
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //sub
AM=M-1
D=M
A=A-1
M=M-D
@THIS    //pop this
D=M
@0
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@R3 //push pointer
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@Tile.draw
D=A
@R13
M=D
@return64
D=A
@CALL
0;JMP
(return64)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
(Tile.moveRight$ifend3)
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@RETURN
0;JMP

(Tile.moveLeft)
@0
D=A
(Tile.moveLeft_LOOP)
@Tile.moveLeft_END
D;JEQ
@SP
A=M
M=0
@SP
M=M+1
D=D-1
@Tile.moveLeft_LOOP
0;JMP
(Tile.moveLeft_END)

@ARG //push argument
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //pop pointer
AM=M-1
D=M
@THIS
M=D
@R3 //push pointer
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@Tile.erase
D=A
@R13
M=D
@return65
D=A
@CALL
0;JMP
(return65)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@THIS    //push this
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //sub
AM=M-1
D=M
A=A-1
M=M-D
@THIS    //pop this
D=M
@0
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@R3 //push pointer
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@Tile.check
D=A
@R13
M=D
@return66
D=A
@CALL
0;JMP
(return66)
@SP
AM=M-1
D=M
@Tile.moveLeft$if3
D;JNE
@Tile.moveLeft$ifelse3
0;JMP
(Tile.moveLeft$if3)
@R3 //push pointer
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@Tile.draw
D=A
@R13
M=D
@return67
D=A
@CALL
0;JMP
(return67)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@Tile.moveLeft$ifend3
0;JMP
(Tile.moveLeft$ifelse3)
@THIS    //push this
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@THIS    //pop this
D=M
@0
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@R3 //push pointer
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@Tile.draw
D=A
@R13
M=D
@return68
D=A
@CALL
0;JMP
(return68)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
(Tile.moveLeft$ifend3)
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@RETURN
0;JMP

(Tile.moveUp)
@0
D=A
(Tile.moveUp_LOOP)
@Tile.moveUp_END
D;JEQ
@SP
A=M
M=0
@SP
M=M+1
D=D-1
@Tile.moveUp_LOOP
0;JMP
(Tile.moveUp_END)

@ARG //push argument
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //pop pointer
AM=M-1
D=M
@THIS
M=D
@R3 //push pointer
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@Tile.erase
D=A
@R13
M=D
@return69
D=A
@CALL
0;JMP
(return69)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@THIS    //push this
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //sub
AM=M-1
D=M
A=A-1
M=M-D
@THIS    //pop this
D=M
@1
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@R3 //push pointer
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@Tile.check
D=A
@R13
M=D
@return70
D=A
@CALL
0;JMP
(return70)
@SP
AM=M-1
D=M
@Tile.moveUp$if3
D;JNE
@Tile.moveUp$ifelse3
0;JMP
(Tile.moveUp$if3)
@R3 //push pointer
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@Tile.draw
D=A
@R13
M=D
@return71
D=A
@CALL
0;JMP
(return71)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@Tile.moveUp$ifend3
0;JMP
(Tile.moveUp$ifelse3)
@THIS    //push this
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@THIS    //pop this
D=M
@1
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@R3 //push pointer
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@Tile.draw
D=A
@R13
M=D
@return72
D=A
@CALL
0;JMP
(return72)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
(Tile.moveUp$ifend3)
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@RETURN
0;JMP

(Tile.moveDown)
@0
D=A
(Tile.moveDown_LOOP)
@Tile.moveDown_END
D;JEQ
@SP
A=M
M=0
@SP
M=M+1
D=D-1
@Tile.moveDown_LOOP
0;JMP
(Tile.moveDown_END)

@ARG //push argument
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //pop pointer
AM=M-1
D=M
@THIS
M=D
@R3 //push pointer
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@Tile.erase
D=A
@R13
M=D
@return73
D=A
@CALL
0;JMP
(return73)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@THIS    //push this
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@THIS    //pop this
D=M
@1
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@R3 //push pointer
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@Tile.check
D=A
@R13
M=D
@return74
D=A
@CALL
0;JMP
(return74)
@SP
AM=M-1
D=M
@Tile.moveDown$if3
D;JNE
@Tile.moveDown$ifelse3
0;JMP
(Tile.moveDown$if3)
@R3 //push pointer
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@Tile.draw
D=A
@R13
M=D
@return75
D=A
@CALL
0;JMP
(return75)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@1  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //neg
A=M-1
M=-M
@RETURN
0;JMP

@Tile.moveDown$ifend3
0;JMP
(Tile.moveDown$ifelse3)
@THIS    //push this
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //sub
AM=M-1
D=M
A=A-1
M=M-D
@THIS    //pop this
D=M
@1
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@R3 //push pointer
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@Tile.draw
D=A
@R13
M=D
@return76
D=A
@CALL
0;JMP
(return76)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@RETURN
0;JMP

(Tile.moveDown$ifend3)
(Tile.span)
@0
D=A
(Tile.span_LOOP)
@Tile.span_END
D;JEQ
@SP
A=M
M=0
@SP
M=M+1
D=D-1
@Tile.span_LOOP
0;JMP
(Tile.span_END)

@ARG //push argument
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //pop pointer
AM=M-1
D=M
@THIS
M=D
@R3 //push pointer
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@Tile.erase
D=A
@R13
M=D
@return77
D=A
@CALL
0;JMP
(return77)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@ARG //push argument
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS    //pop this
D=M
@4
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@3  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@THIS    //pop this
D=M
@0
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@THIS    //pop this
D=M
@1
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@R3 //push pointer
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@Tile.check
D=A
@R13
M=D
@return78
D=A
@CALL
0;JMP
(return78)
@SP
AM=M-1
D=M
@Tile.span$if3
D;JNE
@Tile.span$ifelse3
0;JMP
(Tile.span$if3)
@R3 //push pointer
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@Tile.draw
D=A
@R13
M=D
@return79
D=A
@CALL
0;JMP
(return79)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@1  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //neg
A=M-1
M=-M
@RETURN
0;JMP

(Tile.span$ifelse3)
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@RETURN
0;JMP

(Tile.draw)
@3
D=A
(Tile.draw_LOOP)
@Tile.draw_END
D;JEQ
@SP
A=M
M=0
@SP
M=M+1
D=D-1
@Tile.draw_LOOP
0;JMP
(Tile.draw_END)

@ARG //push argument
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //pop pointer
AM=M-1
D=M
@THIS
M=D
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL //pop local
D=M
@0
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL //pop local
D=M
@1
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@Tile.1   //push static
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS    //push this
D=M
@3
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@4  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@Math.multiply
D=A
@R13
M=D
@return80
D=A
@CALL
0;JMP
(return80)
@THIS    //push this
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@SP  //pop pointer
AM=M-1
D=M
@THAT
M=D
@THAT    //push that
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@LCL //pop local
D=M
@2
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
(Tile.draw$while2)
@LCL //push local
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@4  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
D=M-D
M=-1
@lt15
D;JLT
@SP
A=M-1
M=0
(lt15)
@SP  //not
A=M-1
M=!M
@SP
AM=M-1
D=M
@Tile.draw$whileend2
D;JNE
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL //pop local
D=M
@0
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
(Tile.draw$while4)
@LCL //push local
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@4  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
D=M-D
M=-1
@lt16
D;JLT
@SP
A=M-1
M=0
(lt16)
@SP  //not
A=M-1
M=!M
@SP
AM=M-1
D=M
@Tile.draw$whileend4
D;JNE
@LCL //push local
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
D=M-D
M=-1
@lt17
D;JLT
@SP
A=M-1
M=0
(lt17)
@SP
AM=M-1
D=M
@Tile.draw$if5
D;JNE
@Tile.draw$ifelse5
0;JMP
(Tile.draw$if5)
@THIS    //push this
D=M
@4
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
D=D-M
M=-1
@eq18
D;JEQ
@SP
A=M-1
M=0
(eq18)
@SP  //not
A=M-1
M=!M
@SP
AM=M-1
D=M
@Tile.draw$if6
D;JNE
@Tile.draw$ifelse6
0;JMP
(Tile.draw$if6)
@THIS    //push this
D=M
@4
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS    //push this
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@LCL //push local
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@THIS    //push this
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@LCL //push local
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@Tile.0   //push static
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS    //push this
D=M
@3
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@SP  //pop pointer
AM=M-1
D=M
@THAT
M=D
@THAT    //push that
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@4
D=A
@R14
M=D
@Grid.draw
D=A
@R13
M=D
@return81
D=A
@CALL
0;JMP
(return81)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@Tile.draw$ifend6
0;JMP
(Tile.draw$ifelse6)
@Tile.0   //push static
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS    //push this
D=M
@3
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@SP  //pop pointer
AM=M-1
D=M
@THAT
M=D
@THAT    //push that
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@Screen.setColor
D=A
@R13
M=D
@return82
D=A
@CALL
0;JMP
(return82)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@THIS    //push this
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@LCL //push local
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@14  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@Math.multiply
D=A
@R13
M=D
@return83
D=A
@CALL
0;JMP
(return83)
@6  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@THIS    //push this
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@LCL //push local
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@14  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@Math.multiply
D=A
@R13
M=D
@return84
D=A
@CALL
0;JMP
(return84)
@24  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //sub
AM=M-1
D=M
A=A-1
M=M-D
@13  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@13  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@4
D=A
@R14
M=D
@Screen.drawRectangle
D=A
@R13
M=D
@return85
D=A
@CALL
0;JMP
(return85)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@Screen.setColor
D=A
@R13
M=D
@return86
D=A
@CALL
0;JMP
(return86)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
(Tile.draw$ifend6)
(Tile.draw$ifelse5)
@LCL //push local
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@LCL //pop local
D=M
@0
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@LCL //push local
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@LCL //push local
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@LCL //pop local
D=M
@2
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@Tile.draw$while4
0;JMP
(Tile.draw$whileend4)
@LCL //push local
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@LCL //pop local
D=M
@1
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@Tile.draw$while2
0;JMP
(Tile.draw$whileend2)
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@RETURN
0;JMP

(Tile.erase)
@3
D=A
(Tile.erase_LOOP)
@Tile.erase_END
D;JEQ
@SP
A=M
M=0
@SP
M=M+1
D=D-1
@Tile.erase_LOOP
0;JMP
(Tile.erase_END)

@ARG //push argument
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //pop pointer
AM=M-1
D=M
@THIS
M=D
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL //pop local
D=M
@0
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL //pop local
D=M
@1
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@Tile.1   //push static
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS    //push this
D=M
@3
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@4  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@Math.multiply
D=A
@R13
M=D
@return87
D=A
@CALL
0;JMP
(return87)
@THIS    //push this
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@SP  //pop pointer
AM=M-1
D=M
@THAT
M=D
@THAT    //push that
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@LCL //pop local
D=M
@2
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
(Tile.erase$while2)
@LCL //push local
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@4  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
D=M-D
M=-1
@lt19
D;JLT
@SP
A=M-1
M=0
(lt19)
@SP  //not
A=M-1
M=!M
@SP
AM=M-1
D=M
@Tile.erase$whileend2
D;JNE
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL //pop local
D=M
@0
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
(Tile.erase$while4)
@LCL //push local
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@4  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
D=M-D
M=-1
@lt20
D;JLT
@SP
A=M-1
M=0
(lt20)
@SP  //not
A=M-1
M=!M
@SP
AM=M-1
D=M
@Tile.erase$whileend4
D;JNE
@LCL //push local
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
D=M-D
M=-1
@lt21
D;JLT
@SP
A=M-1
M=0
(lt21)
@SP
AM=M-1
D=M
@Tile.erase$if5
D;JNE
@Tile.erase$ifelse5
0;JMP
(Tile.erase$if5)
@THIS    //push this
D=M
@4
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
D=D-M
M=-1
@eq22
D;JEQ
@SP
A=M-1
M=0
(eq22)
@SP  //not
A=M-1
M=!M
@SP
AM=M-1
D=M
@Tile.erase$if6
D;JNE
@Tile.erase$ifelse6
0;JMP
(Tile.erase$if6)
@THIS    //push this
D=M
@4
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS    //push this
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@LCL //push local
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@THIS    //push this
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@LCL //push local
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@1  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //neg
A=M-1
M=-M
@4
D=A
@R14
M=D
@Grid.draw
D=A
@R13
M=D
@return88
D=A
@CALL
0;JMP
(return88)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@Tile.erase$ifend6
0;JMP
(Tile.erase$ifelse6)
@1  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //neg
A=M-1
M=-M
@1
D=A
@R14
M=D
@Screen.setColor
D=A
@R13
M=D
@return89
D=A
@CALL
0;JMP
(return89)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@THIS    //push this
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@LCL //push local
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@14  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@Math.multiply
D=A
@R13
M=D
@return90
D=A
@CALL
0;JMP
(return90)
@6  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@THIS    //push this
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@LCL //push local
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@14  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@Math.multiply
D=A
@R13
M=D
@return91
D=A
@CALL
0;JMP
(return91)
@24  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //sub
AM=M-1
D=M
A=A-1
M=M-D
@13  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@13  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@4
D=A
@R14
M=D
@Screen.drawRectangle
D=A
@R13
M=D
@return92
D=A
@CALL
0;JMP
(return92)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@Screen.setColor
D=A
@R13
M=D
@return93
D=A
@CALL
0;JMP
(return93)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
(Tile.erase$ifend6)
(Tile.erase$ifelse5)
@LCL //push local
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@LCL //pop local
D=M
@0
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@LCL //push local
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@LCL //push local
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@LCL //pop local
D=M
@2
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@Tile.erase$while4
0;JMP
(Tile.erase$whileend4)
@LCL //push local
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@LCL //pop local
D=M
@1
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@Tile.erase$while2
0;JMP
(Tile.erase$whileend2)
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@RETURN
0;JMP

(Screen.init)
@0
D=A
(Screen.init_LOOP)
@Screen.init_END
D;JEQ
@SP
A=M
M=0
@SP
M=M+1
D=D-1
@Screen.init_LOOP
0;JMP
(Screen.init_END)

@8200  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //pop static
AM=M-1
D=M
@Screen.0
M=D
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //pop static
AM=M-1
D=M
@Screen.1
M=D
@1  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //neg
A=M-1
M=-M
@SP  //pop static
AM=M-1
D=M
@Screen.2
M=D
@54  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@Screen.writeCommand
D=A
@R13
M=D
@return94
D=A
@CALL
0;JMP
(return94)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@72  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@Screen.writeData
D=A
@R13
M=D
@return95
D=A
@CALL
0;JMP
(return95)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@58  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@Screen.writeCommand
D=A
@R13
M=D
@return96
D=A
@CALL
0;JMP
(return96)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@85  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@Screen.writeData
D=A
@R13
M=D
@return97
D=A
@CALL
0;JMP
(return97)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@17  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@Screen.writeCommand
D=A
@R13
M=D
@return98
D=A
@CALL
0;JMP
(return98)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@500  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@Sys.wait
D=A
@R13
M=D
@return99
D=A
@CALL
0;JMP
(return99)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@41  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@Screen.writeCommand
D=A
@R13
M=D
@return100
D=A
@CALL
0;JMP
(return100)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@500  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@Sys.wait
D=A
@R13
M=D
@return101
D=A
@CALL
0;JMP
(return101)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@0
D=A
@R14
M=D
@Screen.clearScreen
D=A
@R13
M=D
@return102
D=A
@CALL
0;JMP
(return102)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@RETURN
0;JMP

(Screen.clearScreen)
@1
D=A
(Screen.clearScreen_LOOP)
@Screen.clearScreen_END
D;JEQ
@SP
A=M
M=0
@SP
M=M+1
D=D-1
@Screen.clearScreen_LOOP
0;JMP
(Screen.clearScreen_END)

@Screen.1   //push static
D=M
@SP
A=M
M=D
@SP
M=M+1
@LCL //pop local
D=M
@0
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@Screen.2   //push static
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //pop static
AM=M-1
D=M
@Screen.1
M=D
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@240  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@320  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@4
D=A
@R14
M=D
@Screen.drawRectangle
D=A
@R13
M=D
@return103
D=A
@CALL
0;JMP
(return103)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@LCL //push local
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //pop static
AM=M-1
D=M
@Screen.1
M=D
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@RETURN
0;JMP

(Screen.drawPixel)
@0
D=A
(Screen.drawPixel_LOOP)
@Screen.drawPixel_END
D;JEQ
@SP
A=M
M=0
@SP
M=M+1
D=D-1
@Screen.drawPixel_LOOP
0;JMP
(Screen.drawPixel_END)

@ARG //push argument
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
D=M-D
M=-1
@lt23
D;JLT
@SP
A=M-1
M=0
(lt23)
@ARG //push argument
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@239  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
D=M-D
M=-1
@gt24
D;JGT
@SP
A=M-1
M=0
(gt24)
@SP  //or
AM=M-1
D=M
A=A-1
M=D|M
@ARG //push argument
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
D=M-D
M=-1
@lt25
D;JLT
@SP
A=M-1
M=0
(lt25)
@SP  //or
AM=M-1
D=M
A=A-1
M=D|M
@ARG //push argument
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@319  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
D=M-D
M=-1
@gt26
D;JGT
@SP
A=M-1
M=0
(gt26)
@SP  //or
AM=M-1
D=M
A=A-1
M=D|M
@SP
AM=M-1
D=M
@Screen.drawPixel$if1
D;JNE
@Screen.drawPixel$ifelse1
0;JMP
(Screen.drawPixel$if1)
@7  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@Sys.error
D=A
@R13
M=D
@return104
D=A
@CALL
0;JMP
(return104)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
(Screen.drawPixel$ifelse1)
@42  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@Screen.writeCommand
D=A
@R13
M=D
@return105
D=A
@CALL
0;JMP
(return105)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@ARG //push argument
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@Screen.writeData16
D=A
@R13
M=D
@return106
D=A
@CALL
0;JMP
(return106)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@ARG //push argument
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@Screen.writeData16
D=A
@R13
M=D
@return107
D=A
@CALL
0;JMP
(return107)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@43  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@Screen.writeCommand
D=A
@R13
M=D
@return108
D=A
@CALL
0;JMP
(return108)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@ARG //push argument
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@Screen.writeData16
D=A
@R13
M=D
@return109
D=A
@CALL
0;JMP
(return109)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@ARG //push argument
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@Screen.writeData16
D=A
@R13
M=D
@return110
D=A
@CALL
0;JMP
(return110)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@44  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@Screen.writeCommand
D=A
@R13
M=D
@return111
D=A
@CALL
0;JMP
(return111)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@Screen.1   //push static
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@Screen.writeData16
D=A
@R13
M=D
@return112
D=A
@CALL
0;JMP
(return112)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@RETURN
0;JMP

(Screen.setColor)
@0
D=A
(Screen.setColor_LOOP)
@Screen.setColor_END
D;JEQ
@SP
A=M
M=0
@SP
M=M+1
D=D-1
@Screen.setColor_LOOP
0;JMP
(Screen.setColor_END)

@ARG //push argument
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //pop static
AM=M-1
D=M
@Screen.1
M=D
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@RETURN
0;JMP

(Screen.setBackColor)
@0
D=A
(Screen.setBackColor_LOOP)
@Screen.setBackColor_END
D;JEQ
@SP
A=M
M=0
@SP
M=M+1
D=D-1
@Screen.setBackColor_LOOP
0;JMP
(Screen.setBackColor_END)

@ARG //push argument
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //pop static
AM=M-1
D=M
@Screen.2
M=D
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@RETURN
0;JMP

(Screen.paintPixel)
@0
D=A
(Screen.paintPixel_LOOP)
@Screen.paintPixel_END
D;JEQ
@SP
A=M
M=0
@SP
M=M+1
D=D-1
@Screen.paintPixel_LOOP
0;JMP
(Screen.paintPixel_END)

@Screen.1   //push static
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@Screen.writeData16
D=A
@R13
M=D
@return113
D=A
@CALL
0;JMP
(return113)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@RETURN
0;JMP

(Screen.clearPixel)
@0
D=A
(Screen.clearPixel_LOOP)
@Screen.clearPixel_END
D;JEQ
@SP
A=M
M=0
@SP
M=M+1
D=D-1
@Screen.clearPixel_LOOP
0;JMP
(Screen.clearPixel_END)

@Screen.2   //push static
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@Screen.writeData16
D=A
@R13
M=D
@return114
D=A
@CALL
0;JMP
(return114)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@RETURN
0;JMP

(Screen.drawLine)
@4
D=A
(Screen.drawLine_LOOP)
@Screen.drawLine_END
D;JEQ
@SP
A=M
M=0
@SP
M=M+1
D=D-1
@Screen.drawLine_LOOP
0;JMP
(Screen.drawLine_END)

@ARG //push argument
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG //push argument
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //sub
AM=M-1
D=M
A=A-1
M=M-D
@LCL //pop local
D=M
@0
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@ARG //push argument
D=M
@3
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG //push argument
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //sub
AM=M-1
D=M
A=A-1
M=M-D
@LCL //pop local
D=M
@1
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@LCL //push local
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
D=M-D
M=-1
@lt27
D;JLT
@SP
A=M-1
M=0
(lt27)
@SP
AM=M-1
D=M
@Screen.drawLine$if1
D;JNE
@Screen.drawLine$ifelse1
0;JMP
(Screen.drawLine$if1)
@1  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //neg
A=M-1
M=-M
@LCL //pop local
D=M
@2
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@Screen.drawLine$ifend1
0;JMP
(Screen.drawLine$ifelse1)
@1  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL //pop local
D=M
@2
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
(Screen.drawLine$ifend1)
@LCL //push local
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
D=M-D
M=-1
@lt28
D;JLT
@SP
A=M-1
M=0
(lt28)
@SP
AM=M-1
D=M
@Screen.drawLine$if6
D;JNE
@Screen.drawLine$ifelse6
0;JMP
(Screen.drawLine$if6)
@1  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //neg
A=M-1
M=-M
@LCL //pop local
D=M
@3
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@Screen.drawLine$ifend6
0;JMP
(Screen.drawLine$ifelse6)
@1  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL //pop local
D=M
@3
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
(Screen.drawLine$ifend6)
@LCL //push local
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
D=D-M
M=-1
@eq29
D;JEQ
@SP
A=M-1
M=0
(eq29)
@SP
AM=M-1
D=M
@Screen.drawLine$if11
D;JNE
@Screen.drawLine$ifelse11
0;JMP
(Screen.drawLine$if11)
(Screen.drawLine$while13)
@ARG //push argument
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG //push argument
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
D=D-M
M=-1
@eq30
D;JEQ
@SP
A=M-1
M=0
(eq30)
@SP  //not
A=M-1
M=!M
@SP  //not
A=M-1
M=!M
@SP
AM=M-1
D=M
@Screen.drawLine$whileend13
D;JNE
@ARG //push argument
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG //push argument
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@Screen.drawPixel
D=A
@R13
M=D
@return115
D=A
@CALL
0;JMP
(return115)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@ARG //push argument
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@LCL //push local
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@ARG //pop argument
D=M
@0
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@Screen.drawLine$while13
0;JMP
(Screen.drawLine$whileend13)
@ARG //push argument
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG //push argument
D=M
@3
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@Screen.drawPixel
D=A
@R13
M=D
@return116
D=A
@CALL
0;JMP
(return116)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@RETURN
0;JMP

(Screen.drawLine$ifelse11)
@LCL //push local
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
D=D-M
M=-1
@eq31
D;JEQ
@SP
A=M-1
M=0
(eq31)
@SP
AM=M-1
D=M
@Screen.drawLine$if22
D;JNE
@Screen.drawLine$ifelse22
0;JMP
(Screen.drawLine$if22)
(Screen.drawLine$while24)
@ARG //push argument
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG //push argument
D=M
@3
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
D=D-M
M=-1
@eq32
D;JEQ
@SP
A=M-1
M=0
(eq32)
@SP  //not
A=M-1
M=!M
@SP  //not
A=M-1
M=!M
@SP
AM=M-1
D=M
@Screen.drawLine$whileend24
D;JNE
@ARG //push argument
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG //push argument
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@Screen.drawPixel
D=A
@R13
M=D
@return117
D=A
@CALL
0;JMP
(return117)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@ARG //push argument
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@LCL //push local
D=M
@3
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@ARG //pop argument
D=M
@1
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@Screen.drawLine$while24
0;JMP
(Screen.drawLine$whileend24)
@ARG //push argument
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG //push argument
D=M
@3
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@Screen.drawPixel
D=A
@R13
M=D
@return118
D=A
@CALL
0;JMP
(return118)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@RETURN
0;JMP

(Screen.drawLine$ifelse22)
(Screen.drawLine$while34)
@ARG //push argument
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG //push argument
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
D=D-M
M=-1
@eq33
D;JEQ
@SP
A=M-1
M=0
(eq33)
@ARG //push argument
D=M
@3
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG //push argument
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
D=D-M
M=-1
@eq34
D;JEQ
@SP
A=M-1
M=0
(eq34)
@SP  //and
AM=M-1
D=M
A=A-1
M=D&M
@SP  //not
A=M-1
M=!M
@SP  //not
A=M-1
M=!M
@SP
AM=M-1
D=M
@Screen.drawLine$whileend34
D;JNE
@ARG //push argument
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG //push argument
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@Screen.drawPixel
D=A
@R13
M=D
@return119
D=A
@CALL
0;JMP
(return119)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@ARG //push argument
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG //push argument
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //sub
AM=M-1
D=M
A=A-1
M=M-D
@LCL //push local
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@Math.multiply
D=A
@R13
M=D
@return120
D=A
@CALL
0;JMP
(return120)
@1
D=A
@R14
M=D
@Math.abs
D=A
@R13
M=D
@return121
D=A
@CALL
0;JMP
(return121)
@ARG //push argument
D=M
@3
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG //push argument
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //sub
AM=M-1
D=M
A=A-1
M=M-D
@LCL //push local
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@Math.multiply
D=A
@R13
M=D
@return122
D=A
@CALL
0;JMP
(return122)
@1
D=A
@R14
M=D
@Math.abs
D=A
@R13
M=D
@return123
D=A
@CALL
0;JMP
(return123)
@SP
AM=M-1
D=M
A=A-1
D=M-D
M=-1
@gt35
D;JGT
@SP
A=M-1
M=0
(gt35)
@SP
AM=M-1
D=M
@Screen.drawLine$if37
D;JNE
@Screen.drawLine$ifelse37
0;JMP
(Screen.drawLine$if37)
@ARG //push argument
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@LCL //push local
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@ARG //pop argument
D=M
@0
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@Screen.drawLine$ifend37
0;JMP
(Screen.drawLine$ifelse37)
@ARG //push argument
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@LCL //push local
D=M
@3
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@ARG //pop argument
D=M
@1
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
(Screen.drawLine$ifend37)
@Screen.drawLine$while34
0;JMP
(Screen.drawLine$whileend34)
@ARG //push argument
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG //push argument
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@Screen.drawPixel
D=A
@R13
M=D
@return124
D=A
@CALL
0;JMP
(return124)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@RETURN
0;JMP

(Screen.drawRectangle)
@2
D=A
(Screen.drawRectangle_LOOP)
@Screen.drawRectangle_END
D;JEQ
@SP
A=M
M=0
@SP
M=M+1
D=D-1
@Screen.drawRectangle_LOOP
0;JMP
(Screen.drawRectangle_END)

@ARG //push argument
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG //push argument
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG //push argument
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG //push argument
D=M
@3
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@4
D=A
@R14
M=D
@Screen.setAddrWindow
D=A
@R13
M=D
@return125
D=A
@CALL
0;JMP
(return125)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL //pop local
D=M
@1
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
(Screen.drawRectangle$while4)
@LCL //push local
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG //push argument
D=M
@3
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
D=M-D
M=-1
@lt36
D;JLT
@SP
A=M-1
M=0
(lt36)
@SP  //not
A=M-1
M=!M
@SP
AM=M-1
D=M
@Screen.drawRectangle$whileend4
D;JNE
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL //pop local
D=M
@0
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
(Screen.drawRectangle$while6)
@LCL //push local
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG //push argument
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
D=M-D
M=-1
@lt37
D;JLT
@SP
A=M-1
M=0
(lt37)
@SP  //not
A=M-1
M=!M
@SP
AM=M-1
D=M
@Screen.drawRectangle$whileend6
D;JNE
@Screen.1   //push static
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@Screen.writeData16
D=A
@R13
M=D
@return126
D=A
@CALL
0;JMP
(return126)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@LCL //push local
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@LCL //pop local
D=M
@0
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@Screen.drawRectangle$while6
0;JMP
(Screen.drawRectangle$whileend6)
@LCL //push local
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@LCL //pop local
D=M
@1
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@Screen.drawRectangle$while4
0;JMP
(Screen.drawRectangle$whileend4)
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@RETURN
0;JMP

(Screen.drawCircle)
@4
D=A
(Screen.drawCircle_LOOP)
@Screen.drawCircle_END
D;JEQ
@SP
A=M
M=0
@SP
M=M+1
D=D-1
@Screen.drawCircle_LOOP
0;JMP
(Screen.drawCircle_END)

@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL //pop local
D=M
@0
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
(Screen.drawCircle$while2)
@LCL //push local
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG //push argument
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
D=D-M
M=-1
@eq38
D;JEQ
@SP
A=M-1
M=0
(eq38)
@SP  //not
A=M-1
M=!M
@SP  //not
A=M-1
M=!M
@SP
AM=M-1
D=M
@Screen.drawCircle$whileend2
D;JNE
@ARG //push argument
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG //push argument
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@Math.multiply
D=A
@R13
M=D
@return127
D=A
@CALL
0;JMP
(return127)
@LCL //push local
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@LCL //push local
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@Math.multiply
D=A
@R13
M=D
@return128
D=A
@CALL
0;JMP
(return128)
@SP  //sub
AM=M-1
D=M
A=A-1
M=M-D
@1
D=A
@R14
M=D
@Math.sqrt
D=A
@R13
M=D
@return129
D=A
@CALL
0;JMP
(return129)
@LCL //pop local
D=M
@3
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@ARG //push argument
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@LCL //push local
D=M
@3
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //sub
AM=M-1
D=M
A=A-1
M=M-D
@ARG //push argument
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@LCL //push local
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@ARG //push argument
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@LCL //push local
D=M
@3
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@ARG //push argument
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@LCL //push local
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@4
D=A
@R14
M=D
@Screen.drawLine
D=A
@R13
M=D
@return130
D=A
@CALL
0;JMP
(return130)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@ARG //push argument
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@LCL //push local
D=M
@3
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //sub
AM=M-1
D=M
A=A-1
M=M-D
@ARG //push argument
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@LCL //push local
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //sub
AM=M-1
D=M
A=A-1
M=M-D
@ARG //push argument
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@LCL //push local
D=M
@3
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@ARG //push argument
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@LCL //push local
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //sub
AM=M-1
D=M
A=A-1
M=M-D
@4
D=A
@R14
M=D
@Screen.drawLine
D=A
@R13
M=D
@return131
D=A
@CALL
0;JMP
(return131)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@LCL //push local
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@LCL //pop local
D=M
@0
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@Screen.drawCircle$while2
0;JMP
(Screen.drawCircle$whileend2)
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@RETURN
0;JMP

(Screen.setAddrWindow)
@0
D=A
(Screen.setAddrWindow_LOOP)
@Screen.setAddrWindow_END
D;JEQ
@SP
A=M
M=0
@SP
M=M+1
D=D-1
@Screen.setAddrWindow_LOOP
0;JMP
(Screen.setAddrWindow_END)

@42  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@Screen.writeCommand
D=A
@R13
M=D
@return132
D=A
@CALL
0;JMP
(return132)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@ARG //push argument
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@Screen.writeData16
D=A
@R13
M=D
@return133
D=A
@CALL
0;JMP
(return133)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@ARG //push argument
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG //push argument
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@1  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //sub
AM=M-1
D=M
A=A-1
M=M-D
@1
D=A
@R14
M=D
@Screen.writeData16
D=A
@R13
M=D
@return134
D=A
@CALL
0;JMP
(return134)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@43  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@Screen.writeCommand
D=A
@R13
M=D
@return135
D=A
@CALL
0;JMP
(return135)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@ARG //push argument
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@Screen.writeData16
D=A
@R13
M=D
@return136
D=A
@CALL
0;JMP
(return136)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@ARG //push argument
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG //push argument
D=M
@3
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@1  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //sub
AM=M-1
D=M
A=A-1
M=M-D
@1
D=A
@R14
M=D
@Screen.writeData16
D=A
@R13
M=D
@return137
D=A
@CALL
0;JMP
(return137)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@44  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@Screen.writeCommand
D=A
@R13
M=D
@return138
D=A
@CALL
0;JMP
(return138)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@RETURN
0;JMP

(Screen.writeData)
@0
D=A
(Screen.writeData_LOOP)
@Screen.writeData_END
D;JEQ
@SP
A=M
M=0
@SP
M=M+1
D=D-1
@Screen.writeData_LOOP
0;JMP
(Screen.writeData_END)

@1  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@Screen.0   //push static
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@ARG //push argument
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@SP  //pop pointer
AM=M-1
D=M
@THAT
M=D
@R5 //push temp
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT    //pop that
D=M
@0
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@RETURN
0;JMP

(Screen.writeData16)
@0
D=A
(Screen.writeData16_LOOP)
@Screen.writeData16_END
D;JEQ
@SP
A=M
M=0
@SP
M=M+1
D=D-1
@Screen.writeData16_LOOP
0;JMP
(Screen.writeData16_END)

@2  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@Screen.0   //push static
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@ARG //push argument
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@SP  //pop pointer
AM=M-1
D=M
@THAT
M=D
@R5 //push temp
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT    //pop that
D=M
@0
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@RETURN
0;JMP

(Screen.writeCommand)
@0
D=A
(Screen.writeCommand_LOOP)
@Screen.writeCommand_END
D;JEQ
@SP
A=M
M=0
@SP
M=M+1
D=D-1
@Screen.writeCommand_LOOP
0;JMP
(Screen.writeCommand_END)

@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@Screen.0   //push static
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@ARG //push argument
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@SP  //pop pointer
AM=M-1
D=M
@THAT
M=D
@R5 //push temp
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT    //pop that
D=M
@0
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@RETURN
0;JMP

(Screen.BLACK)
@0
D=A
(Screen.BLACK_LOOP)
@Screen.BLACK_END
D;JEQ
@SP
A=M
M=0
@SP
M=M+1
D=D-1
@Screen.BLACK_LOOP
0;JMP
(Screen.BLACK_END)

@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@RETURN
0;JMP

(Screen.NAVY)
@0
D=A
(Screen.NAVY_LOOP)
@Screen.NAVY_END
D;JEQ
@SP
A=M
M=0
@SP
M=M+1
D=D-1
@Screen.NAVY_LOOP
0;JMP
(Screen.NAVY_END)

@16  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@RETURN
0;JMP

(Screen.BLUE)
@0
D=A
(Screen.BLUE_LOOP)
@Screen.BLUE_END
D;JEQ
@SP
A=M
M=0
@SP
M=M+1
D=D-1
@Screen.BLUE_LOOP
0;JMP
(Screen.BLUE_END)

@31  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@RETURN
0;JMP

(Screen.GREEN)
@0
D=A
(Screen.GREEN_LOOP)
@Screen.GREEN_END
D;JEQ
@SP
A=M
M=0
@SP
M=M+1
D=D-1
@Screen.GREEN_LOOP
0;JMP
(Screen.GREEN_END)

@2016  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@RETURN
0;JMP

(Screen.CYAN)
@0
D=A
(Screen.CYAN_LOOP)
@Screen.CYAN_END
D;JEQ
@SP
A=M
M=0
@SP
M=M+1
D=D-1
@Screen.CYAN_LOOP
0;JMP
(Screen.CYAN_END)

@2047  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@RETURN
0;JMP

(Screen.MAROON)
@0
D=A
(Screen.MAROON_LOOP)
@Screen.MAROON_END
D;JEQ
@SP
A=M
M=0
@SP
M=M+1
D=D-1
@Screen.MAROON_LOOP
0;JMP
(Screen.MAROON_END)

@32767  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //not
A=M-1
M=!M
@RETURN
0;JMP

(Screen.PURPLE)
@0
D=A
(Screen.PURPLE_LOOP)
@Screen.PURPLE_END
D;JEQ
@SP
A=M
M=0
@SP
M=M+1
D=D-1
@Screen.PURPLE_LOOP
0;JMP
(Screen.PURPLE_END)

@32752  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //neg
A=M-1
M=-M
@RETURN
0;JMP

(Screen.OLIVE)
@0
D=A
(Screen.OLIVE_LOOP)
@Screen.OLIVE_END
D;JEQ
@SP
A=M
M=0
@SP
M=M+1
D=D-1
@Screen.OLIVE_LOOP
0;JMP
(Screen.OLIVE_END)

@31744  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //neg
A=M-1
M=-M
@RETURN
0;JMP

(Screen.DARKGREY)
@0
D=A
(Screen.DARKGREY_LOOP)
@Screen.DARKGREY_END
D;JEQ
@SP
A=M
M=0
@SP
M=M+1
D=D-1
@Screen.DARKGREY_LOOP
0;JMP
(Screen.DARKGREY_END)

@31728  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //neg
A=M-1
M=-M
@RETURN
0;JMP

(Screen.LIGHTGREY)
@0
D=A
(Screen.LIGHTGREY_LOOP)
@Screen.LIGHTGREY_END
D;JEQ
@SP
A=M
M=0
@SP
M=M+1
D=D-1
@Screen.LIGHTGREY_LOOP
0;JMP
(Screen.LIGHTGREY_END)

@14824  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //neg
A=M-1
M=-M
@RETURN
0;JMP

(Screen.RED)
@0
D=A
(Screen.RED_LOOP)
@Screen.RED_END
D;JEQ
@SP
A=M
M=0
@SP
M=M+1
D=D-1
@Screen.RED_LOOP
0;JMP
(Screen.RED_END)

@2048  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //neg
A=M-1
M=-M
@RETURN
0;JMP

(Screen.MAGENTA)
@0
D=A
(Screen.MAGENTA_LOOP)
@Screen.MAGENTA_END
D;JEQ
@SP
A=M
M=0
@SP
M=M+1
D=D-1
@Screen.MAGENTA_LOOP
0;JMP
(Screen.MAGENTA_END)

@2017  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //neg
A=M-1
M=-M
@RETURN
0;JMP

(Screen.YELLOW)
@0
D=A
(Screen.YELLOW_LOOP)
@Screen.YELLOW_END
D;JEQ
@SP
A=M
M=0
@SP
M=M+1
D=D-1
@Screen.YELLOW_LOOP
0;JMP
(Screen.YELLOW_END)

@32  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //neg
A=M-1
M=-M
@RETURN
0;JMP

(Screen.ORANGE)
@0
D=A
(Screen.ORANGE_LOOP)
@Screen.ORANGE_END
D;JEQ
@SP
A=M
M=0
@SP
M=M+1
D=D-1
@Screen.ORANGE_LOOP
0;JMP
(Screen.ORANGE_END)

@736  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //neg
A=M-1
M=-M
@RETURN
0;JMP

(Screen.WHITE)
@0
D=A
(Screen.WHITE_LOOP)
@Screen.WHITE_END
D;JEQ
@SP
A=M
M=0
@SP
M=M+1
D=D-1
@Screen.WHITE_LOOP
0;JMP
(Screen.WHITE_END)

@1  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //neg
A=M-1
M=-M
@RETURN
0;JMP

(Output.init)
@0
D=A
(Output.init_LOOP)
@Output.init_END
D;JEQ
@SP
A=M
M=0
@SP
M=M+1
D=D-1
@Output.init_LOOP
0;JMP
(Output.init_END)

@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //pop static
AM=M-1
D=M
@Output.1
M=D
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //pop static
AM=M-1
D=M
@Output.0
M=D
@6  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@String.new
D=A
@R13
M=D
@return139
D=A
@CALL
0;JMP
(return139)
@SP  //pop static
AM=M-1
D=M
@Output.2
M=D
@8  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@Array.new
D=A
@R13
M=D
@return140
D=A
@CALL
0;JMP
(return140)
@SP  //pop static
AM=M-1
D=M
@Output.4
M=D
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@Output.4   //push static
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@SP  //pop pointer
AM=M-1
D=M
@THAT
M=D
@R5 //push temp
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT    //pop that
D=M
@0
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@1  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@Output.4   //push static
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@1  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@SP  //pop pointer
AM=M-1
D=M
@THAT
M=D
@R5 //push temp
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT    //pop that
D=M
@0
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@2  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@Output.4   //push static
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@2  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@SP  //pop pointer
AM=M-1
D=M
@THAT
M=D
@R5 //push temp
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT    //pop that
D=M
@0
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@3  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@Output.4   //push static
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@4  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@SP  //pop pointer
AM=M-1
D=M
@THAT
M=D
@R5 //push temp
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT    //pop that
D=M
@0
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@4  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@Output.4   //push static
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@8  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@SP  //pop pointer
AM=M-1
D=M
@THAT
M=D
@R5 //push temp
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT    //pop that
D=M
@0
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@5  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@Output.4   //push static
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@16  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@SP  //pop pointer
AM=M-1
D=M
@THAT
M=D
@R5 //push temp
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT    //pop that
D=M
@0
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@6  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@Output.4   //push static
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@32  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@SP  //pop pointer
AM=M-1
D=M
@THAT
M=D
@R5 //push temp
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT    //pop that
D=M
@0
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@7  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@Output.4   //push static
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@64  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@SP  //pop pointer
AM=M-1
D=M
@THAT
M=D
@R5 //push temp
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT    //pop that
D=M
@0
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@0
D=A
@R14
M=D
@Output.initMap
D=A
@R13
M=D
@return141
D=A
@CALL
0;JMP
(return141)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@RETURN
0;JMP

(Output.initMap)
@0
D=A
(Output.initMap_LOOP)
@Output.initMap_END
D;JEQ
@SP
A=M
M=0
@SP
M=M+1
D=D-1
@Output.initMap_LOOP
0;JMP
(Output.initMap_END)

@127  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@Array.new
D=A
@R13
M=D
@return142
D=A
@CALL
0;JMP
(return142)
@SP  //pop static
AM=M-1
D=M
@Output.3
M=D
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@63  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@63  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@63  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@63  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@63  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@63  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@63  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@63  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@63  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@12
D=A
@R14
M=D
@Output.create
D=A
@R13
M=D
@return143
D=A
@CALL
0;JMP
(return143)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@10  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@63  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@63  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@63  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@63  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@63  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@63  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@63  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@63  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@63  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@12
D=A
@R14
M=D
@Output.create
D=A
@R13
M=D
@return144
D=A
@CALL
0;JMP
(return144)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@32  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@12
D=A
@R14
M=D
@Output.create
D=A
@R13
M=D
@return145
D=A
@CALL
0;JMP
(return145)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@33  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@12  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@30  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@30  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@30  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@12  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@12  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@12  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@12  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@12
D=A
@R14
M=D
@Output.create
D=A
@R13
M=D
@return146
D=A
@CALL
0;JMP
(return146)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@34  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@54  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@54  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@20  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@12
D=A
@R14
M=D
@Output.create
D=A
@R13
M=D
@return147
D=A
@CALL
0;JMP
(return147)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@35  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@18  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@18  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@63  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@18  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@18  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@63  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@18  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@18  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@12
D=A
@R14
M=D
@Output.create
D=A
@R13
M=D
@return148
D=A
@CALL
0;JMP
(return148)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@36  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@12  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@30  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@51  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@3  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@30  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@48  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@51  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@30  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@12  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@12  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@12
D=A
@R14
M=D
@Output.create
D=A
@R13
M=D
@return149
D=A
@CALL
0;JMP
(return149)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@37  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@35  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@51  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@24  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@12  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@6  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@51  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@49  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@12
D=A
@R14
M=D
@Output.create
D=A
@R13
M=D
@return150
D=A
@CALL
0;JMP
(return150)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@38  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@12  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@30  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@30  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@12  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@54  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@27  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@27  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@27  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@54  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@12
D=A
@R14
M=D
@Output.create
D=A
@R13
M=D
@return151
D=A
@CALL
0;JMP
(return151)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@39  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@12  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@12  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@6  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@12
D=A
@R14
M=D
@Output.create
D=A
@R13
M=D
@return152
D=A
@CALL
0;JMP
(return152)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@40  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@24  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@12  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@6  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@6  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@6  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@6  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@6  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@12  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@24  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@12
D=A
@R14
M=D
@Output.create
D=A
@R13
M=D
@return153
D=A
@CALL
0;JMP
(return153)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@41  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@6  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@12  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@24  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@24  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@24  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@24  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@24  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@12  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@6  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@12
D=A
@R14
M=D
@Output.create
D=A
@R13
M=D
@return154
D=A
@CALL
0;JMP
(return154)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@42  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@51  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@30  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@63  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@30  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@51  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@12
D=A
@R14
M=D
@Output.create
D=A
@R13
M=D
@return155
D=A
@CALL
0;JMP
(return155)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@43  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@12  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@12  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@63  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@12  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@12  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@12
D=A
@R14
M=D
@Output.create
D=A
@R13
M=D
@return156
D=A
@CALL
0;JMP
(return156)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@44  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@12  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@12  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@6  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@12
D=A
@R14
M=D
@Output.create
D=A
@R13
M=D
@return157
D=A
@CALL
0;JMP
(return157)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@45  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@63  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@12
D=A
@R14
M=D
@Output.create
D=A
@R13
M=D
@return158
D=A
@CALL
0;JMP
(return158)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@46  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@12  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@12  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@12
D=A
@R14
M=D
@Output.create
D=A
@R13
M=D
@return159
D=A
@CALL
0;JMP
(return159)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@47  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@32  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@48  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@24  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@12  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@6  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@3  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@1  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@12
D=A
@R14
M=D
@Output.create
D=A
@R13
M=D
@return160
D=A
@CALL
0;JMP
(return160)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@48  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@12  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@30  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@51  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@51  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@51  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@51  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@51  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@30  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@12  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@12
D=A
@R14
M=D
@Output.create
D=A
@R13
M=D
@return161
D=A
@CALL
0;JMP
(return161)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@49  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@12  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@14  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@15  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@12  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@12  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@12  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@12  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@12  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@63  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@12
D=A
@R14
M=D
@Output.create
D=A
@R13
M=D
@return162
D=A
@CALL
0;JMP
(return162)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@50  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@30  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@51  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@48  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@24  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@12  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@6  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@3  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@51  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@63  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@12
D=A
@R14
M=D
@Output.create
D=A
@R13
M=D
@return163
D=A
@CALL
0;JMP
(return163)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@51  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@30  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@51  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@48  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@48  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@28  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@48  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@48  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@51  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@30  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@12
D=A
@R14
M=D
@Output.create
D=A
@R13
M=D
@return164
D=A
@CALL
0;JMP
(return164)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@52  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@16  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@24  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@28  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@26  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@25  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@63  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@24  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@24  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@60  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@12
D=A
@R14
M=D
@Output.create
D=A
@R13
M=D
@return165
D=A
@CALL
0;JMP
(return165)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@53  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@63  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@3  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@3  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@31  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@48  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@48  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@48  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@51  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@30  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@12
D=A
@R14
M=D
@Output.create
D=A
@R13
M=D
@return166
D=A
@CALL
0;JMP
(return166)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@54  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@28  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@6  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@3  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@3  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@31  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@51  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@51  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@51  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@30  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@12
D=A
@R14
M=D
@Output.create
D=A
@R13
M=D
@return167
D=A
@CALL
0;JMP
(return167)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@55  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@63  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@49  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@48  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@48  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@24  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@12  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@12  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@12  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@12  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@12
D=A
@R14
M=D
@Output.create
D=A
@R13
M=D
@return168
D=A
@CALL
0;JMP
(return168)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@56  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@30  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@51  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@51  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@51  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@30  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@51  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@51  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@51  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@30  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@12
D=A
@R14
M=D
@Output.create
D=A
@R13
M=D
@return169
D=A
@CALL
0;JMP
(return169)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@57  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@30  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@51  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@51  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@51  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@62  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@48  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@48  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@24  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@14  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@12
D=A
@R14
M=D
@Output.create
D=A
@R13
M=D
@return170
D=A
@CALL
0;JMP
(return170)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@58  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@12  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@12  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@12  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@12  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@12
D=A
@R14
M=D
@Output.create
D=A
@R13
M=D
@return171
D=A
@CALL
0;JMP
(return171)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@59  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@12  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@12  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@12  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@12  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@6  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@12
D=A
@R14
M=D
@Output.create
D=A
@R13
M=D
@return172
D=A
@CALL
0;JMP
(return172)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@60  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@24  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@12  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@6  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@3  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@6  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@12  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@24  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@12
D=A
@R14
M=D
@Output.create
D=A
@R13
M=D
@return173
D=A
@CALL
0;JMP
(return173)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@61  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@63  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@63  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@12
D=A
@R14
M=D
@Output.create
D=A
@R13
M=D
@return174
D=A
@CALL
0;JMP
(return174)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@62  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@3  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@6  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@12  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@24  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@12  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@6  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@3  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@12
D=A
@R14
M=D
@Output.create
D=A
@R13
M=D
@return175
D=A
@CALL
0;JMP
(return175)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@64  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@30  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@51  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@51  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@59  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@59  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@59  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@27  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@3  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@30  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@12
D=A
@R14
M=D
@Output.create
D=A
@R13
M=D
@return176
D=A
@CALL
0;JMP
(return176)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@63  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@30  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@51  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@51  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@24  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@12  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@12  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@12  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@12  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@12
D=A
@R14
M=D
@Output.create
D=A
@R13
M=D
@return177
D=A
@CALL
0;JMP
(return177)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@65  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@12  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@30  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@51  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@51  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@63  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@51  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@51  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@51  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@51  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@12
D=A
@R14
M=D
@Output.create
D=A
@R13
M=D
@return178
D=A
@CALL
0;JMP
(return178)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@66  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@31  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@51  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@51  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@51  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@31  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@51  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@51  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@51  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@31  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@12
D=A
@R14
M=D
@Output.create
D=A
@R13
M=D
@return179
D=A
@CALL
0;JMP
(return179)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@67  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@28  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@54  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@35  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@3  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@3  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@3  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@35  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@54  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@28  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@12
D=A
@R14
M=D
@Output.create
D=A
@R13
M=D
@return180
D=A
@CALL
0;JMP
(return180)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@68  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@15  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@27  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@51  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@51  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@51  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@51  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@51  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@27  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@15  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@12
D=A
@R14
M=D
@Output.create
D=A
@R13
M=D
@return181
D=A
@CALL
0;JMP
(return181)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@69  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@63  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@51  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@35  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@11  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@15  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@11  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@35  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@51  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@63  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@12
D=A
@R14
M=D
@Output.create
D=A
@R13
M=D
@return182
D=A
@CALL
0;JMP
(return182)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@70  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@63  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@51  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@35  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@11  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@15  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@11  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@3  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@3  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@3  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@12
D=A
@R14
M=D
@Output.create
D=A
@R13
M=D
@return183
D=A
@CALL
0;JMP
(return183)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@71  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@28  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@54  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@35  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@3  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@59  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@51  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@51  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@54  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@44  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@12
D=A
@R14
M=D
@Output.create
D=A
@R13
M=D
@return184
D=A
@CALL
0;JMP
(return184)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@72  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@51  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@51  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@51  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@51  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@63  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@51  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@51  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@51  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@51  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@12
D=A
@R14
M=D
@Output.create
D=A
@R13
M=D
@return185
D=A
@CALL
0;JMP
(return185)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@73  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@30  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@12  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@12  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@12  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@12  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@12  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@12  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@12  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@30  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@12
D=A
@R14
M=D
@Output.create
D=A
@R13
M=D
@return186
D=A
@CALL
0;JMP
(return186)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@74  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@60  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@24  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@24  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@24  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@24  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@24  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@27  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@27  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@14  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@12
D=A
@R14
M=D
@Output.create
D=A
@R13
M=D
@return187
D=A
@CALL
0;JMP
(return187)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@75  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@51  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@51  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@51  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@27  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@15  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@27  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@51  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@51  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@51  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@12
D=A
@R14
M=D
@Output.create
D=A
@R13
M=D
@return188
D=A
@CALL
0;JMP
(return188)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@76  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@3  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@3  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@3  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@3  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@3  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@3  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@35  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@51  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@63  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@12
D=A
@R14
M=D
@Output.create
D=A
@R13
M=D
@return189
D=A
@CALL
0;JMP
(return189)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@77  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@33  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@51  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@63  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@63  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@51  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@51  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@51  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@51  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@51  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@12
D=A
@R14
M=D
@Output.create
D=A
@R13
M=D
@return190
D=A
@CALL
0;JMP
(return190)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@78  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@51  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@51  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@55  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@55  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@63  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@59  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@59  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@51  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@51  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@12
D=A
@R14
M=D
@Output.create
D=A
@R13
M=D
@return191
D=A
@CALL
0;JMP
(return191)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@79  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@30  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@51  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@51  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@51  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@51  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@51  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@51  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@51  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@30  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@12
D=A
@R14
M=D
@Output.create
D=A
@R13
M=D
@return192
D=A
@CALL
0;JMP
(return192)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@80  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@31  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@51  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@51  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@51  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@31  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@3  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@3  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@3  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@3  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@12
D=A
@R14
M=D
@Output.create
D=A
@R13
M=D
@return193
D=A
@CALL
0;JMP
(return193)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@81  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@30  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@51  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@51  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@51  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@51  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@51  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@63  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@59  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@30  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@48  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@12
D=A
@R14
M=D
@Output.create
D=A
@R13
M=D
@return194
D=A
@CALL
0;JMP
(return194)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@82  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@31  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@51  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@51  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@51  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@31  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@27  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@51  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@51  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@51  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@12
D=A
@R14
M=D
@Output.create
D=A
@R13
M=D
@return195
D=A
@CALL
0;JMP
(return195)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@83  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@30  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@51  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@51  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@6  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@28  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@48  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@51  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@51  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@30  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@12
D=A
@R14
M=D
@Output.create
D=A
@R13
M=D
@return196
D=A
@CALL
0;JMP
(return196)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@84  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@63  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@63  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@45  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@12  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@12  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@12  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@12  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@12  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@30  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@12
D=A
@R14
M=D
@Output.create
D=A
@R13
M=D
@return197
D=A
@CALL
0;JMP
(return197)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@85  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@51  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@51  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@51  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@51  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@51  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@51  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@51  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@51  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@30  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@12
D=A
@R14
M=D
@Output.create
D=A
@R13
M=D
@return198
D=A
@CALL
0;JMP
(return198)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@86  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@51  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@51  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@51  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@51  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@51  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@30  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@30  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@12  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@12  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@12
D=A
@R14
M=D
@Output.create
D=A
@R13
M=D
@return199
D=A
@CALL
0;JMP
(return199)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@87  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@51  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@51  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@51  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@51  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@51  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@63  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@63  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@63  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@18  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@12
D=A
@R14
M=D
@Output.create
D=A
@R13
M=D
@return200
D=A
@CALL
0;JMP
(return200)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@88  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@51  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@51  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@30  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@30  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@12  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@30  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@30  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@51  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@51  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@12
D=A
@R14
M=D
@Output.create
D=A
@R13
M=D
@return201
D=A
@CALL
0;JMP
(return201)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@89  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@51  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@51  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@51  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@51  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@30  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@12  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@12  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@12  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@30  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@12
D=A
@R14
M=D
@Output.create
D=A
@R13
M=D
@return202
D=A
@CALL
0;JMP
(return202)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@90  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@63  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@51  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@49  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@24  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@12  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@6  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@35  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@51  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@63  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@12
D=A
@R14
M=D
@Output.create
D=A
@R13
M=D
@return203
D=A
@CALL
0;JMP
(return203)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@91  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@30  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@6  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@6  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@6  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@6  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@6  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@6  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@6  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@30  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@12
D=A
@R14
M=D
@Output.create
D=A
@R13
M=D
@return204
D=A
@CALL
0;JMP
(return204)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@92  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@1  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@3  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@6  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@12  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@24  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@48  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@32  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@12
D=A
@R14
M=D
@Output.create
D=A
@R13
M=D
@return205
D=A
@CALL
0;JMP
(return205)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@93  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@30  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@24  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@24  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@24  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@24  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@24  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@24  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@24  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@30  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@12
D=A
@R14
M=D
@Output.create
D=A
@R13
M=D
@return206
D=A
@CALL
0;JMP
(return206)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@94  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@8  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@28  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@54  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@12
D=A
@R14
M=D
@Output.create
D=A
@R13
M=D
@return207
D=A
@CALL
0;JMP
(return207)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@95  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@63  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@12
D=A
@R14
M=D
@Output.create
D=A
@R13
M=D
@return208
D=A
@CALL
0;JMP
(return208)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@96  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@6  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@12  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@24  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@12
D=A
@R14
M=D
@Output.create
D=A
@R13
M=D
@return209
D=A
@CALL
0;JMP
(return209)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@97  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@14  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@24  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@30  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@27  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@27  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@54  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@12
D=A
@R14
M=D
@Output.create
D=A
@R13
M=D
@return210
D=A
@CALL
0;JMP
(return210)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@98  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@3  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@3  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@3  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@15  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@27  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@51  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@51  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@51  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@30  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@12
D=A
@R14
M=D
@Output.create
D=A
@R13
M=D
@return211
D=A
@CALL
0;JMP
(return211)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@99  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@30  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@51  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@3  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@3  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@51  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@30  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@12
D=A
@R14
M=D
@Output.create
D=A
@R13
M=D
@return212
D=A
@CALL
0;JMP
(return212)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@100  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@48  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@48  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@48  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@60  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@54  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@51  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@51  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@51  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@30  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@12
D=A
@R14
M=D
@Output.create
D=A
@R13
M=D
@return213
D=A
@CALL
0;JMP
(return213)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@101  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@30  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@51  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@63  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@3  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@51  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@30  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@12
D=A
@R14
M=D
@Output.create
D=A
@R13
M=D
@return214
D=A
@CALL
0;JMP
(return214)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@102  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@28  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@54  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@38  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@6  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@15  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@6  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@6  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@6  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@15  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@12
D=A
@R14
M=D
@Output.create
D=A
@R13
M=D
@return215
D=A
@CALL
0;JMP
(return215)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@103  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@30  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@51  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@51  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@51  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@62  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@48  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@51  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@30  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@12
D=A
@R14
M=D
@Output.create
D=A
@R13
M=D
@return216
D=A
@CALL
0;JMP
(return216)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@104  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@3  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@3  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@3  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@27  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@55  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@51  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@51  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@51  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@51  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@12
D=A
@R14
M=D
@Output.create
D=A
@R13
M=D
@return217
D=A
@CALL
0;JMP
(return217)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@105  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@12  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@12  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@14  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@12  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@12  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@12  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@12  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@30  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@12
D=A
@R14
M=D
@Output.create
D=A
@R13
M=D
@return218
D=A
@CALL
0;JMP
(return218)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@106  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@48  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@48  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@56  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@48  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@48  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@48  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@48  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@51  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@30  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@12
D=A
@R14
M=D
@Output.create
D=A
@R13
M=D
@return219
D=A
@CALL
0;JMP
(return219)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@107  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@3  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@3  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@3  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@51  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@27  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@15  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@15  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@27  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@51  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@12
D=A
@R14
M=D
@Output.create
D=A
@R13
M=D
@return220
D=A
@CALL
0;JMP
(return220)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@108  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@14  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@12  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@12  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@12  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@12  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@12  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@12  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@12  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@30  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@12
D=A
@R14
M=D
@Output.create
D=A
@R13
M=D
@return221
D=A
@CALL
0;JMP
(return221)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@109  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@29  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@63  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@43  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@43  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@43  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@43  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@12
D=A
@R14
M=D
@Output.create
D=A
@R13
M=D
@return222
D=A
@CALL
0;JMP
(return222)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@110  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@29  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@51  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@51  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@51  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@51  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@51  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@12
D=A
@R14
M=D
@Output.create
D=A
@R13
M=D
@return223
D=A
@CALL
0;JMP
(return223)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@111  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@30  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@51  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@51  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@51  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@51  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@30  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@12
D=A
@R14
M=D
@Output.create
D=A
@R13
M=D
@return224
D=A
@CALL
0;JMP
(return224)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@112  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@30  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@51  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@51  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@51  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@31  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@3  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@3  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@12
D=A
@R14
M=D
@Output.create
D=A
@R13
M=D
@return225
D=A
@CALL
0;JMP
(return225)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@113  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@30  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@51  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@51  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@51  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@62  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@48  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@48  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@12
D=A
@R14
M=D
@Output.create
D=A
@R13
M=D
@return226
D=A
@CALL
0;JMP
(return226)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@114  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@29  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@55  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@51  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@3  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@3  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@7  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@12
D=A
@R14
M=D
@Output.create
D=A
@R13
M=D
@return227
D=A
@CALL
0;JMP
(return227)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@115  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@30  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@51  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@6  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@24  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@51  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@30  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@12
D=A
@R14
M=D
@Output.create
D=A
@R13
M=D
@return228
D=A
@CALL
0;JMP
(return228)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@116  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@4  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@6  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@6  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@15  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@6  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@6  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@6  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@54  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@28  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@12
D=A
@R14
M=D
@Output.create
D=A
@R13
M=D
@return229
D=A
@CALL
0;JMP
(return229)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@117  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@27  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@27  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@27  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@27  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@27  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@54  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@12
D=A
@R14
M=D
@Output.create
D=A
@R13
M=D
@return230
D=A
@CALL
0;JMP
(return230)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@118  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@51  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@51  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@51  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@51  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@30  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@12  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@12
D=A
@R14
M=D
@Output.create
D=A
@R13
M=D
@return231
D=A
@CALL
0;JMP
(return231)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@119  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@51  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@51  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@51  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@63  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@63  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@18  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@12
D=A
@R14
M=D
@Output.create
D=A
@R13
M=D
@return232
D=A
@CALL
0;JMP
(return232)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@120  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@51  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@30  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@12  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@12  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@30  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@51  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@12
D=A
@R14
M=D
@Output.create
D=A
@R13
M=D
@return233
D=A
@CALL
0;JMP
(return233)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@121  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@51  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@51  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@51  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@62  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@48  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@24  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@15  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@12
D=A
@R14
M=D
@Output.create
D=A
@R13
M=D
@return234
D=A
@CALL
0;JMP
(return234)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@122  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@63  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@27  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@12  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@6  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@51  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@63  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@12
D=A
@R14
M=D
@Output.create
D=A
@R13
M=D
@return235
D=A
@CALL
0;JMP
(return235)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@123  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@56  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@12  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@12  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@12  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@7  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@12  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@12  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@12  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@56  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@12
D=A
@R14
M=D
@Output.create
D=A
@R13
M=D
@return236
D=A
@CALL
0;JMP
(return236)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@124  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@12  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@12  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@12  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@12  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@12  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@12  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@12  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@12  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@12  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@12
D=A
@R14
M=D
@Output.create
D=A
@R13
M=D
@return237
D=A
@CALL
0;JMP
(return237)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@125  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@7  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@12  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@12  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@12  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@56  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@12  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@12  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@12  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@7  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@12
D=A
@R14
M=D
@Output.create
D=A
@R13
M=D
@return238
D=A
@CALL
0;JMP
(return238)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@126  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@38  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@45  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@25  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@12
D=A
@R14
M=D
@Output.create
D=A
@R13
M=D
@return239
D=A
@CALL
0;JMP
(return239)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@RETURN
0;JMP

(Output.create)
@1
D=A
(Output.create_LOOP)
@Output.create_END
D;JEQ
@SP
A=M
M=0
@SP
M=M+1
D=D-1
@Output.create_LOOP
0;JMP
(Output.create_END)

@11  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@Array.new
D=A
@R13
M=D
@return240
D=A
@CALL
0;JMP
(return240)
@LCL //pop local
D=M
@0
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@ARG //push argument
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@Output.3   //push static
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@LCL //push local
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@SP  //pop pointer
AM=M-1
D=M
@THAT
M=D
@R5 //push temp
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT    //pop that
D=M
@0
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL //push local
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@ARG //push argument
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@SP  //pop pointer
AM=M-1
D=M
@THAT
M=D
@R5 //push temp
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT    //pop that
D=M
@0
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@1  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL //push local
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@ARG //push argument
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@SP  //pop pointer
AM=M-1
D=M
@THAT
M=D
@R5 //push temp
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT    //pop that
D=M
@0
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@2  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL //push local
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@ARG //push argument
D=M
@3
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@SP  //pop pointer
AM=M-1
D=M
@THAT
M=D
@R5 //push temp
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT    //pop that
D=M
@0
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@3  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL //push local
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@ARG //push argument
D=M
@4
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@SP  //pop pointer
AM=M-1
D=M
@THAT
M=D
@R5 //push temp
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT    //pop that
D=M
@0
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@4  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL //push local
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@ARG //push argument
D=M
@5
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@SP  //pop pointer
AM=M-1
D=M
@THAT
M=D
@R5 //push temp
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT    //pop that
D=M
@0
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@5  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL //push local
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@ARG //push argument
D=M
@6
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@SP  //pop pointer
AM=M-1
D=M
@THAT
M=D
@R5 //push temp
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT    //pop that
D=M
@0
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@6  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL //push local
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@ARG //push argument
D=M
@7
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@SP  //pop pointer
AM=M-1
D=M
@THAT
M=D
@R5 //push temp
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT    //pop that
D=M
@0
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@7  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL //push local
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@ARG //push argument
D=M
@8
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@SP  //pop pointer
AM=M-1
D=M
@THAT
M=D
@R5 //push temp
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT    //pop that
D=M
@0
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@8  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL //push local
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@ARG //push argument
D=M
@9
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@SP  //pop pointer
AM=M-1
D=M
@THAT
M=D
@R5 //push temp
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT    //pop that
D=M
@0
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@9  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL //push local
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@ARG //push argument
D=M
@10
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@SP  //pop pointer
AM=M-1
D=M
@THAT
M=D
@R5 //push temp
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT    //pop that
D=M
@0
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@10  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL //push local
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@ARG //push argument
D=M
@11
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@SP  //pop pointer
AM=M-1
D=M
@THAT
M=D
@R5 //push temp
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT    //pop that
D=M
@0
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@RETURN
0;JMP

(Output.drawChar)
@3
D=A
(Output.drawChar_LOOP)
@Output.drawChar_END
D;JEQ
@SP
A=M
M=0
@SP
M=M+1
D=D-1
@Output.drawChar_LOOP
0;JMP
(Output.drawChar_END)

@Output.0   //push static
D=M
@SP
A=M
M=D
@SP
M=M+1
@8  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@Math.multiply
D=A
@R13
M=D
@return241
D=A
@CALL
0;JMP
(return241)
@Output.1   //push static
D=M
@SP
A=M
M=D
@SP
M=M+1
@11  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@Math.multiply
D=A
@R13
M=D
@return242
D=A
@CALL
0;JMP
(return242)
@1  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@8  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@11  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@4
D=A
@R14
M=D
@Screen.setAddrWindow
D=A
@R13
M=D
@return243
D=A
@CALL
0;JMP
(return243)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@Output.3   //push static
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG //push argument
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@SP  //pop pointer
AM=M-1
D=M
@THAT
M=D
@THAT    //push that
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@LCL //pop local
D=M
@0
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL //pop local
D=M
@1
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
(Output.drawChar$while4)
@LCL //push local
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@11  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
D=M-D
M=-1
@lt39
D;JLT
@SP
A=M-1
M=0
(lt39)
@SP  //not
A=M-1
M=!M
@SP
AM=M-1
D=M
@Output.drawChar$whileend4
D;JNE
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL //pop local
D=M
@2
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
(Output.drawChar$while6)
@LCL //push local
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@8  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
D=M-D
M=-1
@lt40
D;JLT
@SP
A=M-1
M=0
(lt40)
@SP  //not
A=M-1
M=!M
@SP
AM=M-1
D=M
@Output.drawChar$whileend6
D;JNE
@LCL //push local
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@LCL //push local
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@SP  //pop pointer
AM=M-1
D=M
@THAT
M=D
@THAT    //push that
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@Output.4   //push static
D=M
@SP
A=M
M=D
@SP
M=M+1
@LCL //push local
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@SP  //pop pointer
AM=M-1
D=M
@THAT
M=D
@THAT    //push that
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //and
AM=M-1
D=M
A=A-1
M=D&M
@SP
AM=M-1
D=M
@Output.drawChar$if7
D;JNE
@Output.drawChar$ifelse7
0;JMP
(Output.drawChar$if7)
@0
D=A
@R14
M=D
@Screen.paintPixel
D=A
@R13
M=D
@return244
D=A
@CALL
0;JMP
(return244)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@Output.drawChar$ifend7
0;JMP
(Output.drawChar$ifelse7)
@0
D=A
@R14
M=D
@Screen.clearPixel
D=A
@R13
M=D
@return245
D=A
@CALL
0;JMP
(return245)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
(Output.drawChar$ifend7)
@LCL //push local
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@LCL //pop local
D=M
@2
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@Output.drawChar$while6
0;JMP
(Output.drawChar$whileend6)
@LCL //push local
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@LCL //pop local
D=M
@1
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@Output.drawChar$while4
0;JMP
(Output.drawChar$whileend4)
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@RETURN
0;JMP

(Output.moveCursor)
@0
D=A
(Output.moveCursor_LOOP)
@Output.moveCursor_END
D;JEQ
@SP
A=M
M=0
@SP
M=M+1
D=D-1
@Output.moveCursor_LOOP
0;JMP
(Output.moveCursor_END)

@ARG //push argument
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
D=M-D
M=-1
@lt41
D;JLT
@SP
A=M-1
M=0
(lt41)
@ARG //push argument
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@28  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
D=M-D
M=-1
@gt42
D;JGT
@SP
A=M-1
M=0
(gt42)
@SP  //or
AM=M-1
D=M
A=A-1
M=D|M
@ARG //push argument
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
D=M-D
M=-1
@lt43
D;JLT
@SP
A=M-1
M=0
(lt43)
@SP  //or
AM=M-1
D=M
A=A-1
M=D|M
@ARG //push argument
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@29  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
D=M-D
M=-1
@gt44
D;JGT
@SP
A=M-1
M=0
(gt44)
@SP  //or
AM=M-1
D=M
A=A-1
M=D|M
@SP
AM=M-1
D=M
@Output.moveCursor$if1
D;JNE
@Output.moveCursor$ifelse1
0;JMP
(Output.moveCursor$if1)
@20  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@Sys.error
D=A
@R13
M=D
@return246
D=A
@CALL
0;JMP
(return246)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
(Output.moveCursor$ifelse1)
@ARG //push argument
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //pop static
AM=M-1
D=M
@Output.0
M=D
@ARG //push argument
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //pop static
AM=M-1
D=M
@Output.1
M=D
@32  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@Output.drawChar
D=A
@R13
M=D
@return247
D=A
@CALL
0;JMP
(return247)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@RETURN
0;JMP

(Output.printChar)
@0
D=A
(Output.printChar_LOOP)
@Output.printChar_END
D;JEQ
@SP
A=M
M=0
@SP
M=M+1
D=D-1
@Output.printChar_LOOP
0;JMP
(Output.printChar_END)

@ARG //push argument
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@13  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
D=D-M
M=-1
@eq45
D;JEQ
@SP
A=M-1
M=0
(eq45)
@SP
AM=M-1
D=M
@Output.printChar$if1
D;JNE
@Output.printChar$ifelse1
0;JMP
(Output.printChar$if1)
@0
D=A
@R14
M=D
@Output.println
D=A
@R13
M=D
@return248
D=A
@CALL
0;JMP
(return248)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@Output.printChar$ifend1
0;JMP
(Output.printChar$ifelse1)
@ARG //push argument
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@127  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
D=D-M
M=-1
@eq46
D;JEQ
@SP
A=M-1
M=0
(eq46)
@SP
AM=M-1
D=M
@Output.printChar$if6
D;JNE
@Output.printChar$ifelse6
0;JMP
(Output.printChar$if6)
@0
D=A
@R14
M=D
@Output.backSpace
D=A
@R13
M=D
@return249
D=A
@CALL
0;JMP
(return249)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@Output.printChar$ifend6
0;JMP
(Output.printChar$ifelse6)
@ARG //push argument
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@Output.drawChar
D=A
@R13
M=D
@return250
D=A
@CALL
0;JMP
(return250)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@Output.0   //push static
D=M
@SP
A=M
M=D
@SP
M=M+1
@1  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@SP  //pop static
AM=M-1
D=M
@Output.0
M=D
@Output.0   //push static
D=M
@SP
A=M
M=D
@SP
M=M+1
@30  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
D=D-M
M=-1
@eq47
D;JEQ
@SP
A=M-1
M=0
(eq47)
@SP
AM=M-1
D=M
@Output.printChar$if13
D;JNE
@Output.printChar$ifelse13
0;JMP
(Output.printChar$if13)
@0
D=A
@R14
M=D
@Output.println
D=A
@R13
M=D
@return251
D=A
@CALL
0;JMP
(return251)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
(Output.printChar$ifelse13)
(Output.printChar$ifend6)
(Output.printChar$ifend1)
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@RETURN
0;JMP

(Output.printString)
@2
D=A
(Output.printString_LOOP)
@Output.printString_END
D;JEQ
@SP
A=M
M=0
@SP
M=M+1
D=D-1
@Output.printString_LOOP
0;JMP
(Output.printString_END)

@ARG //push argument
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@String.length
D=A
@R13
M=D
@return252
D=A
@CALL
0;JMP
(return252)
@LCL //pop local
D=M
@1
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
(Output.printString$while2)
@LCL //push local
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@LCL //push local
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
D=M-D
M=-1
@lt48
D;JLT
@SP
A=M-1
M=0
(lt48)
@SP  //not
A=M-1
M=!M
@SP
AM=M-1
D=M
@Output.printString$whileend2
D;JNE
@ARG //push argument
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@LCL //push local
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.charAt
D=A
@R13
M=D
@return253
D=A
@CALL
0;JMP
(return253)
@1
D=A
@R14
M=D
@Output.printChar
D=A
@R13
M=D
@return254
D=A
@CALL
0;JMP
(return254)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@LCL //push local
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@LCL //pop local
D=M
@0
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@Output.printString$while2
0;JMP
(Output.printString$whileend2)
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@RETURN
0;JMP

(Output.printInt)
@0
D=A
(Output.printInt_LOOP)
@Output.printInt_END
D;JEQ
@SP
A=M
M=0
@SP
M=M+1
D=D-1
@Output.printInt_LOOP
0;JMP
(Output.printInt_END)

@Output.2   //push static
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG //push argument
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.setInt
D=A
@R13
M=D
@return255
D=A
@CALL
0;JMP
(return255)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@Output.2   //push static
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@Output.printString
D=A
@R13
M=D
@return256
D=A
@CALL
0;JMP
(return256)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@RETURN
0;JMP

(Output.println)
@0
D=A
(Output.println_LOOP)
@Output.println_END
D;JEQ
@SP
A=M
M=0
@SP
M=M+1
D=D-1
@Output.println_LOOP
0;JMP
(Output.println_END)

@Output.1   //push static
D=M
@SP
A=M
M=D
@SP
M=M+1
@1  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@SP  //pop static
AM=M-1
D=M
@Output.1
M=D
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //pop static
AM=M-1
D=M
@Output.0
M=D
@Output.1   //push static
D=M
@SP
A=M
M=D
@SP
M=M+1
@29  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
D=D-M
M=-1
@eq49
D;JEQ
@SP
A=M-1
M=0
(eq49)
@SP
AM=M-1
D=M
@Output.println$if1
D;JNE
@Output.println$ifelse1
0;JMP
(Output.println$if1)
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //pop static
AM=M-1
D=M
@Output.1
M=D
(Output.println$ifelse1)
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@RETURN
0;JMP

(Output.backSpace)
@0
D=A
(Output.backSpace_LOOP)
@Output.backSpace_END
D;JEQ
@SP
A=M
M=0
@SP
M=M+1
D=D-1
@Output.backSpace_LOOP
0;JMP
(Output.backSpace_END)

@Output.0   //push static
D=M
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
D=M-D
M=-1
@gt50
D;JGT
@SP
A=M-1
M=0
(gt50)
@SP
AM=M-1
D=M
@Output.backSpace$if1
D;JNE
@Output.backSpace$ifelse1
0;JMP
(Output.backSpace$if1)
@Output.0   //push static
D=M
@SP
A=M
M=D
@SP
M=M+1
@1  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //sub
AM=M-1
D=M
A=A-1
M=M-D
@SP  //pop static
AM=M-1
D=M
@Output.0
M=D
(Output.backSpace$ifelse1)
@32  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@Output.drawChar
D=A
@R13
M=D
@return257
D=A
@CALL
0;JMP
(return257)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@RETURN
0;JMP

(Memory.init)
@0
D=A
(Memory.init_LOOP)
@Memory.init_END
D;JEQ
@SP
A=M
M=0
@SP
M=M+1
D=D-1
@Memory.init_LOOP
0;JMP
(Memory.init_END)

@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //pop static
AM=M-1
D=M
@Memory.0
M=D
@1024  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@Memory.0   //push static
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@2816  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@SP  //pop pointer
AM=M-1
D=M
@THAT
M=D
@R5 //push temp
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT    //pop that
D=M
@0
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@1025  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@Memory.0   //push static
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@1026  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@SP  //pop pointer
AM=M-1
D=M
@THAT
M=D
@R5 //push temp
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT    //pop that
D=M
@0
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@RETURN
0;JMP

(Memory.peek)
@0
D=A
(Memory.peek_LOOP)
@Memory.peek_END
D;JEQ
@SP
A=M
M=0
@SP
M=M+1
D=D-1
@Memory.peek_LOOP
0;JMP
(Memory.peek_END)

@Memory.0   //push static
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG //push argument
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@SP  //pop pointer
AM=M-1
D=M
@THAT
M=D
@THAT    //push that
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@RETURN
0;JMP

(Memory.poke)
@0
D=A
(Memory.poke_LOOP)
@Memory.poke_END
D;JEQ
@SP
A=M
M=0
@SP
M=M+1
D=D-1
@Memory.poke_LOOP
0;JMP
(Memory.poke_END)

@ARG //push argument
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@Memory.0   //push static
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@ARG //push argument
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@SP  //pop pointer
AM=M-1
D=M
@THAT
M=D
@R5 //push temp
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT    //pop that
D=M
@0
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@RETURN
0;JMP

(Memory.alloc)
@1
D=A
(Memory.alloc_LOOP)
@Memory.alloc_END
D;JEQ
@SP
A=M
M=0
@SP
M=M+1
D=D-1
@Memory.alloc_LOOP
0;JMP
(Memory.alloc_END)

@ARG //push argument
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
D=M-D
M=-1
@lt51
D;JLT
@SP
A=M-1
M=0
(lt51)
@SP
AM=M-1
D=M
@Memory.alloc$if1
D;JNE
@Memory.alloc$ifelse1
0;JMP
(Memory.alloc$if1)
@5  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@Sys.error
D=A
@R13
M=D
@return258
D=A
@CALL
0;JMP
(return258)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
(Memory.alloc$ifelse1)
@1024  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL //pop local
D=M
@0
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
(Memory.alloc$while7)
@LCL //push local
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@SP  //pop pointer
AM=M-1
D=M
@THAT
M=D
@THAT    //push that
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG //push argument
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
D=M-D
M=-1
@lt52
D;JLT
@SP
A=M-1
M=0
(lt52)
@SP  //not
A=M-1
M=!M
@SP
AM=M-1
D=M
@Memory.alloc$whileend7
D;JNE
@LCL //push local
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@SP  //pop pointer
AM=M-1
D=M
@THAT
M=D
@THAT    //push that
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@LCL //pop local
D=M
@0
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@Memory.alloc$while7
0;JMP
(Memory.alloc$whileend7)
@LCL //push local
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG //push argument
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@3836  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
D=M-D
M=-1
@gt53
D;JGT
@SP
A=M-1
M=0
(gt53)
@SP
AM=M-1
D=M
@Memory.alloc$if10
D;JNE
@Memory.alloc$ifelse10
0;JMP
(Memory.alloc$if10)
@6  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@Sys.error
D=A
@R13
M=D
@return259
D=A
@CALL
0;JMP
(return259)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
(Memory.alloc$ifelse10)
@LCL //push local
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@SP  //pop pointer
AM=M-1
D=M
@THAT
M=D
@THAT    //push that
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG //push argument
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@2  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@SP
AM=M-1
D=M
A=A-1
D=M-D
M=-1
@gt54
D;JGT
@SP
A=M-1
M=0
(gt54)
@SP
AM=M-1
D=M
@Memory.alloc$if15
D;JNE
@Memory.alloc$ifelse15
0;JMP
(Memory.alloc$if15)
@ARG //push argument
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@2  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@LCL //push local
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@LCL //push local
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@SP  //pop pointer
AM=M-1
D=M
@THAT
M=D
@THAT    //push that
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG //push argument
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //sub
AM=M-1
D=M
A=A-1
M=M-D
@2  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //sub
AM=M-1
D=M
A=A-1
M=M-D
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@SP  //pop pointer
AM=M-1
D=M
@THAT
M=D
@R5 //push temp
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT    //pop that
D=M
@0
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@LCL //push local
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@SP  //pop pointer
AM=M-1
D=M
@THAT
M=D
@THAT    //push that
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@LCL //push local
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@2  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@SP
AM=M-1
D=M
A=A-1
D=D-M
M=-1
@eq55
D;JEQ
@SP
A=M-1
M=0
(eq55)
@SP
AM=M-1
D=M
@Memory.alloc$if16
D;JNE
@Memory.alloc$ifelse16
0;JMP
(Memory.alloc$if16)
@ARG //push argument
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@3  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@LCL //push local
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@LCL //push local
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG //push argument
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@4  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@SP  //pop pointer
AM=M-1
D=M
@THAT
M=D
@R5 //push temp
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT    //pop that
D=M
@0
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@Memory.alloc$ifend16
0;JMP
(Memory.alloc$ifelse16)
@ARG //push argument
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@3  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@LCL //push local
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@LCL //push local
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@SP  //pop pointer
AM=M-1
D=M
@THAT
M=D
@THAT    //push that
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@SP  //pop pointer
AM=M-1
D=M
@THAT
M=D
@R5 //push temp
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT    //pop that
D=M
@0
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
(Memory.alloc$ifend16)
@1  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL //push local
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@LCL //push local
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG //push argument
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@2  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@SP  //pop pointer
AM=M-1
D=M
@THAT
M=D
@R5 //push temp
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT    //pop that
D=M
@0
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
(Memory.alloc$ifelse15)
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL //push local
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@SP  //pop pointer
AM=M-1
D=M
@THAT
M=D
@R5 //push temp
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT    //pop that
D=M
@0
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@LCL //push local
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@2  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@RETURN
0;JMP

(Memory.deAlloc)
@2
D=A
(Memory.deAlloc_LOOP)
@Memory.deAlloc_END
D;JEQ
@SP
A=M
M=0
@SP
M=M+1
D=D-1
@Memory.deAlloc_LOOP
0;JMP
(Memory.deAlloc_END)

@ARG //push argument
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@2  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //sub
AM=M-1
D=M
A=A-1
M=M-D
@LCL //pop local
D=M
@0
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@LCL //push local
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@SP  //pop pointer
AM=M-1
D=M
@THAT
M=D
@THAT    //push that
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@LCL //pop local
D=M
@1
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@LCL //push local
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@SP  //pop pointer
AM=M-1
D=M
@THAT
M=D
@THAT    //push that
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
D=D-M
M=-1
@eq56
D;JEQ
@SP
A=M-1
M=0
(eq56)
@SP
AM=M-1
D=M
@Memory.deAlloc$if1
D;JNE
@Memory.deAlloc$ifelse1
0;JMP
(Memory.deAlloc$if1)
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL //push local
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@LCL //push local
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@SP  //pop pointer
AM=M-1
D=M
@THAT
M=D
@THAT    //push that
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@LCL //push local
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //sub
AM=M-1
D=M
A=A-1
M=M-D
@2  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //sub
AM=M-1
D=M
A=A-1
M=M-D
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@SP  //pop pointer
AM=M-1
D=M
@THAT
M=D
@R5 //push temp
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT    //pop that
D=M
@0
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@Memory.deAlloc$ifend1
0;JMP
(Memory.deAlloc$ifelse1)
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL //push local
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@LCL //push local
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@SP  //pop pointer
AM=M-1
D=M
@THAT
M=D
@THAT    //push that
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@LCL //push local
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //sub
AM=M-1
D=M
A=A-1
M=M-D
@LCL //push local
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@SP  //pop pointer
AM=M-1
D=M
@THAT
M=D
@THAT    //push that
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@SP  //pop pointer
AM=M-1
D=M
@THAT
M=D
@R5 //push temp
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT    //pop that
D=M
@0
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@LCL //push local
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@SP  //pop pointer
AM=M-1
D=M
@THAT
M=D
@THAT    //push that
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@LCL //push local
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@2  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@SP
AM=M-1
D=M
A=A-1
D=D-M
M=-1
@eq57
D;JEQ
@SP
A=M-1
M=0
(eq57)
@SP
AM=M-1
D=M
@Memory.deAlloc$if4
D;JNE
@Memory.deAlloc$ifelse4
0;JMP
(Memory.deAlloc$if4)
@1  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL //push local
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@LCL //push local
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@2  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@SP  //pop pointer
AM=M-1
D=M
@THAT
M=D
@R5 //push temp
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT    //pop that
D=M
@0
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@Memory.deAlloc$ifend4
0;JMP
(Memory.deAlloc$ifelse4)
@1  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL //push local
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@LCL //push local
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@SP  //pop pointer
AM=M-1
D=M
@THAT
M=D
@THAT    //push that
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@SP  //pop pointer
AM=M-1
D=M
@THAT
M=D
@R5 //push temp
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT    //pop that
D=M
@0
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
(Memory.deAlloc$ifend4)
(Memory.deAlloc$ifend1)
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@RETURN
0;JMP

(Grid.new)
@1
D=A
(Grid.new_LOOP)
@Grid.new_END
D;JEQ
@SP
A=M
M=0
@SP
M=M+1
D=D-1
@Grid.new_LOOP
0;JMP
(Grid.new_END)

@1  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@Memory.alloc
D=A
@R13
M=D
@return260
D=A
@CALL
0;JMP
(return260)
@SP  //pop pointer
AM=M-1
D=M
@THIS
M=D
@220  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@Array.new
D=A
@R13
M=D
@return261
D=A
@CALL
0;JMP
(return261)
@THIS    //pop this
D=M
@0
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@0
D=A
@R14
M=D
@Screen.DARKGREY
D=A
@R13
M=D
@return262
D=A
@CALL
0;JMP
(return262)
@1
D=A
@R14
M=D
@Screen.setColor
D=A
@R13
M=D
@return263
D=A
@CALL
0;JMP
(return263)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@2  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@4  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@280  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@4
D=A
@R14
M=D
@Screen.drawRectangle
D=A
@R13
M=D
@return264
D=A
@CALL
0;JMP
(return264)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@2  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@284  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@146  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@4
D=A
@R14
M=D
@Screen.drawRectangle
D=A
@R13
M=D
@return265
D=A
@CALL
0;JMP
(return265)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@146  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@4  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@280  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@4
D=A
@R14
M=D
@Screen.drawRectangle
D=A
@R13
M=D
@return266
D=A
@CALL
0;JMP
(return266)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@Screen.setColor
D=A
@R13
M=D
@return267
D=A
@CALL
0;JMP
(return267)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL //pop local
D=M
@0
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
(Grid.new$while12)
@LCL //push local
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@220  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
D=M-D
M=-1
@lt58
D;JLT
@SP
A=M-1
M=0
(lt58)
@SP  //not
A=M-1
M=!M
@SP
AM=M-1
D=M
@Grid.new$whileend12
D;JNE
@LCL //push local
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS    //push this
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@1  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //neg
A=M-1
M=-M
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@SP  //pop pointer
AM=M-1
D=M
@THAT
M=D
@R5 //push temp
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT    //pop that
D=M
@0
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@LCL //push local
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@LCL //pop local
D=M
@0
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@Grid.new$while12
0;JMP
(Grid.new$whileend12)
@R3 //push pointer
D=M
@SP
A=M
M=D
@SP
M=M+1
@RETURN
0;JMP

(Grid.dispose)
@0
D=A
(Grid.dispose_LOOP)
@Grid.dispose_END
D;JEQ
@SP
A=M
M=0
@SP
M=M+1
D=D-1
@Grid.dispose_LOOP
0;JMP
(Grid.dispose_END)

@ARG //push argument
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //pop pointer
AM=M-1
D=M
@THIS
M=D
@THIS    //push this
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@Array.dispose
D=A
@R13
M=D
@return268
D=A
@CALL
0;JMP
(return268)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@R3 //push pointer
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@Memory.deAlloc
D=A
@R13
M=D
@return269
D=A
@CALL
0;JMP
(return269)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@RETURN
0;JMP

(Grid.draw)
@0
D=A
(Grid.draw_LOOP)
@Grid.draw_END
D;JEQ
@SP
A=M
M=0
@SP
M=M+1
D=D-1
@Grid.draw_LOOP
0;JMP
(Grid.draw_END)

@ARG //push argument
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //pop pointer
AM=M-1
D=M
@THIS
M=D
@ARG //push argument
D=M
@3
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@Screen.setColor
D=A
@R13
M=D
@return270
D=A
@CALL
0;JMP
(return270)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@ARG //push argument
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@14  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@Math.multiply
D=A
@R13
M=D
@return271
D=A
@CALL
0;JMP
(return271)
@6  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@ARG //push argument
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@14  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@Math.multiply
D=A
@R13
M=D
@return272
D=A
@CALL
0;JMP
(return272)
@24  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //sub
AM=M-1
D=M
A=A-1
M=M-D
@13  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@13  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@4
D=A
@R14
M=D
@Screen.drawRectangle
D=A
@R13
M=D
@return273
D=A
@CALL
0;JMP
(return273)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@Screen.setColor
D=A
@R13
M=D
@return274
D=A
@CALL
0;JMP
(return274)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@ARG //push argument
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@10  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
D=M-D
M=-1
@lt59
D;JLT
@SP
A=M-1
M=0
(lt59)
@SP
AM=M-1
D=M
@Grid.draw$if7
D;JNE
@Grid.draw$ifelse7
0;JMP
(Grid.draw$if7)
@ARG //push argument
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@10  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@Math.multiply
D=A
@R13
M=D
@return275
D=A
@CALL
0;JMP
(return275)
@ARG //push argument
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@THIS    //push this
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@ARG //push argument
D=M
@3
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@SP  //pop pointer
AM=M-1
D=M
@THAT
M=D
@R5 //push temp
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT    //pop that
D=M
@0
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
(Grid.draw$ifelse7)
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@RETURN
0;JMP

(Grid.hasTile)
@0
D=A
(Grid.hasTile_LOOP)
@Grid.hasTile_END
D;JEQ
@SP
A=M
M=0
@SP
M=M+1
D=D-1
@Grid.hasTile_LOOP
0;JMP
(Grid.hasTile_END)

@ARG //push argument
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //pop pointer
AM=M-1
D=M
@THIS
M=D
@THIS    //push this
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG //push argument
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@10  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@Math.multiply
D=A
@R13
M=D
@return276
D=A
@CALL
0;JMP
(return276)
@ARG //push argument
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@SP  //pop pointer
AM=M-1
D=M
@THAT
M=D
@THAT    //push that
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //neg
A=M-1
M=-M
@SP
AM=M-1
D=M
A=A-1
D=D-M
M=-1
@eq60
D;JEQ
@SP
A=M-1
M=0
(eq60)
@SP  //not
A=M-1
M=!M
@RETURN
0;JMP

(Grid.isClear)
@0
D=A
(Grid.isClear_LOOP)
@Grid.isClear_END
D;JEQ
@SP
A=M
M=0
@SP
M=M+1
D=D-1
@Grid.isClear_LOOP
0;JMP
(Grid.isClear_END)

@ARG //push argument
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //pop pointer
AM=M-1
D=M
@THIS
M=D
@THIS    //push this
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG //push argument
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@10  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@Math.multiply
D=A
@R13
M=D
@return277
D=A
@CALL
0;JMP
(return277)
@ARG //push argument
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@SP  //pop pointer
AM=M-1
D=M
@THAT
M=D
@THAT    //push that
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@0
D=A
@R14
M=D
@Screen.DARKGREY
D=A
@R13
M=D
@return278
D=A
@CALL
0;JMP
(return278)
@SP
AM=M-1
D=M
A=A-1
D=D-M
M=-1
@eq61
D;JEQ
@SP
A=M-1
M=0
(eq61)
@RETURN
0;JMP

(Grid.clearRow)
@6
D=A
(Grid.clearRow_LOOP)
@Grid.clearRow_END
D;JEQ
@SP
A=M
M=0
@SP
M=M+1
D=D-1
@Grid.clearRow_LOOP
0;JMP
(Grid.clearRow_END)

@ARG //push argument
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //pop pointer
AM=M-1
D=M
@THIS
M=D
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL //pop local
D=M
@1
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL //pop local
D=M
@3
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
(Grid.clearRow$while2)
@LCL //push local
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@22  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
D=M-D
M=-1
@lt62
D;JLT
@SP
A=M-1
M=0
(lt62)
@SP  //not
A=M-1
M=!M
@SP
AM=M-1
D=M
@Grid.clearRow$whileend2
D;JNE
@1  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //neg
A=M-1
M=-M
@LCL //pop local
D=M
@5
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL //pop local
D=M
@0
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
(Grid.clearRow$while4)
@LCL //push local
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@10  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
D=M-D
M=-1
@lt63
D;JLT
@SP
A=M-1
M=0
(lt63)
@SP  //not
A=M-1
M=!M
@SP
AM=M-1
D=M
@Grid.clearRow$whileend4
D;JNE
@R3 //push pointer
D=M
@SP
A=M
M=D
@SP
M=M+1
@LCL //push local
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@LCL //push local
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@3
D=A
@R14
M=D
@Grid.hasTile
D=A
@R13
M=D
@return279
D=A
@CALL
0;JMP
(return279)
@SP  //not
A=M-1
M=!M
@SP
AM=M-1
D=M
@Grid.clearRow$if5
D;JNE
@Grid.clearRow$ifelse5
0;JMP
(Grid.clearRow$if5)
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL //pop local
D=M
@5
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
(Grid.clearRow$ifelse5)
@LCL //push local
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@LCL //pop local
D=M
@0
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@Grid.clearRow$while4
0;JMP
(Grid.clearRow$whileend4)
@LCL //push local
D=M
@5
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
@Grid.clearRow$if10
D;JNE
@Grid.clearRow$ifelse10
0;JMP
(Grid.clearRow$if10)
@LCL //push local
D=M
@3
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@LCL //pop local
D=M
@3
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL //pop local
D=M
@0
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
(Grid.clearRow$while12)
@LCL //push local
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@10  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
D=M-D
M=-1
@lt64
D;JLT
@SP
A=M-1
M=0
(lt64)
@SP  //not
A=M-1
M=!M
@SP
AM=M-1
D=M
@Grid.clearRow$whileend12
D;JNE
@ARG //push argument
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@Sound.go
D=A
@R13
M=D
@return280
D=A
@CALL
0;JMP
(return280)
@LCL //pop local
D=M
@4
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@R3 //push pointer
D=M
@SP
A=M
M=D
@SP
M=M+1
@LCL //push local
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@LCL //push local
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@0
D=A
@R14
M=D
@Screen.DARKGREY
D=A
@R13
M=D
@return281
D=A
@CALL
0;JMP
(return281)
@4
D=A
@R14
M=D
@Grid.draw
D=A
@R13
M=D
@return282
D=A
@CALL
0;JMP
(return282)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@LCL //push local
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@LCL //pop local
D=M
@0
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@Grid.clearRow$while12
0;JMP
(Grid.clearRow$whileend12)
(Grid.clearRow$ifelse10)
@LCL //push local
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@LCL //pop local
D=M
@1
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@Grid.clearRow$while2
0;JMP
(Grid.clearRow$whileend2)
@1  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL //pop local
D=M
@1
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
(Grid.clearRow$while22)
@LCL //push local
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@22  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
D=M-D
M=-1
@lt65
D;JLT
@SP
A=M-1
M=0
(lt65)
@SP  //not
A=M-1
M=!M
@SP
AM=M-1
D=M
@Grid.clearRow$whileend22
D;JNE
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL //pop local
D=M
@0
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
(Grid.clearRow$while24)
@LCL //push local
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@10  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
D=M-D
M=-1
@lt66
D;JLT
@SP
A=M-1
M=0
(lt66)
@SP  //not
A=M-1
M=!M
@SP
AM=M-1
D=M
@Grid.clearRow$whileend24
D;JNE
@R3 //push pointer
D=M
@SP
A=M
M=D
@SP
M=M+1
@LCL //push local
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@LCL //push local
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@3
D=A
@R14
M=D
@Grid.isClear
D=A
@R13
M=D
@return283
D=A
@CALL
0;JMP
(return283)
@SP
AM=M-1
D=M
@Grid.clearRow$if25
D;JNE
@Grid.clearRow$ifelse25
0;JMP
(Grid.clearRow$if25)
@LCL //push local
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@LCL //pop local
D=M
@2
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
(Grid.clearRow$while27)
@LCL //push local
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
D=M-D
M=-1
@gt67
D;JGT
@SP
A=M-1
M=0
(gt67)
@SP  //not
A=M-1
M=!M
@SP
AM=M-1
D=M
@Grid.clearRow$whileend27
D;JNE
@ARG //push argument
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@Sound.go
D=A
@R13
M=D
@return284
D=A
@CALL
0;JMP
(return284)
@LCL //pop local
D=M
@4
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@R3 //push pointer
D=M
@SP
A=M
M=D
@SP
M=M+1
@LCL //push local
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@LCL //push local
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS    //push this
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@LCL //push local
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@10  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@Math.multiply
D=A
@R13
M=D
@return285
D=A
@CALL
0;JMP
(return285)
@10  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //sub
AM=M-1
D=M
A=A-1
M=M-D
@LCL //push local
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@SP  //pop pointer
AM=M-1
D=M
@THAT
M=D
@THAT    //push that
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@4
D=A
@R14
M=D
@Grid.draw
D=A
@R13
M=D
@return286
D=A
@CALL
0;JMP
(return286)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@LCL //push local
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //sub
AM=M-1
D=M
A=A-1
M=M-D
@LCL //pop local
D=M
@2
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@Grid.clearRow$while27
0;JMP
(Grid.clearRow$whileend27)
(Grid.clearRow$ifelse25)
@LCL //push local
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@LCL //pop local
D=M
@0
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@Grid.clearRow$while24
0;JMP
(Grid.clearRow$whileend24)
@LCL //push local
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@LCL //pop local
D=M
@1
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@Grid.clearRow$while22
0;JMP
(Grid.clearRow$whileend22)
@LCL //push local
D=M
@3
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@RETURN
0;JMP

(PongGame.new)
@0
D=A
(PongGame.new_LOOP)
@PongGame.new_END
D;JEQ
@SP
A=M
M=0
@SP
M=M+1
D=D-1
@PongGame.new_LOOP
0;JMP
(PongGame.new_END)

@7  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@Memory.alloc
D=A
@R13
M=D
@return287
D=A
@CALL
0;JMP
(return287)
@SP  //pop pointer
AM=M-1
D=M
@THIS
M=D
@0
D=A
@R14
M=D
@Screen.clearScreen
D=A
@R13
M=D
@return288
D=A
@CALL
0;JMP
(return288)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@40  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@THIS    //pop this
D=M
@6
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@100  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@260  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@THIS    //push this
D=M
@6
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@7  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@4
D=A
@R14
M=D
@Bat.new
D=A
@R13
M=D
@return289
D=A
@CALL
0;JMP
(return289)
@THIS    //pop this
D=M
@0
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@117  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@253  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@239  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@260  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@6
D=A
@R14
M=D
@Ball.new
D=A
@R13
M=D
@return290
D=A
@CALL
0;JMP
(return290)
@THIS    //pop this
D=M
@1
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@THIS    //push this
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@400  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@3
D=A
@R14
M=D
@Ball.setDestination
D=A
@R13
M=D
@return291
D=A
@CALL
0;JMP
(return291)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@269  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@240  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@4
D=A
@R14
M=D
@Screen.drawRectangle
D=A
@R13
M=D
@return292
D=A
@CALL
0;JMP
(return292)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@25  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@Output.moveCursor
D=A
@R13
M=D
@return293
D=A
@CALL
0;JMP
(return293)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@8  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@String.new
D=A
@R13
M=D
@return294
D=A
@CALL
0;JMP
(return294)
@83  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return295
D=A
@CALL
0;JMP
(return295)
@99  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return296
D=A
@CALL
0;JMP
(return296)
@111  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return297
D=A
@CALL
0;JMP
(return297)
@114  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return298
D=A
@CALL
0;JMP
(return298)
@101  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return299
D=A
@CALL
0;JMP
(return299)
@58  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return300
D=A
@CALL
0;JMP
(return300)
@32  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return301
D=A
@CALL
0;JMP
(return301)
@48  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return302
D=A
@CALL
0;JMP
(return302)
@1
D=A
@R14
M=D
@Output.printString
D=A
@R13
M=D
@return303
D=A
@CALL
0;JMP
(return303)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@THIS    //pop this
D=M
@3
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@THIS    //pop this
D=M
@4
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@THIS    //pop this
D=M
@2
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@THIS    //pop this
D=M
@5
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@R3 //push pointer
D=M
@SP
A=M
M=D
@SP
M=M+1
@RETURN
0;JMP

(PongGame.dispose)
@0
D=A
(PongGame.dispose_LOOP)
@PongGame.dispose_END
D;JEQ
@SP
A=M
M=0
@SP
M=M+1
D=D-1
@PongGame.dispose_LOOP
0;JMP
(PongGame.dispose_END)

@ARG //push argument
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //pop pointer
AM=M-1
D=M
@THIS
M=D
@THIS    //push this
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@Bat.dispose
D=A
@R13
M=D
@return304
D=A
@CALL
0;JMP
(return304)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@THIS    //push this
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@Ball.dispose
D=A
@R13
M=D
@return305
D=A
@CALL
0;JMP
(return305)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@R3 //push pointer
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@Memory.deAlloc
D=A
@R13
M=D
@return306
D=A
@CALL
0;JMP
(return306)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@RETURN
0;JMP

(PongGame.newInstance)
@0
D=A
(PongGame.newInstance_LOOP)
@PongGame.newInstance_END
D;JEQ
@SP
A=M
M=0
@SP
M=M+1
D=D-1
@PongGame.newInstance_LOOP
0;JMP
(PongGame.newInstance_END)

@0
D=A
@R14
M=D
@PongGame.new
D=A
@R13
M=D
@return307
D=A
@CALL
0;JMP
(return307)
@SP  //pop static
AM=M-1
D=M
@PongGame.0
M=D
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@RETURN
0;JMP

(PongGame.getInstance)
@0
D=A
(PongGame.getInstance_LOOP)
@PongGame.getInstance_END
D;JEQ
@SP
A=M
M=0
@SP
M=M+1
D=D-1
@PongGame.getInstance_LOOP
0;JMP
(PongGame.getInstance_END)

@PongGame.0   //push static
D=M
@SP
A=M
M=D
@SP
M=M+1
@RETURN
0;JMP

(PongGame.run)
@1
D=A
(PongGame.run_LOOP)
@PongGame.run_END
D;JEQ
@SP
A=M
M=0
@SP
M=M+1
D=D-1
@PongGame.run_LOOP
0;JMP
(PongGame.run_END)

@ARG //push argument
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //pop pointer
AM=M-1
D=M
@THIS
M=D
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@4  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@String.new
D=A
@R13
M=D
@return308
D=A
@CALL
0;JMP
(return308)
@32  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return309
D=A
@CALL
0;JMP
(return309)
@32  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return310
D=A
@CALL
0;JMP
(return310)
@60  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return311
D=A
@CALL
0;JMP
(return311)
@45  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return312
D=A
@CALL
0;JMP
(return312)
@2
D=A
@R14
M=D
@Menu.setButtonText
D=A
@R13
M=D
@return313
D=A
@CALL
0;JMP
(return313)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@1  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@1  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@String.new
D=A
@R13
M=D
@return314
D=A
@CALL
0;JMP
(return314)
@32  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return315
D=A
@CALL
0;JMP
(return315)
@2
D=A
@R14
M=D
@Menu.setButtonText
D=A
@R13
M=D
@return316
D=A
@CALL
0;JMP
(return316)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@2  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@1  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@String.new
D=A
@R13
M=D
@return317
D=A
@CALL
0;JMP
(return317)
@32  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return318
D=A
@CALL
0;JMP
(return318)
@2
D=A
@R14
M=D
@Menu.setButtonText
D=A
@R13
M=D
@return319
D=A
@CALL
0;JMP
(return319)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@3  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@4  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@String.new
D=A
@R13
M=D
@return320
D=A
@CALL
0;JMP
(return320)
@32  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return321
D=A
@CALL
0;JMP
(return321)
@32  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return322
D=A
@CALL
0;JMP
(return322)
@45  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return323
D=A
@CALL
0;JMP
(return323)
@62  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return324
D=A
@CALL
0;JMP
(return324)
@2
D=A
@R14
M=D
@Menu.setButtonText
D=A
@R13
M=D
@return325
D=A
@CALL
0;JMP
(return325)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@1000  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@Sys.wait
D=A
@R13
M=D
@return326
D=A
@CALL
0;JMP
(return326)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@THIS    //pop this
D=M
@3
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
(PongGame.run$while12)
@THIS    //push this
D=M
@3
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //not
A=M-1
M=!M
@SP  //not
A=M-1
M=!M
@SP
AM=M-1
D=M
@PongGame.run$whileend12
D;JNE
@0
D=A
@R14
M=D
@Menu.getButton
D=A
@R13
M=D
@return327
D=A
@CALL
0;JMP
(return327)
@LCL //pop local
D=M
@0
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@LCL //push local
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@3  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
D=D-M
M=-1
@eq68
D;JEQ
@SP
A=M-1
M=0
(eq68)
@SP
AM=M-1
D=M
@PongGame.run$if13
D;JNE
@PongGame.run$ifelse13
0;JMP
(PongGame.run$if13)
@THIS    //push this
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@Bat.setDirection
D=A
@R13
M=D
@return328
D=A
@CALL
0;JMP
(return328)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
(PongGame.run$ifelse13)
@LCL //push local
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
D=D-M
M=-1
@eq69
D;JEQ
@SP
A=M-1
M=0
(eq69)
@SP
AM=M-1
D=M
@PongGame.run$if18
D;JNE
@PongGame.run$ifelse18
0;JMP
(PongGame.run$if18)
@THIS    //push this
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //neg
A=M-1
M=-M
@2
D=A
@R14
M=D
@Bat.setDirection
D=A
@R13
M=D
@return329
D=A
@CALL
0;JMP
(return329)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
(PongGame.run$ifelse18)
@THIS    //push this
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@Bat.move
D=A
@R13
M=D
@return330
D=A
@CALL
0;JMP
(return330)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@R3 //push pointer
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@PongGame.moveBall
D=A
@R13
M=D
@return331
D=A
@CALL
0;JMP
(return331)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@50  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@Sys.wait
D=A
@R13
M=D
@return332
D=A
@CALL
0;JMP
(return332)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@THIS    //push this
D=M
@3
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
@PongGame.run$if29
D;JNE
@PongGame.run$ifelse29
0;JMP
(PongGame.run$if29)
@10  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@10  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@Output.moveCursor
D=A
@R13
M=D
@return333
D=A
@CALL
0;JMP
(return333)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@9  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@String.new
D=A
@R13
M=D
@return334
D=A
@CALL
0;JMP
(return334)
@71  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return335
D=A
@CALL
0;JMP
(return335)
@97  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return336
D=A
@CALL
0;JMP
(return336)
@109  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return337
D=A
@CALL
0;JMP
(return337)
@101  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return338
D=A
@CALL
0;JMP
(return338)
@32  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return339
D=A
@CALL
0;JMP
(return339)
@79  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return340
D=A
@CALL
0;JMP
(return340)
@118  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return341
D=A
@CALL
0;JMP
(return341)
@101  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return342
D=A
@CALL
0;JMP
(return342)
@114  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return343
D=A
@CALL
0;JMP
(return343)
@1
D=A
@R14
M=D
@Output.printString
D=A
@R13
M=D
@return344
D=A
@CALL
0;JMP
(return344)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
(PongGame.run$ifelse29)
@PongGame.run$while12
0;JMP
(PongGame.run$whileend12)
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@RETURN
0;JMP

(PongGame.moveBall)
@5
D=A
(PongGame.moveBall_LOOP)
@PongGame.moveBall_END
D;JEQ
@SP
A=M
M=0
@SP
M=M+1
D=D-1
@PongGame.moveBall_LOOP
0;JMP
(PongGame.moveBall_END)

@ARG //push argument
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //pop pointer
AM=M-1
D=M
@THIS
M=D
@THIS    //push this
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@Ball.move
D=A
@R13
M=D
@return345
D=A
@CALL
0;JMP
(return345)
@THIS    //pop this
D=M
@2
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@THIS    //push this
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
D=M-D
M=-1
@gt70
D;JGT
@SP
A=M-1
M=0
(gt70)
@THIS    //push this
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS    //push this
D=M
@5
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
D=D-M
M=-1
@eq71
D;JEQ
@SP
A=M-1
M=0
(eq71)
@SP  //not
A=M-1
M=!M
@SP  //and
AM=M-1
D=M
A=A-1
M=D&M
@SP
AM=M-1
D=M
@PongGame.moveBall$if1
D;JNE
@PongGame.moveBall$ifelse1
0;JMP
(PongGame.moveBall$if1)
@THIS    //push this
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS    //pop this
D=M
@5
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL //pop local
D=M
@0
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@THIS    //push this
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@Bat.getLeft
D=A
@R13
M=D
@return346
D=A
@CALL
0;JMP
(return346)
@LCL //pop local
D=M
@1
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@THIS    //push this
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@Bat.getRight
D=A
@R13
M=D
@return347
D=A
@CALL
0;JMP
(return347)
@LCL //pop local
D=M
@2
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@THIS    //push this
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@Ball.getLeft
D=A
@R13
M=D
@return348
D=A
@CALL
0;JMP
(return348)
@LCL //pop local
D=M
@3
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@THIS    //push this
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@Ball.getRight
D=A
@R13
M=D
@return349
D=A
@CALL
0;JMP
(return349)
@LCL //pop local
D=M
@4
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@THIS    //push this
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@4  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
D=D-M
M=-1
@eq72
D;JEQ
@SP
A=M-1
M=0
(eq72)
@SP
AM=M-1
D=M
@PongGame.moveBall$if2
D;JNE
@PongGame.moveBall$ifelse2
0;JMP
(PongGame.moveBall$if2)
@LCL //push local
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@LCL //push local
D=M
@4
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
D=M-D
M=-1
@gt73
D;JGT
@SP
A=M-1
M=0
(gt73)
@LCL //push local
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@LCL //push local
D=M
@3
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
D=M-D
M=-1
@lt74
D;JLT
@SP
A=M-1
M=0
(lt74)
@SP  //or
AM=M-1
D=M
A=A-1
M=D|M
@THIS    //pop this
D=M
@3
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@THIS    //push this
D=M
@3
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //not
A=M-1
M=!M
@SP
AM=M-1
D=M
@PongGame.moveBall$if3
D;JNE
@PongGame.moveBall$ifelse3
0;JMP
(PongGame.moveBall$if3)
@LCL //push local
D=M
@4
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@LCL //push local
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@10  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@SP
AM=M-1
D=M
A=A-1
D=M-D
M=-1
@lt75
D;JLT
@SP
A=M-1
M=0
(lt75)
@SP
AM=M-1
D=M
@PongGame.moveBall$if4
D;JNE
@PongGame.moveBall$ifelse4
0;JMP
(PongGame.moveBall$if4)
@1  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //neg
A=M-1
M=-M
@LCL //pop local
D=M
@0
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@PongGame.moveBall$ifend4
0;JMP
(PongGame.moveBall$ifelse4)
@LCL //push local
D=M
@3
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@LCL //push local
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@10  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //sub
AM=M-1
D=M
A=A-1
M=M-D
@SP
AM=M-1
D=M
A=A-1
D=M-D
M=-1
@gt76
D;JGT
@SP
A=M-1
M=0
(gt76)
@SP
AM=M-1
D=M
@PongGame.moveBall$if7
D;JNE
@PongGame.moveBall$ifelse7
0;JMP
(PongGame.moveBall$if7)
@1  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL //pop local
D=M
@0
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
(PongGame.moveBall$ifelse7)
(PongGame.moveBall$ifend4)
@THIS    //push this
D=M
@6
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@2  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //sub
AM=M-1
D=M
A=A-1
M=M-D
@THIS    //pop this
D=M
@6
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@THIS    //push this
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS    //push this
D=M
@6
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@Bat.setWidth
D=A
@R13
M=D
@return350
D=A
@CALL
0;JMP
(return350)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@THIS    //push this
D=M
@4
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@THIS    //pop this
D=M
@4
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@25  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@7  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@Output.moveCursor
D=A
@R13
M=D
@return351
D=A
@CALL
0;JMP
(return351)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@THIS    //push this
D=M
@4
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@Output.printInt
D=A
@R13
M=D
@return352
D=A
@CALL
0;JMP
(return352)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
(PongGame.moveBall$ifelse3)
(PongGame.moveBall$ifelse2)
@THIS    //push this
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@LCL //push local
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@Ball.bounce
D=A
@R13
M=D
@return353
D=A
@CALL
0;JMP
(return353)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
(PongGame.moveBall$ifelse1)
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@RETURN
0;JMP

(Random.nextInt)
@0
D=A
(Random.nextInt_LOOP)
@Random.nextInt_END
D;JEQ
@SP
A=M
M=0
@SP
M=M+1
D=D-1
@Random.nextInt_LOOP
0;JMP
(Random.nextInt_END)

@Random.0   //push static
D=M
@SP
A=M
M=D
@SP
M=M+1
@31421  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@Math.multiply
D=A
@R13
M=D
@return354
D=A
@CALL
0;JMP
(return354)
@6927  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@SP  //pop static
AM=M-1
D=M
@Random.0
M=D
@Random.0   //push static
D=M
@SP
A=M
M=D
@SP
M=M+1
@RETURN
0;JMP

(Random.seed)
@0
D=A
(Random.seed_LOOP)
@Random.seed_END
D;JEQ
@SP
A=M
M=0
@SP
M=M+1
D=D-1
@Random.seed_LOOP
0;JMP
(Random.seed_END)

@ARG //push argument
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //pop static
AM=M-1
D=M
@Random.0
M=D
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@RETURN
0;JMP

(Sys.init)
@0
D=A
(Sys.init_LOOP)
@Sys.init_END
D;JEQ
@SP
A=M
M=0
@SP
M=M+1
D=D-1
@Sys.init_LOOP
0;JMP
(Sys.init_END)

@0
D=A
@R14
M=D
@GPIO.init
D=A
@R13
M=D
@return355
D=A
@CALL
0;JMP
(return355)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@0
D=A
@R14
M=D
@Memory.init
D=A
@R13
M=D
@return356
D=A
@CALL
0;JMP
(return356)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@0
D=A
@R14
M=D
@Array.init
D=A
@R13
M=D
@return357
D=A
@CALL
0;JMP
(return357)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@0
D=A
@R14
M=D
@Math.init
D=A
@R13
M=D
@return358
D=A
@CALL
0;JMP
(return358)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@0
D=A
@R14
M=D
@UART.init
D=A
@R13
M=D
@return359
D=A
@CALL
0;JMP
(return359)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@0
D=A
@R14
M=D
@Screen.init
D=A
@R13
M=D
@return360
D=A
@CALL
0;JMP
(return360)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@0
D=A
@R14
M=D
@Output.init
D=A
@R13
M=D
@return361
D=A
@CALL
0;JMP
(return361)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@0
D=A
@R14
M=D
@Sound.init
D=A
@R13
M=D
@return362
D=A
@CALL
0;JMP
(return362)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@0
D=A
@R14
M=D
@Touch.init
D=A
@R13
M=D
@return363
D=A
@CALL
0;JMP
(return363)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@0
D=A
@R14
M=D
@Main.main
D=A
@R13
M=D
@return364
D=A
@CALL
0;JMP
(return364)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@0
D=A
@R14
M=D
@Sys.halt
D=A
@R13
M=D
@return365
D=A
@CALL
0;JMP
(return365)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@RETURN
0;JMP

(Sys.halt)
@0
D=A
(Sys.halt_LOOP)
@Sys.halt_END
D;JEQ
@SP
A=M
M=0
@SP
M=M+1
D=D-1
@Sys.halt_LOOP
0;JMP
(Sys.halt_END)

@0
D=A
@R14
M=D
@GPIO.getLed
D=A
@R13
M=D
@return366
D=A
@CALL
0;JMP
(return366)
@2  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@1
D=A
@R14
M=D
@GPIO.setLed
D=A
@R13
M=D
@return367
D=A
@CALL
0;JMP
(return367)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
(Sys.halt$while4)
@1  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //neg
A=M-1
M=-M
@SP  //not
A=M-1
M=!M
@SP
AM=M-1
D=M
@Sys.halt$whileend4
D;JNE
@Sys.halt$while4
0;JMP
(Sys.halt$whileend4)
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@RETURN
0;JMP

(Sys.wait)
@1
D=A
(Sys.wait_LOOP)
@Sys.wait_END
D;JEQ
@SP
A=M
M=0
@SP
M=M+1
D=D-1
@Sys.wait_LOOP
0;JMP
(Sys.wait_END)

@ARG //push argument
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
D=M-D
M=-1
@lt77
D;JLT
@SP
A=M-1
M=0
(lt77)
@SP
AM=M-1
D=M
@Sys.wait$if1
D;JNE
@Sys.wait$ifelse1
0;JMP
(Sys.wait$if1)
@1  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@Sys.error
D=A
@R13
M=D
@return368
D=A
@CALL
0;JMP
(return368)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
(Sys.wait$ifelse1)
(Sys.wait$while7)
@ARG //push argument
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
D=M-D
M=-1
@gt78
D;JGT
@SP
A=M-1
M=0
(gt78)
@SP  //not
A=M-1
M=!M
@SP
AM=M-1
D=M
@Sys.wait$whileend7
D;JNE
@500  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL //pop local
D=M
@0
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
(Sys.wait$while9)
@LCL //push local
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
D=M-D
M=-1
@gt79
D;JGT
@SP
A=M-1
M=0
(gt79)
@SP  //not
A=M-1
M=!M
@SP
AM=M-1
D=M
@Sys.wait$whileend9
D;JNE
@LCL //push local
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //sub
AM=M-1
D=M
A=A-1
M=M-D
@LCL //pop local
D=M
@0
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@Sys.wait$while9
0;JMP
(Sys.wait$whileend9)
@ARG //push argument
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //sub
AM=M-1
D=M
A=A-1
M=M-D
@ARG //pop argument
D=M
@0
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@Sys.wait$while7
0;JMP
(Sys.wait$whileend7)
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@RETURN
0;JMP

(Sys.error)
@0
D=A
(Sys.error_LOOP)
@Sys.error_END
D;JEQ
@SP
A=M
M=0
@SP
M=M+1
D=D-1
@Sys.error_LOOP
0;JMP
(Sys.error_END)

@1  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@GPIO.setLed
D=A
@R13
M=D
@return369
D=A
@CALL
0;JMP
(return369)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@3  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@String.new
D=A
@R13
M=D
@return370
D=A
@CALL
0;JMP
(return370)
@69  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return371
D=A
@CALL
0;JMP
(return371)
@82  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return372
D=A
@CALL
0;JMP
(return372)
@82  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return373
D=A
@CALL
0;JMP
(return373)
@1
D=A
@R14
M=D
@Output.printString
D=A
@R13
M=D
@return374
D=A
@CALL
0;JMP
(return374)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@ARG //push argument
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@Output.printInt
D=A
@R13
M=D
@return375
D=A
@CALL
0;JMP
(return375)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@0
D=A
@R14
M=D
@Sys.halt
D=A
@R13
M=D
@return376
D=A
@CALL
0;JMP
(return376)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@RETURN
0;JMP

(Menu.init)
@0
D=A
(Menu.init_LOOP)
@Menu.init_END
D;JEQ
@SP
A=M
M=0
@SP
M=M+1
D=D-1
@Menu.init_LOOP
0;JMP
(Menu.init_END)

@4  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@Array.new
D=A
@R13
M=D
@return377
D=A
@CALL
0;JMP
(return377)
@SP  //pop static
AM=M-1
D=M
@Menu.0
M=D
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@Menu.0   //push static
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@Button.new
D=A
@R13
M=D
@return378
D=A
@CALL
0;JMP
(return378)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@SP  //pop pointer
AM=M-1
D=M
@THAT
M=D
@R5 //push temp
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT    //pop that
D=M
@0
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@1  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@Menu.0   //push static
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@1  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@Button.new
D=A
@R13
M=D
@return379
D=A
@CALL
0;JMP
(return379)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@SP  //pop pointer
AM=M-1
D=M
@THAT
M=D
@R5 //push temp
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT    //pop that
D=M
@0
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@2  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@Menu.0   //push static
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@2  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@Button.new
D=A
@R13
M=D
@return380
D=A
@CALL
0;JMP
(return380)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@SP  //pop pointer
AM=M-1
D=M
@THAT
M=D
@R5 //push temp
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT    //pop that
D=M
@0
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@3  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@Menu.0   //push static
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@3  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@Button.new
D=A
@R13
M=D
@return381
D=A
@CALL
0;JMP
(return381)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@SP  //pop pointer
AM=M-1
D=M
@THAT
M=D
@R5 //push temp
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT    //pop that
D=M
@0
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //pop static
AM=M-1
D=M
@Menu.1
M=D
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //pop static
AM=M-1
D=M
@Menu.2
M=D
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@RETURN
0;JMP

(Menu.setButtonText)
@1
D=A
(Menu.setButtonText_LOOP)
@Menu.setButtonText_END
D;JEQ
@SP
A=M
M=0
@SP
M=M+1
D=D-1
@Menu.setButtonText_LOOP
0;JMP
(Menu.setButtonText_END)

@ARG //push argument
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //neg
A=M-1
M=-M
@SP
AM=M-1
D=M
A=A-1
D=M-D
M=-1
@gt80
D;JGT
@SP
A=M-1
M=0
(gt80)
@ARG //push argument
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@4  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
D=M-D
M=-1
@lt81
D;JLT
@SP
A=M-1
M=0
(lt81)
@SP  //and
AM=M-1
D=M
A=A-1
M=D&M
@SP
AM=M-1
D=M
@Menu.setButtonText$if1
D;JNE
@Menu.setButtonText$ifelse1
0;JMP
(Menu.setButtonText$if1)
@Menu.0   //push static
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG //push argument
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@SP  //pop pointer
AM=M-1
D=M
@THAT
M=D
@THAT    //push that
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@LCL //pop local
D=M
@0
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@LCL //push local
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG //push argument
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@Button.setText
D=A
@R13
M=D
@return382
D=A
@CALL
0;JMP
(return382)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@LCL //push local
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@Button.draw
D=A
@R13
M=D
@return383
D=A
@CALL
0;JMP
(return383)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
(Menu.setButtonText$ifelse1)
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@RETURN
0;JMP

(Menu.getButton)
@2
D=A
(Menu.getButton_LOOP)
@Menu.getButton_END
D;JEQ
@SP
A=M
M=0
@SP
M=M+1
D=D-1
@Menu.getButton_LOOP
0;JMP
(Menu.getButton_END)

@0
D=A
@R14
M=D
@Touch.update
D=A
@R13
M=D
@return384
D=A
@CALL
0;JMP
(return384)
@LCL //pop local
D=M
@0
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@LCL //push local
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //not
A=M-1
M=!M
@SP
AM=M-1
D=M
@Menu.getButton$if1
D;JNE
@Menu.getButton$ifelse1
0;JMP
(Menu.getButton$if1)
@1  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //neg
A=M-1
M=-M
@RETURN
0;JMP

(Menu.getButton$ifelse1)
@Menu.2   //push static
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
@Menu.getButton$if4
D;JNE
@Menu.getButton$ifelse4
0;JMP
(Menu.getButton$if4)
@0
D=A
@R14
M=D
@Touch.getPressed
D=A
@R13
M=D
@return385
D=A
@CALL
0;JMP
(return385)
@SP  //not
A=M-1
M=!M
@SP
AM=M-1
D=M
@Menu.getButton$if5
D;JNE
@Menu.getButton$ifelse5
0;JMP
(Menu.getButton$if5)
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //pop static
AM=M-1
D=M
@Menu.2
M=D
@Menu.0   //push static
D=M
@SP
A=M
M=D
@SP
M=M+1
@Menu.1   //push static
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@SP  //pop pointer
AM=M-1
D=M
@THAT
M=D
@THAT    //push that
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@LCL //pop local
D=M
@1
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@LCL //push local
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@Button.draw
D=A
@R13
M=D
@return386
D=A
@CALL
0;JMP
(return386)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
(Menu.getButton$ifelse5)
@Menu.getButton$ifend4
0;JMP
(Menu.getButton$ifelse4)
@0
D=A
@R14
M=D
@Touch.getPressed
D=A
@R13
M=D
@return387
D=A
@CALL
0;JMP
(return387)
@0
D=A
@R14
M=D
@Touch.getY
D=A
@R13
M=D
@return388
D=A
@CALL
0;JMP
(return388)
@8  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
D=M-D
M=-1
@lt82
D;JLT
@SP
A=M-1
M=0
(lt82)
@SP  //and
AM=M-1
D=M
A=A-1
M=D&M
@SP
AM=M-1
D=M
@Menu.getButton$if12
D;JNE
@Menu.getButton$ifelse12
0;JMP
(Menu.getButton$if12)
@1  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //neg
A=M-1
M=-M
@SP  //pop static
AM=M-1
D=M
@Menu.2
M=D
@Menu.0   //push static
D=M
@SP
A=M
M=D
@SP
M=M+1
@Menu.1   //push static
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@SP  //pop pointer
AM=M-1
D=M
@THAT
M=D
@THAT    //push that
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@LCL //pop local
D=M
@1
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@LCL //push local
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@Button.draw
D=A
@R13
M=D
@return389
D=A
@CALL
0;JMP
(return389)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@0
D=A
@R14
M=D
@Touch.getX
D=A
@R13
M=D
@return390
D=A
@CALL
0;JMP
(return390)
@8  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@Math.divide
D=A
@R13
M=D
@return391
D=A
@CALL
0;JMP
(return391)
@SP  //pop static
AM=M-1
D=M
@Menu.1
M=D
@Menu.0   //push static
D=M
@SP
A=M
M=D
@SP
M=M+1
@Menu.1   //push static
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@SP  //pop pointer
AM=M-1
D=M
@THAT
M=D
@THAT    //push that
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@LCL //pop local
D=M
@1
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@LCL //push local
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //neg
A=M-1
M=-M
@2
D=A
@R14
M=D
@Button.draw
D=A
@R13
M=D
@return392
D=A
@CALL
0;JMP
(return392)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@Menu.1   //push static
D=M
@SP
A=M
M=D
@SP
M=M+1
@RETURN
0;JMP

(Menu.getButton$ifelse12)
@1  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //neg
A=M-1
M=-M
@RETURN
0;JMP

(Menu.getButton$ifend4)
@1  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //neg
A=M-1
M=-M
@RETURN
0;JMP

(Array.init)
@0
D=A
(Array.init_LOOP)
@Array.init_END
D;JEQ
@SP
A=M
M=0
@SP
M=M+1
D=D-1
@Array.init_LOOP
0;JMP
(Array.init_END)

@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@RETURN
0;JMP

(Array.new)
@0
D=A
(Array.new_LOOP)
@Array.new_END
D;JEQ
@SP
A=M
M=0
@SP
M=M+1
D=D-1
@Array.new_LOOP
0;JMP
(Array.new_END)

@ARG //push argument
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
D=M-D
M=-1
@gt83
D;JGT
@SP
A=M-1
M=0
(gt83)
@SP  //not
A=M-1
M=!M
@SP
AM=M-1
D=M
@Array.new$if1
D;JNE
@Array.new$ifelse1
0;JMP
(Array.new$if1)
@2  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@Sys.error
D=A
@R13
M=D
@return393
D=A
@CALL
0;JMP
(return393)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
(Array.new$ifelse1)
@ARG //push argument
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@Memory.alloc
D=A
@R13
M=D
@return394
D=A
@CALL
0;JMP
(return394)
@RETURN
0;JMP

(Array.dispose)
@0
D=A
(Array.dispose_LOOP)
@Array.dispose_END
D;JEQ
@SP
A=M
M=0
@SP
M=M+1
D=D-1
@Array.dispose_LOOP
0;JMP
(Array.dispose_END)

@ARG //push argument
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //pop pointer
AM=M-1
D=M
@THIS
M=D
@R3 //push pointer
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@Memory.deAlloc
D=A
@R13
M=D
@return395
D=A
@CALL
0;JMP
(return395)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@RETURN
0;JMP

(String.init)
@0
D=A
(String.init_LOOP)
@String.init_END
D;JEQ
@SP
A=M
M=0
@SP
M=M+1
D=D-1
@String.init_LOOP
0;JMP
(String.init_END)

@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@RETURN
0;JMP

(String.new)
@0
D=A
(String.new_LOOP)
@String.new_END
D;JEQ
@SP
A=M
M=0
@SP
M=M+1
D=D-1
@String.new_LOOP
0;JMP
(String.new_END)

@3  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@Memory.alloc
D=A
@R13
M=D
@return396
D=A
@CALL
0;JMP
(return396)
@SP  //pop pointer
AM=M-1
D=M
@THIS
M=D
@ARG //push argument
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
D=M-D
M=-1
@lt84
D;JLT
@SP
A=M-1
M=0
(lt84)
@SP
AM=M-1
D=M
@String.new$if1
D;JNE
@String.new$ifelse1
0;JMP
(String.new$if1)
@14  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@Sys.error
D=A
@R13
M=D
@return397
D=A
@CALL
0;JMP
(return397)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
(String.new$ifelse1)
@ARG //push argument
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
D=M-D
M=-1
@gt85
D;JGT
@SP
A=M-1
M=0
(gt85)
@SP
AM=M-1
D=M
@String.new$if6
D;JNE
@String.new$ifelse6
0;JMP
(String.new$if6)
@ARG //push argument
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@Array.new
D=A
@R13
M=D
@return398
D=A
@CALL
0;JMP
(return398)
@THIS    //pop this
D=M
@1
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
(String.new$ifelse6)
@ARG //push argument
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS    //pop this
D=M
@0
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@THIS    //pop this
D=M
@2
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@R3 //push pointer
D=M
@SP
A=M
M=D
@SP
M=M+1
@RETURN
0;JMP

(String.dispose)
@0
D=A
(String.dispose_LOOP)
@String.dispose_END
D;JEQ
@SP
A=M
M=0
@SP
M=M+1
D=D-1
@String.dispose_LOOP
0;JMP
(String.dispose_END)

@ARG //push argument
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //pop pointer
AM=M-1
D=M
@THIS
M=D
@THIS    //push this
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
D=M-D
M=-1
@gt86
D;JGT
@SP
A=M-1
M=0
(gt86)
@SP
AM=M-1
D=M
@String.dispose$if1
D;JNE
@String.dispose$ifelse1
0;JMP
(String.dispose$if1)
@THIS    //push this
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@Array.dispose
D=A
@R13
M=D
@return399
D=A
@CALL
0;JMP
(return399)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
(String.dispose$ifelse1)
@R3 //push pointer
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@Memory.deAlloc
D=A
@R13
M=D
@return400
D=A
@CALL
0;JMP
(return400)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@RETURN
0;JMP

(String.length)
@0
D=A
(String.length_LOOP)
@String.length_END
D;JEQ
@SP
A=M
M=0
@SP
M=M+1
D=D-1
@String.length_LOOP
0;JMP
(String.length_END)

@ARG //push argument
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //pop pointer
AM=M-1
D=M
@THIS
M=D
@THIS    //push this
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@RETURN
0;JMP

(String.charAt)
@0
D=A
(String.charAt_LOOP)
@String.charAt_END
D;JEQ
@SP
A=M
M=0
@SP
M=M+1
D=D-1
@String.charAt_LOOP
0;JMP
(String.charAt_END)

@ARG //push argument
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //pop pointer
AM=M-1
D=M
@THIS
M=D
@ARG //push argument
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
D=M-D
M=-1
@lt87
D;JLT
@SP
A=M-1
M=0
(lt87)
@ARG //push argument
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS    //push this
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
D=M-D
M=-1
@gt88
D;JGT
@SP
A=M-1
M=0
(gt88)
@SP  //or
AM=M-1
D=M
A=A-1
M=D|M
@ARG //push argument
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS    //push this
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
D=D-M
M=-1
@eq89
D;JEQ
@SP
A=M-1
M=0
(eq89)
@SP  //or
AM=M-1
D=M
A=A-1
M=D|M
@SP
AM=M-1
D=M
@String.charAt$if1
D;JNE
@String.charAt$ifelse1
0;JMP
(String.charAt$if1)
@15  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@Sys.error
D=A
@R13
M=D
@return401
D=A
@CALL
0;JMP
(return401)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
(String.charAt$ifelse1)
@THIS    //push this
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG //push argument
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@SP  //pop pointer
AM=M-1
D=M
@THAT
M=D
@THAT    //push that
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@RETURN
0;JMP

(String.setCharAt)
@0
D=A
(String.setCharAt_LOOP)
@String.setCharAt_END
D;JEQ
@SP
A=M
M=0
@SP
M=M+1
D=D-1
@String.setCharAt_LOOP
0;JMP
(String.setCharAt_END)

@ARG //push argument
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //pop pointer
AM=M-1
D=M
@THIS
M=D
@ARG //push argument
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
D=M-D
M=-1
@lt90
D;JLT
@SP
A=M-1
M=0
(lt90)
@ARG //push argument
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS    //push this
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
D=M-D
M=-1
@gt91
D;JGT
@SP
A=M-1
M=0
(gt91)
@SP  //or
AM=M-1
D=M
A=A-1
M=D|M
@ARG //push argument
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS    //push this
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
D=D-M
M=-1
@eq92
D;JEQ
@SP
A=M-1
M=0
(eq92)
@SP  //or
AM=M-1
D=M
A=A-1
M=D|M
@SP
AM=M-1
D=M
@String.setCharAt$if1
D;JNE
@String.setCharAt$ifelse1
0;JMP
(String.setCharAt$if1)
@16  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@Sys.error
D=A
@R13
M=D
@return402
D=A
@CALL
0;JMP
(return402)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
(String.setCharAt$ifelse1)
@ARG //push argument
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS    //push this
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@ARG //push argument
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@SP  //pop pointer
AM=M-1
D=M
@THAT
M=D
@R5 //push temp
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT    //pop that
D=M
@0
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@RETURN
0;JMP

(String.appendChar)
@0
D=A
(String.appendChar_LOOP)
@String.appendChar_END
D;JEQ
@SP
A=M
M=0
@SP
M=M+1
D=D-1
@String.appendChar_LOOP
0;JMP
(String.appendChar_END)

@ARG //push argument
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //pop pointer
AM=M-1
D=M
@THIS
M=D
@THIS    //push this
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS    //push this
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
D=D-M
M=-1
@eq93
D;JEQ
@SP
A=M-1
M=0
(eq93)
@SP
AM=M-1
D=M
@String.appendChar$if1
D;JNE
@String.appendChar$ifelse1
0;JMP
(String.appendChar$if1)
@17  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@Sys.error
D=A
@R13
M=D
@return403
D=A
@CALL
0;JMP
(return403)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
(String.appendChar$ifelse1)
@THIS    //push this
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS    //push this
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@ARG //push argument
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@SP  //pop pointer
AM=M-1
D=M
@THAT
M=D
@R5 //push temp
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT    //pop that
D=M
@0
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@THIS    //push this
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@THIS    //pop this
D=M
@2
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@R3 //push pointer
D=M
@SP
A=M
M=D
@SP
M=M+1
@RETURN
0;JMP

(String.eraseLastChar)
@0
D=A
(String.eraseLastChar_LOOP)
@String.eraseLastChar_END
D;JEQ
@SP
A=M
M=0
@SP
M=M+1
D=D-1
@String.eraseLastChar_LOOP
0;JMP
(String.eraseLastChar_END)

@ARG //push argument
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //pop pointer
AM=M-1
D=M
@THIS
M=D
@THIS    //push this
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
D=D-M
M=-1
@eq94
D;JEQ
@SP
A=M-1
M=0
(eq94)
@SP
AM=M-1
D=M
@String.eraseLastChar$if1
D;JNE
@String.eraseLastChar$ifelse1
0;JMP
(String.eraseLastChar$if1)
@18  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@Sys.error
D=A
@R13
M=D
@return404
D=A
@CALL
0;JMP
(return404)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
(String.eraseLastChar$ifelse1)
@THIS    //push this
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //sub
AM=M-1
D=M
A=A-1
M=M-D
@THIS    //pop this
D=M
@2
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@RETURN
0;JMP

(String.intValue)
@5
D=A
(String.intValue_LOOP)
@String.intValue_END
D;JEQ
@SP
A=M
M=0
@SP
M=M+1
D=D-1
@String.intValue_LOOP
0;JMP
(String.intValue_END)

@ARG //push argument
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //pop pointer
AM=M-1
D=M
@THIS
M=D
@THIS    //push this
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
D=D-M
M=-1
@eq95
D;JEQ
@SP
A=M-1
M=0
(eq95)
@SP
AM=M-1
D=M
@String.intValue$if1
D;JNE
@String.intValue$ifelse1
0;JMP
(String.intValue$if1)
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@RETURN
0;JMP

(String.intValue$ifelse1)
@1  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //neg
A=M-1
M=-M
@LCL //pop local
D=M
@3
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@THIS    //push this
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@SP  //pop pointer
AM=M-1
D=M
@THAT
M=D
@THAT    //push that
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@45  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
D=D-M
M=-1
@eq96
D;JEQ
@SP
A=M-1
M=0
(eq96)
@SP
AM=M-1
D=M
@String.intValue$if4
D;JNE
@String.intValue$ifelse4
0;JMP
(String.intValue$if4)
@1  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //neg
A=M-1
M=-M
@LCL //pop local
D=M
@4
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@1  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL //pop local
D=M
@0
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
(String.intValue$ifelse4)
(String.intValue$while8)
@LCL //push local
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS    //push this
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
D=M-D
M=-1
@lt97
D;JLT
@SP
A=M-1
M=0
(lt97)
@LCL //push local
D=M
@3
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //and
AM=M-1
D=M
A=A-1
M=D&M
@SP  //not
A=M-1
M=!M
@SP
AM=M-1
D=M
@String.intValue$whileend8
D;JNE
@THIS    //push this
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@LCL //push local
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@SP  //pop pointer
AM=M-1
D=M
@THAT
M=D
@THAT    //push that
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@48  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //sub
AM=M-1
D=M
A=A-1
M=M-D
@LCL //pop local
D=M
@2
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@LCL //push local
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
D=M-D
M=-1
@lt98
D;JLT
@SP
A=M-1
M=0
(lt98)
@LCL //push local
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@9  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
D=M-D
M=-1
@gt99
D;JGT
@SP
A=M-1
M=0
(gt99)
@SP  //or
AM=M-1
D=M
A=A-1
M=D|M
@SP  //not
A=M-1
M=!M
@LCL //pop local
D=M
@3
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@LCL //push local
D=M
@3
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
@String.intValue$if9
D;JNE
@String.intValue$ifelse9
0;JMP
(String.intValue$if9)
@LCL //push local
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@10  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@Math.multiply
D=A
@R13
M=D
@return405
D=A
@CALL
0;JMP
(return405)
@LCL //push local
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@LCL //pop local
D=M
@1
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@LCL //push local
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@LCL //pop local
D=M
@0
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
(String.intValue$ifelse9)
@String.intValue$while8
0;JMP
(String.intValue$whileend8)
@LCL //push local
D=M
@4
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
@String.intValue$if14
D;JNE
@String.intValue$ifelse14
0;JMP
(String.intValue$if14)
@LCL //push local
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //neg
A=M-1
M=-M
@LCL //pop local
D=M
@1
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
(String.intValue$ifelse14)
@LCL //push local
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@RETURN
0;JMP

(String.setInt)
@4
D=A
(String.setInt_LOOP)
@String.setInt_END
D;JEQ
@SP
A=M
M=0
@SP
M=M+1
D=D-1
@String.setInt_LOOP
0;JMP
(String.setInt_END)

@ARG //push argument
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //pop pointer
AM=M-1
D=M
@THIS
M=D
@THIS    //push this
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
D=D-M
M=-1
@eq100
D;JEQ
@SP
A=M-1
M=0
(eq100)
@SP
AM=M-1
D=M
@String.setInt$if1
D;JNE
@String.setInt$ifelse1
0;JMP
(String.setInt$if1)
@19  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@Sys.error
D=A
@R13
M=D
@return406
D=A
@CALL
0;JMP
(return406)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
(String.setInt$ifelse1)
@6  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@Array.new
D=A
@R13
M=D
@return407
D=A
@CALL
0;JMP
(return407)
@LCL //pop local
D=M
@2
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@ARG //push argument
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
D=M-D
M=-1
@lt101
D;JLT
@SP
A=M-1
M=0
(lt101)
@SP
AM=M-1
D=M
@String.setInt$if6
D;JNE
@String.setInt$ifelse6
0;JMP
(String.setInt$if6)
@1  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //neg
A=M-1
M=-M
@LCL //pop local
D=M
@3
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@ARG //push argument
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //neg
A=M-1
M=-M
@ARG //pop argument
D=M
@1
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
(String.setInt$ifelse6)
@ARG //push argument
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@LCL //pop local
D=M
@1
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
(String.setInt$while10)
@LCL //push local
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
D=M-D
M=-1
@gt102
D;JGT
@SP
A=M-1
M=0
(gt102)
@SP  //not
A=M-1
M=!M
@SP
AM=M-1
D=M
@String.setInt$whileend10
D;JNE
@ARG //push argument
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@10  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@Math.divide
D=A
@R13
M=D
@return408
D=A
@CALL
0;JMP
(return408)
@LCL //pop local
D=M
@1
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@LCL //push local
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@LCL //push local
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@48  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@ARG //push argument
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@LCL //push local
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@10  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@Math.multiply
D=A
@R13
M=D
@return409
D=A
@CALL
0;JMP
(return409)
@SP  //sub
AM=M-1
D=M
A=A-1
M=M-D
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@SP  //pop pointer
AM=M-1
D=M
@THAT
M=D
@R5 //push temp
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT    //pop that
D=M
@0
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@LCL //push local
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@LCL //pop local
D=M
@0
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@LCL //push local
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG //pop argument
D=M
@1
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@String.setInt$while10
0;JMP
(String.setInt$whileend10)
@LCL //push local
D=M
@3
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
@String.setInt$if13
D;JNE
@String.setInt$ifelse13
0;JMP
(String.setInt$if13)
@LCL //push local
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@LCL //push local
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@45  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@SP  //pop pointer
AM=M-1
D=M
@THAT
M=D
@R5 //push temp
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT    //pop that
D=M
@0
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@LCL //push local
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@LCL //pop local
D=M
@0
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
(String.setInt$ifelse13)
@THIS    //push this
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@LCL //push local
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
D=M-D
M=-1
@lt103
D;JLT
@SP
A=M-1
M=0
(lt103)
@SP
AM=M-1
D=M
@String.setInt$if16
D;JNE
@String.setInt$ifelse16
0;JMP
(String.setInt$if16)
@19  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@Sys.error
D=A
@R13
M=D
@return410
D=A
@CALL
0;JMP
(return410)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
(String.setInt$ifelse16)
@LCL //push local
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
D=D-M
M=-1
@eq104
D;JEQ
@SP
A=M-1
M=0
(eq104)
@SP
AM=M-1
D=M
@String.setInt$if21
D;JNE
@String.setInt$ifelse21
0;JMP
(String.setInt$if21)
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@THIS    //push this
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@48  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@SP  //pop pointer
AM=M-1
D=M
@THAT
M=D
@R5 //push temp
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT    //pop that
D=M
@0
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@1  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@THIS    //pop this
D=M
@2
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@String.setInt$ifend21
0;JMP
(String.setInt$ifelse21)
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@THIS    //pop this
D=M
@2
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
(String.setInt$while25)
@THIS    //push this
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@LCL //push local
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
D=M-D
M=-1
@lt105
D;JLT
@SP
A=M-1
M=0
(lt105)
@SP  //not
A=M-1
M=!M
@SP
AM=M-1
D=M
@String.setInt$whileend25
D;JNE
@THIS    //push this
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS    //push this
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@LCL //push local
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@LCL //push local
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS    //push this
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@SP  //sub
AM=M-1
D=M
A=A-1
M=M-D
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@SP  //pop pointer
AM=M-1
D=M
@THAT
M=D
@THAT    //push that
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@SP  //pop pointer
AM=M-1
D=M
@THAT
M=D
@R5 //push temp
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT    //pop that
D=M
@0
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@THIS    //push this
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@THIS    //pop this
D=M
@2
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@String.setInt$while25
0;JMP
(String.setInt$whileend25)
(String.setInt$ifend21)
@LCL //push local
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@Array.dispose
D=A
@R13
M=D
@return411
D=A
@CALL
0;JMP
(return411)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@RETURN
0;JMP

(String.newLine)
@0
D=A
(String.newLine_LOOP)
@String.newLine_END
D;JEQ
@SP
A=M
M=0
@SP
M=M+1
D=D-1
@String.newLine_LOOP
0;JMP
(String.newLine_END)

@128  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@RETURN
0;JMP

(String.backSpace)
@0
D=A
(String.backSpace_LOOP)
@String.backSpace_END
D;JEQ
@SP
A=M
M=0
@SP
M=M+1
D=D-1
@String.backSpace_LOOP
0;JMP
(String.backSpace_END)

@129  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@RETURN
0;JMP

(String.doubleQuote)
@0
D=A
(String.doubleQuote_LOOP)
@String.doubleQuote_END
D;JEQ
@SP
A=M
M=0
@SP
M=M+1
D=D-1
@String.doubleQuote_LOOP
0;JMP
(String.doubleQuote_END)

@34  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@RETURN
0;JMP

(Sound.init)
@0
D=A
(Sound.init_LOOP)
@Sound.init_END
D;JEQ
@SP
A=M
M=0
@SP
M=M+1
D=D-1
@Sound.init_LOOP
0;JMP
(Sound.init_END)

@8204  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //pop static
AM=M-1
D=M
@Sound.0
M=D
@8  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@Array.new
D=A
@R13
M=D
@return412
D=A
@CALL
0;JMP
(return412)
@SP  //pop static
AM=M-1
D=M
@Sound.1
M=D
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@Sound.1   //push static
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@4735  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //neg
A=M-1
M=-M
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@SP  //pop pointer
AM=M-1
D=M
@THAT
M=D
@R5 //push temp
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT    //pop that
D=M
@0
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@1  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@Sound.1   //push static
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@4471  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //neg
A=M-1
M=-M
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@SP  //pop pointer
AM=M-1
D=M
@THAT
M=D
@R5 //push temp
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT    //pop that
D=M
@0
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@2  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@Sound.1   //push static
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@7952  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //neg
A=M-1
M=-M
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@SP  //pop pointer
AM=M-1
D=M
@THAT
M=D
@R5 //push temp
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT    //pop that
D=M
@0
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@3  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@Sound.1   //push static
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@7086  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //neg
A=M-1
M=-M
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@SP  //pop pointer
AM=M-1
D=M
@THAT
M=D
@R5 //push temp
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT    //pop that
D=M
@0
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@4  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@Sound.1   //push static
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@6313  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //neg
A=M-1
M=-M
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@SP  //pop pointer
AM=M-1
D=M
@THAT
M=D
@R5 //push temp
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT    //pop that
D=M
@0
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@5  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@Sound.1   //push static
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@5969  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //neg
A=M-1
M=-M
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@SP  //pop pointer
AM=M-1
D=M
@THAT
M=D
@R5 //push temp
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT    //pop that
D=M
@0
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@6  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@Sound.1   //push static
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@5315  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //neg
A=M-1
M=-M
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@SP  //pop pointer
AM=M-1
D=M
@THAT
M=D
@R5 //push temp
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT    //pop that
D=M
@0
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@7  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@Sound.1   //push static
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@4217  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //neg
A=M-1
M=-M
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@SP  //pop pointer
AM=M-1
D=M
@THAT
M=D
@R5 //push temp
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT    //pop that
D=M
@0
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@RETURN
0;JMP

(Sound.new)
@0
D=A
(Sound.new_LOOP)
@Sound.new_END
D;JEQ
@SP
A=M
M=0
@SP
M=M+1
D=D-1
@Sound.new_LOOP
0;JMP
(Sound.new_END)

@4  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@Memory.alloc
D=A
@R13
M=D
@return413
D=A
@CALL
0;JMP
(return413)
@SP  //pop pointer
AM=M-1
D=M
@THIS
M=D
@ARG //push argument
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS    //pop this
D=M
@0
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@ARG //push argument
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS    //pop this
D=M
@2
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@THIS    //pop this
D=M
@1
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@R3 //push pointer
D=M
@SP
A=M
M=D
@SP
M=M+1
@RETURN
0;JMP

(Sound.getTime)
@0
D=A
(Sound.getTime_LOOP)
@Sound.getTime_END
D;JEQ
@SP
A=M
M=0
@SP
M=M+1
D=D-1
@Sound.getTime_LOOP
0;JMP
(Sound.getTime_END)

@Sound.0   //push static
D=M
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@SP  //pop pointer
AM=M-1
D=M
@THAT
M=D
@THAT    //push that
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@RETURN
0;JMP

(Sound.start)
@0
D=A
(Sound.start_LOOP)
@Sound.start_END
D;JEQ
@SP
A=M
M=0
@SP
M=M+1
D=D-1
@Sound.start_LOOP
0;JMP
(Sound.start_END)

@ARG //push argument
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //pop pointer
AM=M-1
D=M
@THIS
M=D
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@THIS    //pop this
D=M
@1
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@0
D=A
@R14
M=D
@Sound.getTime
D=A
@R13
M=D
@return414
D=A
@CALL
0;JMP
(return414)
@THIS    //pop this
D=M
@3
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@RETURN
0;JMP

(Sound.stop)
@0
D=A
(Sound.stop_LOOP)
@Sound.stop_END
D;JEQ
@SP
A=M
M=0
@SP
M=M+1
D=D-1
@Sound.stop_LOOP
0;JMP
(Sound.stop_END)

@ARG //push argument
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //pop pointer
AM=M-1
D=M
@THIS
M=D
@1  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //neg
A=M-1
M=-M
@1
D=A
@R14
M=D
@Sound.play
D=A
@R13
M=D
@return415
D=A
@CALL
0;JMP
(return415)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@RETURN
0;JMP

(Sound.dispose)
@0
D=A
(Sound.dispose_LOOP)
@Sound.dispose_END
D;JEQ
@SP
A=M
M=0
@SP
M=M+1
D=D-1
@Sound.dispose_LOOP
0;JMP
(Sound.dispose_END)

@ARG //push argument
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //pop pointer
AM=M-1
D=M
@THIS
M=D
@THIS    //push this
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@String.dispose
D=A
@R13
M=D
@return416
D=A
@CALL
0;JMP
(return416)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@R3 //push pointer
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@Memory.deAlloc
D=A
@R13
M=D
@return417
D=A
@CALL
0;JMP
(return417)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@RETURN
0;JMP

(Sound.setSpeed)
@0
D=A
(Sound.setSpeed_LOOP)
@Sound.setSpeed_END
D;JEQ
@SP
A=M
M=0
@SP
M=M+1
D=D-1
@Sound.setSpeed_LOOP
0;JMP
(Sound.setSpeed_END)

@ARG //push argument
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //pop pointer
AM=M-1
D=M
@THIS
M=D
@ARG //push argument
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS    //pop this
D=M
@2
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@RETURN
0;JMP

(Sound.getSpeed)
@0
D=A
(Sound.getSpeed_LOOP)
@Sound.getSpeed_END
D;JEQ
@SP
A=M
M=0
@SP
M=M+1
D=D-1
@Sound.getSpeed_LOOP
0;JMP
(Sound.getSpeed_END)

@ARG //push argument
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //pop pointer
AM=M-1
D=M
@THIS
M=D
@THIS    //push this
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@RETURN
0;JMP

(Sound.go)
@1
D=A
(Sound.go_LOOP)
@Sound.go_END
D;JEQ
@SP
A=M
M=0
@SP
M=M+1
D=D-1
@Sound.go_LOOP
0;JMP
(Sound.go_END)

@ARG //push argument
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //pop pointer
AM=M-1
D=M
@THIS
M=D
@0
D=A
@R14
M=D
@Sound.getTime
D=A
@R13
M=D
@return418
D=A
@CALL
0;JMP
(return418)
@LCL //pop local
D=M
@0
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@LCL //push local
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS    //push this
D=M
@3
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //sub
AM=M-1
D=M
A=A-1
M=M-D
@THIS    //push this
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
D=M-D
M=-1
@gt106
D;JGT
@SP
A=M-1
M=0
(gt106)
@SP
AM=M-1
D=M
@Sound.go$if1
D;JNE
@Sound.go$ifelse1
0;JMP
(Sound.go$if1)
@THIS    //push this
D=M
@3
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS    //push this
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@THIS    //pop this
D=M
@3
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@1  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //neg
A=M-1
M=-M
@1
D=A
@R14
M=D
@Sound.play
D=A
@R13
M=D
@return419
D=A
@CALL
0;JMP
(return419)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@THIS    //push this
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS    //push this
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.charAt
D=A
@R13
M=D
@return420
D=A
@CALL
0;JMP
(return420)
@1
D=A
@R14
M=D
@Sound.play
D=A
@R13
M=D
@return421
D=A
@CALL
0;JMP
(return421)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@THIS    //push this
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@THIS    //pop this
D=M
@1
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@THIS    //push this
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS    //push this
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@String.length
D=A
@R13
M=D
@return422
D=A
@CALL
0;JMP
(return422)
@SP
AM=M-1
D=M
A=A-1
D=D-M
M=-1
@eq107
D;JEQ
@SP
A=M-1
M=0
(eq107)
@SP
AM=M-1
D=M
@Sound.go$if6
D;JNE
@Sound.go$ifelse6
0;JMP
(Sound.go$if6)
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@THIS    //pop this
D=M
@1
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
(Sound.go$ifelse6)
@THIS    //push this
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@RETURN
0;JMP

(Sound.go$ifelse1)
@1  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //neg
A=M-1
M=-M
@RETURN
0;JMP

(Sound.play)
@1
D=A
(Sound.play_LOOP)
@Sound.play_END
D;JEQ
@SP
A=M
M=0
@SP
M=M+1
D=D-1
@Sound.play_LOOP
0;JMP
(Sound.play_END)

@ARG //push argument
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //neg
A=M-1
M=-M
@SP
AM=M-1
D=M
A=A-1
D=D-M
M=-1
@eq108
D;JEQ
@SP
A=M-1
M=0
(eq108)
@SP
AM=M-1
D=M
@Sound.play$if1
D;JNE
@Sound.play$ifelse1
0;JMP
(Sound.play$if1)
@1  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@Sound.0   //push static
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@ARG //push argument
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@SP  //pop pointer
AM=M-1
D=M
@THAT
M=D
@R5 //push temp
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT    //pop that
D=M
@0
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@RETURN
0;JMP

(Sound.play$ifelse1)
@ARG //push argument
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@65  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //sub
AM=M-1
D=M
A=A-1
M=M-D
@LCL //pop local
D=M
@0
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@LCL //push local
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //neg
A=M-1
M=-M
@SP
AM=M-1
D=M
A=A-1
D=M-D
M=-1
@gt109
D;JGT
@SP
A=M-1
M=0
(gt109)
@LCL //push local
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@9  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
D=M-D
M=-1
@lt110
D;JLT
@SP
A=M-1
M=0
(lt110)
@SP  //and
AM=M-1
D=M
A=A-1
M=D&M
@SP
AM=M-1
D=M
@Sound.play$if4
D;JNE
@Sound.play$ifelse4
0;JMP
(Sound.play$if4)
@1  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@Sound.0   //push static
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@Sound.1   //push static
D=M
@SP
A=M
M=D
@SP
M=M+1
@LCL //push local
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@SP  //pop pointer
AM=M-1
D=M
@THAT
M=D
@THAT    //push that
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@SP  //pop pointer
AM=M-1
D=M
@THAT
M=D
@R5 //push temp
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT    //pop that
D=M
@0
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@RETURN
0;JMP

(Sound.play$ifelse4)
@LCL //push local
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@32  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //sub
AM=M-1
D=M
A=A-1
M=M-D
@LCL //pop local
D=M
@0
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@LCL //push local
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //neg
A=M-1
M=-M
@SP
AM=M-1
D=M
A=A-1
D=M-D
M=-1
@gt111
D;JGT
@SP
A=M-1
M=0
(gt111)
@LCL //push local
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@9  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
D=M-D
M=-1
@lt112
D;JLT
@SP
A=M-1
M=0
(lt112)
@SP  //and
AM=M-1
D=M
A=A-1
M=D&M
@SP
AM=M-1
D=M
@Sound.play$if7
D;JNE
@Sound.play$ifelse7
0;JMP
(Sound.play$if7)
@1  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@Sound.0   //push static
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@Sound.1   //push static
D=M
@SP
A=M
M=D
@SP
M=M+1
@LCL //push local
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@SP  //pop pointer
AM=M-1
D=M
@THAT
M=D
@THAT    //push that
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@2  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@Math.divide
D=A
@R13
M=D
@return423
D=A
@CALL
0;JMP
(return423)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@SP  //pop pointer
AM=M-1
D=M
@THAT
M=D
@R5 //push temp
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT    //pop that
D=M
@0
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@RETURN
0;JMP

(Sound.play$ifelse7)
@1  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@Sound.0   //push static
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@1  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //neg
A=M-1
M=-M
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@SP  //pop pointer
AM=M-1
D=M
@THAT
M=D
@R5 //push temp
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT    //pop that
D=M
@0
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@22  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@Sys.error
D=A
@R13
M=D
@return424
D=A
@CALL
0;JMP
(return424)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@RETURN
0;JMP

(TetrisGame.new)
@0
D=A
(TetrisGame.new_LOOP)
@TetrisGame.new_END
D;JEQ
@SP
A=M
M=0
@SP
M=M+1
D=D-1
@TetrisGame.new_LOOP
0;JMP
(TetrisGame.new_END)

@10  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@Memory.alloc
D=A
@R13
M=D
@return425
D=A
@CALL
0;JMP
(return425)
@SP  //pop pointer
AM=M-1
D=M
@THIS
M=D
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@THIS    //pop this
D=M
@6
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@5  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@String.new
D=A
@R13
M=D
@return426
D=A
@CALL
0;JMP
(return426)
@78  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return427
D=A
@CALL
0;JMP
(return427)
@101  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return428
D=A
@CALL
0;JMP
(return428)
@120  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return429
D=A
@CALL
0;JMP
(return429)
@116  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return430
D=A
@CALL
0;JMP
(return430)
@58  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return431
D=A
@CALL
0;JMP
(return431)
@THIS    //pop this
D=M
@0
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@6  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@String.new
D=A
@R13
M=D
@return432
D=A
@CALL
0;JMP
(return432)
@83  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return433
D=A
@CALL
0;JMP
(return433)
@99  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return434
D=A
@CALL
0;JMP
(return434)
@111  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return435
D=A
@CALL
0;JMP
(return435)
@114  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return436
D=A
@CALL
0;JMP
(return436)
@101  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return437
D=A
@CALL
0;JMP
(return437)
@58  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return438
D=A
@CALL
0;JMP
(return438)
@THIS    //pop this
D=M
@1
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@10  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@String.new
D=A
@R13
M=D
@return439
D=A
@CALL
0;JMP
(return439)
@71  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return440
D=A
@CALL
0;JMP
(return440)
@97  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return441
D=A
@CALL
0;JMP
(return441)
@109  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return442
D=A
@CALL
0;JMP
(return442)
@101  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return443
D=A
@CALL
0;JMP
(return443)
@32  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return444
D=A
@CALL
0;JMP
(return444)
@111  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return445
D=A
@CALL
0;JMP
(return445)
@118  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return446
D=A
@CALL
0;JMP
(return446)
@101  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return447
D=A
@CALL
0;JMP
(return447)
@114  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return448
D=A
@CALL
0;JMP
(return448)
@33  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return449
D=A
@CALL
0;JMP
(return449)
@THIS    //pop this
D=M
@2
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@64  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@String.new
D=A
@R13
M=D
@return450
D=A
@CALL
0;JMP
(return450)
@69  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return451
D=A
@CALL
0;JMP
(return451)
@69  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return452
D=A
@CALL
0;JMP
(return452)
@69  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return453
D=A
@CALL
0;JMP
(return453)
@71  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return454
D=A
@CALL
0;JMP
(return454)
@72  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return455
D=A
@CALL
0;JMP
(return455)
@72  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return456
D=A
@CALL
0;JMP
(return456)
@71  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return457
D=A
@CALL
0;JMP
(return457)
@69  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return458
D=A
@CALL
0;JMP
(return458)
@65  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return459
D=A
@CALL
0;JMP
(return459)
@65  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return460
D=A
@CALL
0;JMP
(return460)
@65  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return461
D=A
@CALL
0;JMP
(return461)
@99  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return462
D=A
@CALL
0;JMP
(return462)
@101  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return463
D=A
@CALL
0;JMP
(return463)
@101  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return464
D=A
@CALL
0;JMP
(return464)
@100  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return465
D=A
@CALL
0;JMP
(return465)
@99  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return466
D=A
@CALL
0;JMP
(return466)
@72  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return467
D=A
@CALL
0;JMP
(return467)
@72  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return468
D=A
@CALL
0;JMP
(return468)
@72  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return469
D=A
@CALL
0;JMP
(return469)
@99  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return470
D=A
@CALL
0;JMP
(return470)
@100  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return471
D=A
@CALL
0;JMP
(return471)
@100  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return472
D=A
@CALL
0;JMP
(return472)
@101  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return473
D=A
@CALL
0;JMP
(return473)
@101  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return474
D=A
@CALL
0;JMP
(return474)
@99  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return475
D=A
@CALL
0;JMP
(return475)
@99  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return476
D=A
@CALL
0;JMP
(return476)
@65  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return477
D=A
@CALL
0;JMP
(return477)
@65  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return478
D=A
@CALL
0;JMP
(return478)
@65  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return479
D=A
@CALL
0;JMP
(return479)
@65  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return480
D=A
@CALL
0;JMP
(return480)
@65  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return481
D=A
@CALL
0;JMP
(return481)
@65  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return482
D=A
@CALL
0;JMP
(return482)
@102  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return483
D=A
@CALL
0;JMP
(return483)
@102  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return484
D=A
@CALL
0;JMP
(return484)
@102  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return485
D=A
@CALL
0;JMP
(return485)
@103  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return486
D=A
@CALL
0;JMP
(return486)
@97  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return487
D=A
@CALL
0;JMP
(return487)
@97  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return488
D=A
@CALL
0;JMP
(return488)
@103  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return489
D=A
@CALL
0;JMP
(return489)
@102  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return490
D=A
@CALL
0;JMP
(return490)
@101  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return491
D=A
@CALL
0;JMP
(return491)
@101  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return492
D=A
@CALL
0;JMP
(return492)
@101  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return493
D=A
@CALL
0;JMP
(return493)
@102  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return494
D=A
@CALL
0;JMP
(return494)
@101  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return495
D=A
@CALL
0;JMP
(return495)
@101  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return496
D=A
@CALL
0;JMP
(return496)
@100  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return497
D=A
@CALL
0;JMP
(return497)
@99  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return498
D=A
@CALL
0;JMP
(return498)
@72  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return499
D=A
@CALL
0;JMP
(return499)
@72  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return500
D=A
@CALL
0;JMP
(return500)
@72  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return501
D=A
@CALL
0;JMP
(return501)
@99  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return502
D=A
@CALL
0;JMP
(return502)
@100  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return503
D=A
@CALL
0;JMP
(return503)
@100  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return504
D=A
@CALL
0;JMP
(return504)
@101  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return505
D=A
@CALL
0;JMP
(return505)
@101  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return506
D=A
@CALL
0;JMP
(return506)
@99  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return507
D=A
@CALL
0;JMP
(return507)
@99  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return508
D=A
@CALL
0;JMP
(return508)
@65  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return509
D=A
@CALL
0;JMP
(return509)
@65  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return510
D=A
@CALL
0;JMP
(return510)
@65  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return511
D=A
@CALL
0;JMP
(return511)
@65  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return512
D=A
@CALL
0;JMP
(return512)
@65  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return513
D=A
@CALL
0;JMP
(return513)
@65  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return514
D=A
@CALL
0;JMP
(return514)
@1200  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@Sound.new
D=A
@R13
M=D
@return515
D=A
@CALL
0;JMP
(return515)
@THIS    //pop this
D=M
@8
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@0
D=A
@R14
M=D
@Screen.clearScreen
D=A
@R13
M=D
@return516
D=A
@CALL
0;JMP
(return516)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@4  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@20  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@Output.moveCursor
D=A
@R13
M=D
@return517
D=A
@CALL
0;JMP
(return517)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@THIS    //push this
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@Output.printString
D=A
@R13
M=D
@return518
D=A
@CALL
0;JMP
(return518)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@13  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@20  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@Output.moveCursor
D=A
@R13
M=D
@return519
D=A
@CALL
0;JMP
(return519)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@THIS    //push this
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@Output.printString
D=A
@R13
M=D
@return520
D=A
@CALL
0;JMP
(return520)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@15  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@21  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@Output.moveCursor
D=A
@R13
M=D
@return521
D=A
@CALL
0;JMP
(return521)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@THIS    //push this
D=M
@6
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@Output.printInt
D=A
@R13
M=D
@return522
D=A
@CALL
0;JMP
(return522)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@THIS    //pop this
D=M
@5
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@0
D=A
@R14
M=D
@Grid.new
D=A
@R13
M=D
@return523
D=A
@CALL
0;JMP
(return523)
@THIS    //pop this
D=M
@9
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@0
D=A
@R14
M=D
@Tile.new
D=A
@R13
M=D
@return524
D=A
@CALL
0;JMP
(return524)
@THIS    //pop this
D=M
@4
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@THIS    //push this
D=M
@4
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@Tile.draw
D=A
@R13
M=D
@return525
D=A
@CALL
0;JMP
(return525)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@R3 //push pointer
D=M
@SP
A=M
M=D
@SP
M=M+1
@RETURN
0;JMP

(TetrisGame.dispose)
@0
D=A
(TetrisGame.dispose_LOOP)
@TetrisGame.dispose_END
D;JEQ
@SP
A=M
M=0
@SP
M=M+1
D=D-1
@TetrisGame.dispose_LOOP
0;JMP
(TetrisGame.dispose_END)

@ARG //push argument
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //pop pointer
AM=M-1
D=M
@THIS
M=D
@THIS    //push this
D=M
@4
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@Tile.dispose
D=A
@R13
M=D
@return526
D=A
@CALL
0;JMP
(return526)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@THIS    //push this
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@String.dispose
D=A
@R13
M=D
@return527
D=A
@CALL
0;JMP
(return527)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@THIS    //push this
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@String.dispose
D=A
@R13
M=D
@return528
D=A
@CALL
0;JMP
(return528)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@THIS    //push this
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@String.dispose
D=A
@R13
M=D
@return529
D=A
@CALL
0;JMP
(return529)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@THIS    //push this
D=M
@9
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@Grid.dispose
D=A
@R13
M=D
@return530
D=A
@CALL
0;JMP
(return530)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@THIS    //push this
D=M
@8
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@Sound.dispose
D=A
@R13
M=D
@return531
D=A
@CALL
0;JMP
(return531)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@R3 //push pointer
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@Memory.deAlloc
D=A
@R13
M=D
@return532
D=A
@CALL
0;JMP
(return532)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@RETURN
0;JMP

(TetrisGame.score)
@0
D=A
(TetrisGame.score_LOOP)
@TetrisGame.score_END
D;JEQ
@SP
A=M
M=0
@SP
M=M+1
D=D-1
@TetrisGame.score_LOOP
0;JMP
(TetrisGame.score_END)

@ARG //push argument
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //pop pointer
AM=M-1
D=M
@THIS
M=D
@ARG //push argument
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
D=D-M
M=-1
@eq113
D;JEQ
@SP
A=M-1
M=0
(eq113)
@SP
AM=M-1
D=M
@TetrisGame.score$if1
D;JNE
@TetrisGame.score$ifelse1
0;JMP
(TetrisGame.score$if1)
@THIS    //push this
D=M
@6
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@40  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@THIS    //pop this
D=M
@6
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
(TetrisGame.score$ifelse1)
@ARG //push argument
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@2  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
D=D-M
M=-1
@eq114
D;JEQ
@SP
A=M-1
M=0
(eq114)
@SP
AM=M-1
D=M
@TetrisGame.score$if4
D;JNE
@TetrisGame.score$ifelse4
0;JMP
(TetrisGame.score$if4)
@THIS    //push this
D=M
@6
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@100  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@THIS    //pop this
D=M
@6
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
(TetrisGame.score$ifelse4)
@ARG //push argument
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@3  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
D=D-M
M=-1
@eq115
D;JEQ
@SP
A=M-1
M=0
(eq115)
@SP
AM=M-1
D=M
@TetrisGame.score$if7
D;JNE
@TetrisGame.score$ifelse7
0;JMP
(TetrisGame.score$if7)
@THIS    //push this
D=M
@6
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@300  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@THIS    //pop this
D=M
@6
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
(TetrisGame.score$ifelse7)
@ARG //push argument
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@4  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
D=D-M
M=-1
@eq116
D;JEQ
@SP
A=M-1
M=0
(eq116)
@SP
AM=M-1
D=M
@TetrisGame.score$if10
D;JNE
@TetrisGame.score$ifelse10
0;JMP
(TetrisGame.score$if10)
@THIS    //push this
D=M
@6
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@500  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@THIS    //pop this
D=M
@6
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
(TetrisGame.score$ifelse10)
@15  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@21  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@Output.moveCursor
D=A
@R13
M=D
@return533
D=A
@CALL
0;JMP
(return533)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@THIS    //push this
D=M
@6
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@Output.printInt
D=A
@R13
M=D
@return534
D=A
@CALL
0;JMP
(return534)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@RETURN
0;JMP

(TetrisGame.run)
@1
D=A
(TetrisGame.run_LOOP)
@TetrisGame.run_END
D;JEQ
@SP
A=M
M=0
@SP
M=M+1
D=D-1
@TetrisGame.run_LOOP
0;JMP
(TetrisGame.run_END)

@ARG //push argument
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //pop pointer
AM=M-1
D=M
@THIS
M=D
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@4  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@String.new
D=A
@R13
M=D
@return535
D=A
@CALL
0;JMP
(return535)
@32  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return536
D=A
@CALL
0;JMP
(return536)
@32  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return537
D=A
@CALL
0;JMP
(return537)
@60  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return538
D=A
@CALL
0;JMP
(return538)
@45  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return539
D=A
@CALL
0;JMP
(return539)
@2
D=A
@R14
M=D
@Menu.setButtonText
D=A
@R13
M=D
@return540
D=A
@CALL
0;JMP
(return540)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@1  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@4  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@String.new
D=A
@R13
M=D
@return541
D=A
@CALL
0;JMP
(return541)
@32  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return542
D=A
@CALL
0;JMP
(return542)
@32  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return543
D=A
@CALL
0;JMP
(return543)
@32  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return544
D=A
@CALL
0;JMP
(return544)
@76  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return545
D=A
@CALL
0;JMP
(return545)
@2
D=A
@R14
M=D
@Menu.setButtonText
D=A
@R13
M=D
@return546
D=A
@CALL
0;JMP
(return546)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@2  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@3  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@String.new
D=A
@R13
M=D
@return547
D=A
@CALL
0;JMP
(return547)
@32  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return548
D=A
@CALL
0;JMP
(return548)
@32  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return549
D=A
@CALL
0;JMP
(return549)
@82  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return550
D=A
@CALL
0;JMP
(return550)
@2
D=A
@R14
M=D
@Menu.setButtonText
D=A
@R13
M=D
@return551
D=A
@CALL
0;JMP
(return551)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@3  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@4  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@String.new
D=A
@R13
M=D
@return552
D=A
@CALL
0;JMP
(return552)
@32  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return553
D=A
@CALL
0;JMP
(return553)
@32  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return554
D=A
@CALL
0;JMP
(return554)
@45  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return555
D=A
@CALL
0;JMP
(return555)
@62  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return556
D=A
@CALL
0;JMP
(return556)
@2
D=A
@R14
M=D
@Menu.setButtonText
D=A
@R13
M=D
@return557
D=A
@CALL
0;JMP
(return557)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@1000  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@Sys.wait
D=A
@R13
M=D
@return558
D=A
@CALL
0;JMP
(return558)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@THIS    //pop this
D=M
@5
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@THIS    //push this
D=M
@4
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS    //pop this
D=M
@3
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@THIS    //push this
D=M
@3
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS    //push this
D=M
@9
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@Tile.span
D=A
@R13
M=D
@return559
D=A
@CALL
0;JMP
(return559)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@0
D=A
@R14
M=D
@Tile.new
D=A
@R13
M=D
@return560
D=A
@CALL
0;JMP
(return560)
@THIS    //pop this
D=M
@4
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@THIS    //push this
D=M
@4
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@Tile.draw
D=A
@R13
M=D
@return561
D=A
@CALL
0;JMP
(return561)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@THIS    //pop this
D=M
@5
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@THIS    //push this
D=M
@8
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@Sound.start
D=A
@R13
M=D
@return562
D=A
@CALL
0;JMP
(return562)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
(TetrisGame.run$while18)
@THIS    //push this
D=M
@5
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //not
A=M-1
M=!M
@SP  //not
A=M-1
M=!M
@SP
AM=M-1
D=M
@TetrisGame.run$whileend18
D;JNE
@0
D=A
@R14
M=D
@Menu.getButton
D=A
@R13
M=D
@return563
D=A
@CALL
0;JMP
(return563)
@LCL //pop local
D=M
@0
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@THIS    //push this
D=M
@8
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@Sound.go
D=A
@R13
M=D
@return564
D=A
@CALL
0;JMP
(return564)
@1  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //and
AM=M-1
D=M
A=A-1
M=D&M
@THIS    //pop this
D=M
@7
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@LCL //push local
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@3  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
D=D-M
M=-1
@eq117
D;JEQ
@SP
A=M-1
M=0
(eq117)
@SP
AM=M-1
D=M
@TetrisGame.run$if19
D;JNE
@TetrisGame.run$ifelse19
0;JMP
(TetrisGame.run$if19)
@THIS    //push this
D=M
@3
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@Tile.moveRight
D=A
@R13
M=D
@return565
D=A
@CALL
0;JMP
(return565)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
(TetrisGame.run$ifelse19)
@LCL //push local
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@2  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
D=D-M
M=-1
@eq118
D;JEQ
@SP
A=M-1
M=0
(eq118)
@SP
AM=M-1
D=M
@TetrisGame.run$if24
D;JNE
@TetrisGame.run$ifelse24
0;JMP
(TetrisGame.run$if24)
@THIS    //push this
D=M
@3
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@Tile.rotateRight
D=A
@R13
M=D
@return566
D=A
@CALL
0;JMP
(return566)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
(TetrisGame.run$ifelse24)
@LCL //push local
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
D=D-M
M=-1
@eq119
D;JEQ
@SP
A=M-1
M=0
(eq119)
@SP
AM=M-1
D=M
@TetrisGame.run$if29
D;JNE
@TetrisGame.run$ifelse29
0;JMP
(TetrisGame.run$if29)
@THIS    //push this
D=M
@3
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@Tile.moveLeft
D=A
@R13
M=D
@return567
D=A
@CALL
0;JMP
(return567)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
(TetrisGame.run$ifelse29)
@LCL //push local
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
D=D-M
M=-1
@eq120
D;JEQ
@SP
A=M-1
M=0
(eq120)
@SP
AM=M-1
D=M
@TetrisGame.run$if34
D;JNE
@TetrisGame.run$ifelse34
0;JMP
(TetrisGame.run$if34)
@THIS    //push this
D=M
@3
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@Tile.rotateLeft
D=A
@R13
M=D
@return568
D=A
@CALL
0;JMP
(return568)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
(TetrisGame.run$ifelse34)
@THIS    //push this
D=M
@7
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
D=D-M
M=-1
@eq121
D;JEQ
@SP
A=M-1
M=0
(eq121)
@SP
AM=M-1
D=M
@TetrisGame.run$if39
D;JNE
@TetrisGame.run$ifelse39
0;JMP
(TetrisGame.run$if39)
@THIS    //push this
D=M
@3
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@Tile.moveDown
D=A
@R13
M=D
@return569
D=A
@CALL
0;JMP
(return569)
@SP  //not
A=M-1
M=!M
@SP
AM=M-1
D=M
@TetrisGame.run$if40
D;JNE
@TetrisGame.run$ifelse40
0;JMP
(TetrisGame.run$if40)
@R3 //push pointer
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS    //push this
D=M
@3
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS    //push this
D=M
@8
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@Tile.getScore
D=A
@R13
M=D
@return570
D=A
@CALL
0;JMP
(return570)
@2
D=A
@R14
M=D
@TetrisGame.score
D=A
@R13
M=D
@return571
D=A
@CALL
0;JMP
(return571)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@THIS    //push this
D=M
@3
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@Tile.dispose
D=A
@R13
M=D
@return572
D=A
@CALL
0;JMP
(return572)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@THIS    //push this
D=M
@8
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@Sound.getSpeed
D=A
@R13
M=D
@return573
D=A
@CALL
0;JMP
(return573)
@500  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
D=M-D
M=-1
@gt122
D;JGT
@SP
A=M-1
M=0
(gt122)
@SP
AM=M-1
D=M
@TetrisGame.run$if45
D;JNE
@TetrisGame.run$ifelse45
0;JMP
(TetrisGame.run$if45)
@THIS    //push this
D=M
@8
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS    //push this
D=M
@8
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@Sound.getSpeed
D=A
@R13
M=D
@return574
D=A
@CALL
0;JMP
(return574)
@50  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //sub
AM=M-1
D=M
A=A-1
M=M-D
@2
D=A
@R14
M=D
@Sound.setSpeed
D=A
@R13
M=D
@return575
D=A
@CALL
0;JMP
(return575)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
(TetrisGame.run$ifelse45)
@THIS    //push this
D=M
@4
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS    //pop this
D=M
@3
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@THIS    //push this
D=M
@3
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS    //push this
D=M
@9
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@Tile.span
D=A
@R13
M=D
@return576
D=A
@CALL
0;JMP
(return576)
@SP  //not
A=M-1
M=!M
@SP
AM=M-1
D=M
@TetrisGame.run$if50
D;JNE
@TetrisGame.run$ifelse50
0;JMP
(TetrisGame.run$if50)
@THIS    //push this
D=M
@3
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@Tile.dispose
D=A
@R13
M=D
@return577
D=A
@CALL
0;JMP
(return577)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@1  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //neg
A=M-1
M=-M
@THIS    //pop this
D=M
@5
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@TetrisGame.run$ifend50
0;JMP
(TetrisGame.run$ifelse50)
@0
D=A
@R14
M=D
@Tile.new
D=A
@R13
M=D
@return578
D=A
@CALL
0;JMP
(return578)
@THIS    //pop this
D=M
@4
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@THIS    //push this
D=M
@4
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@Tile.draw
D=A
@R13
M=D
@return579
D=A
@CALL
0;JMP
(return579)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
(TetrisGame.run$ifend50)
(TetrisGame.run$ifelse40)
(TetrisGame.run$ifelse39)
@THIS    //push this
D=M
@5
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
@TetrisGame.run$if63
D;JNE
@TetrisGame.run$ifelse63
0;JMP
(TetrisGame.run$if63)
@THIS    //push this
D=M
@8
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@Sound.stop
D=A
@R13
M=D
@return580
D=A
@CALL
0;JMP
(return580)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@10  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@5  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@Output.moveCursor
D=A
@R13
M=D
@return581
D=A
@CALL
0;JMP
(return581)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@THIS    //push this
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@Output.printString
D=A
@R13
M=D
@return582
D=A
@CALL
0;JMP
(return582)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
(TetrisGame.run$ifelse63)
@TetrisGame.run$while18
0;JMP
(TetrisGame.run$whileend18)
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@RETURN
0;JMP

(Main.main)
@5
D=A
(Main.main_LOOP)
@Main.main_END
D;JEQ
@SP
A=M
M=0
@SP
M=M+1
D=D-1
@Main.main_LOOP
0;JMP
(Main.main_END)

@1  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //neg
A=M-1
M=-M
@LCL //pop local
D=M
@2
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@0
D=A
@R14
M=D
@Menu.init
D=A
@R13
M=D
@return583
D=A
@CALL
0;JMP
(return583)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@0
D=A
@R14
M=D
@Tile.init
D=A
@R13
M=D
@return584
D=A
@CALL
0;JMP
(return584)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@0
D=A
@R14
M=D
@Main.displayStart
D=A
@R13
M=D
@return585
D=A
@CALL
0;JMP
(return585)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@0
D=A
@R14
M=D
@Main.setMenu
D=A
@R13
M=D
@return586
D=A
@CALL
0;JMP
(return586)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
(Main.main$while10)
@1  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //neg
A=M-1
M=-M
@SP  //not
A=M-1
M=!M
@SP
AM=M-1
D=M
@Main.main$whileend10
D;JNE
@0
D=A
@R14
M=D
@Sound.getTime
D=A
@R13
M=D
@return587
D=A
@CALL
0;JMP
(return587)
@LCL //push local
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //sub
AM=M-1
D=M
A=A-1
M=M-D
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
D=M-D
M=-1
@lt123
D;JLT
@SP
A=M-1
M=0
(lt123)
@SP
AM=M-1
D=M
@Main.main$if11
D;JNE
@Main.main$ifelse11
0;JMP
(Main.main$if11)
@Main.0   //push static
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@Tile.erase
D=A
@R13
M=D
@return588
D=A
@CALL
0;JMP
(return588)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@Main.0   //push static
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@Tile.dispose
D=A
@R13
M=D
@return589
D=A
@CALL
0;JMP
(return589)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@0
D=A
@R14
M=D
@Tile.new
D=A
@R13
M=D
@return590
D=A
@CALL
0;JMP
(return590)
@SP  //pop static
AM=M-1
D=M
@Main.0
M=D
@LCL //push local
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
@Main.main$if16
D;JNE
@Main.main$ifelse16
0;JMP
(Main.main$if16)
@Main.0   //push static
D=M
@SP
A=M
M=D
@SP
M=M+1
@6  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@10  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@3
D=A
@R14
M=D
@Tile.move
D=A
@R13
M=D
@return591
D=A
@CALL
0;JMP
(return591)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
(Main.main$ifelse16)
@Main.0   //push static
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@Tile.draw
D=A
@R13
M=D
@return592
D=A
@CALL
0;JMP
(return592)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@0
D=A
@R14
M=D
@Sound.getTime
D=A
@R13
M=D
@return593
D=A
@CALL
0;JMP
(return593)
@LCL //pop local
D=M
@1
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
(Main.main$ifelse11)
@0
D=A
@R14
M=D
@Menu.getButton
D=A
@R13
M=D
@return594
D=A
@CALL
0;JMP
(return594)
@LCL //pop local
D=M
@4
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@LCL //push local
D=M
@4
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@3  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
D=D-M
M=-1
@eq124
D;JEQ
@SP
A=M-1
M=0
(eq124)
@SP
AM=M-1
D=M
@Main.main$if25
D;JNE
@Main.main$ifelse25
0;JMP
(Main.main$if25)
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL //pop local
D=M
@2
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@Main.0   //push static
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@Tile.erase
D=A
@R13
M=D
@return595
D=A
@CALL
0;JMP
(return595)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@Main.0   //push static
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@Tile.dispose
D=A
@R13
M=D
@return596
D=A
@CALL
0;JMP
(return596)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@0
D=A
@R14
M=D
@TetrisGame.new
D=A
@R13
M=D
@return597
D=A
@CALL
0;JMP
(return597)
@LCL //pop local
D=M
@3
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@LCL //push local
D=M
@3
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@TetrisGame.run
D=A
@R13
M=D
@return598
D=A
@CALL
0;JMP
(return598)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@LCL //push local
D=M
@3
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@TetrisGame.dispose
D=A
@R13
M=D
@return599
D=A
@CALL
0;JMP
(return599)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@0
D=A
@R14
M=D
@Main.setMenu
D=A
@R13
M=D
@return600
D=A
@CALL
0;JMP
(return600)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@0
D=A
@R14
M=D
@Tile.new
D=A
@R13
M=D
@return601
D=A
@CALL
0;JMP
(return601)
@SP  //pop static
AM=M-1
D=M
@Main.0
M=D
@Main.0   //push static
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@Tile.draw
D=A
@R13
M=D
@return602
D=A
@CALL
0;JMP
(return602)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
(Main.main$ifelse25)
@LCL //push local
D=M
@4
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
D=D-M
M=-1
@eq125
D;JEQ
@SP
A=M-1
M=0
(eq125)
@SP
AM=M-1
D=M
@Main.main$if40
D;JNE
@Main.main$ifelse40
0;JMP
(Main.main$if40)
@Main.0   //push static
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@Tile.dispose
D=A
@R13
M=D
@return603
D=A
@CALL
0;JMP
(return603)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@LCL //push local
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@About.display
D=A
@R13
M=D
@return604
D=A
@CALL
0;JMP
(return604)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@1  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //neg
A=M-1
M=-M
@LCL //pop local
D=M
@2
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@0
D=A
@R14
M=D
@Tile.new
D=A
@R13
M=D
@return605
D=A
@CALL
0;JMP
(return605)
@SP  //pop static
AM=M-1
D=M
@Main.0
M=D
@Main.0   //push static
D=M
@SP
A=M
M=D
@SP
M=M+1
@6  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@10  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@3
D=A
@R14
M=D
@Tile.move
D=A
@R13
M=D
@return606
D=A
@CALL
0;JMP
(return606)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@Main.0   //push static
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@Tile.draw
D=A
@R13
M=D
@return607
D=A
@CALL
0;JMP
(return607)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@0
D=A
@R14
M=D
@Main.setMenu
D=A
@R13
M=D
@return608
D=A
@CALL
0;JMP
(return608)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
(Main.main$ifelse40)
@LCL //push local
D=M
@4
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@2  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
D=D-M
M=-1
@eq126
D;JEQ
@SP
A=M-1
M=0
(eq126)
@SP
AM=M-1
D=M
@Main.main$if53
D;JNE
@Main.main$ifelse53
0;JMP
(Main.main$if53)
@0
D=A
@R14
M=D
@PongGame.newInstance
D=A
@R13
M=D
@return609
D=A
@CALL
0;JMP
(return609)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@0
D=A
@R14
M=D
@PongGame.getInstance
D=A
@R13
M=D
@return610
D=A
@CALL
0;JMP
(return610)
@LCL //pop local
D=M
@0
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@LCL //push local
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@PongGame.run
D=A
@R13
M=D
@return611
D=A
@CALL
0;JMP
(return611)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@LCL //push local
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@PongGame.dispose
D=A
@R13
M=D
@return612
D=A
@CALL
0;JMP
(return612)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@0
D=A
@R14
M=D
@Main.displayStart
D=A
@R13
M=D
@return613
D=A
@CALL
0;JMP
(return613)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@0
D=A
@R14
M=D
@Main.setMenu
D=A
@R13
M=D
@return614
D=A
@CALL
0;JMP
(return614)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
(Main.main$ifelse53)
@Main.main$while10
0;JMP
(Main.main$whileend10)
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@RETURN
0;JMP

(Main.setMenu)
@0
D=A
(Main.setMenu_LOOP)
@Main.setMenu_END
D;JEQ
@SP
A=M
M=0
@SP
M=M+1
D=D-1
@Main.setMenu_LOOP
0;JMP
(Main.setMenu_END)

@3  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@6  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@String.new
D=A
@R13
M=D
@return615
D=A
@CALL
0;JMP
(return615)
@84  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return616
D=A
@CALL
0;JMP
(return616)
@69  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return617
D=A
@CALL
0;JMP
(return617)
@84  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return618
D=A
@CALL
0;JMP
(return618)
@82  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return619
D=A
@CALL
0;JMP
(return619)
@73  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return620
D=A
@CALL
0;JMP
(return620)
@83  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return621
D=A
@CALL
0;JMP
(return621)
@2
D=A
@R14
M=D
@Menu.setButtonText
D=A
@R13
M=D
@return622
D=A
@CALL
0;JMP
(return622)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@2  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@Menu.setButtonText
D=A
@R13
M=D
@return623
D=A
@CALL
0;JMP
(return623)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@1  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@Menu.setButtonText
D=A
@R13
M=D
@return624
D=A
@CALL
0;JMP
(return624)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@Menu.setButtonText
D=A
@R13
M=D
@return625
D=A
@CALL
0;JMP
(return625)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@RETURN
0;JMP

(Main.displayStart)
@0
D=A
(Main.displayStart_LOOP)
@Main.displayStart_END
D;JEQ
@SP
A=M
M=0
@SP
M=M+1
D=D-1
@Main.displayStart_LOOP
0;JMP
(Main.displayStart_END)

@0
D=A
@R14
M=D
@Screen.clearScreen
D=A
@R13
M=D
@return626
D=A
@CALL
0;JMP
(return626)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@5  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@7  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@Output.moveCursor
D=A
@R13
M=D
@return627
D=A
@CALL
0;JMP
(return627)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@14  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@String.new
D=A
@R13
M=D
@return628
D=A
@CALL
0;JMP
(return628)
@110  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return629
D=A
@CALL
0;JMP
(return629)
@97  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return630
D=A
@CALL
0;JMP
(return630)
@110  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return631
D=A
@CALL
0;JMP
(return631)
@100  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return632
D=A
@CALL
0;JMP
(return632)
@50  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return633
D=A
@CALL
0;JMP
(return633)
@116  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return634
D=A
@CALL
0;JMP
(return634)
@101  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return635
D=A
@CALL
0;JMP
(return635)
@116  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return636
D=A
@CALL
0;JMP
(return636)
@114  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return637
D=A
@CALL
0;JMP
(return637)
@105  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return638
D=A
@CALL
0;JMP
(return638)
@115  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return639
D=A
@CALL
0;JMP
(return639)
@45  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return640
D=A
@CALL
0;JMP
(return640)
@49  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return641
D=A
@CALL
0;JMP
(return641)
@51  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return642
D=A
@CALL
0;JMP
(return642)
@1
D=A
@R14
M=D
@Output.printString
D=A
@R13
M=D
@return643
D=A
@CALL
0;JMP
(return643)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@0
D=A
@R14
M=D
@Tile.new
D=A
@R13
M=D
@return644
D=A
@CALL
0;JMP
(return644)
@SP  //pop static
AM=M-1
D=M
@Main.0
M=D
@Main.0   //push static
D=M
@SP
A=M
M=D
@SP
M=M+1
@6  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@10  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@3
D=A
@R14
M=D
@Tile.move
D=A
@R13
M=D
@return645
D=A
@CALL
0;JMP
(return645)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@Main.0   //push static
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@Tile.draw
D=A
@R13
M=D
@return646
D=A
@CALL
0;JMP
(return646)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@RETURN
0;JMP

(Touch.init)
@0
D=A
(Touch.init_LOOP)
@Touch.init_END
D;JEQ
@SP
A=M
M=0
@SP
M=M+1
D=D-1
@Touch.init_LOOP
0;JMP
(Touch.init_END)

@8203  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //pop static
AM=M-1
D=M
@Touch.0
M=D
@85  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@Touch.send
D=A
@R13
M=D
@return647
D=A
@CALL
0;JMP
(return647)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@1  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@Touch.send
D=A
@R13
M=D
@return648
D=A
@CALL
0;JMP
(return648)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@18  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@Touch.send
D=A
@R13
M=D
@return649
D=A
@CALL
0;JMP
(return649)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@RETURN
0;JMP

(Touch.getX)
@0
D=A
(Touch.getX_LOOP)
@Touch.getX_END
D;JEQ
@SP
A=M
M=0
@SP
M=M+1
D=D-1
@Touch.getX_LOOP
0;JMP
(Touch.getX_END)

@Touch.1   //push static
D=M
@SP
A=M
M=D
@SP
M=M+1
@RETURN
0;JMP

(Touch.getY)
@0
D=A
(Touch.getY_LOOP)
@Touch.getY_END
D;JEQ
@SP
A=M
M=0
@SP
M=M+1
D=D-1
@Touch.getY_LOOP
0;JMP
(Touch.getY_END)

@Touch.2   //push static
D=M
@SP
A=M
M=D
@SP
M=M+1
@RETURN
0;JMP

(Touch.getPressed)
@0
D=A
(Touch.getPressed_LOOP)
@Touch.getPressed_END
D;JEQ
@SP
A=M
M=0
@SP
M=M+1
D=D-1
@Touch.getPressed_LOOP
0;JMP
(Touch.getPressed_END)

@Touch.3   //push static
D=M
@SP
A=M
M=D
@SP
M=M+1
@RETURN
0;JMP

(Touch.update)
@1
D=A
(Touch.update_LOOP)
@Touch.update_END
D;JEQ
@SP
A=M
M=0
@SP
M=M+1
D=D-1
@Touch.update_LOOP
0;JMP
(Touch.update_END)

@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@Touch.send
D=A
@R13
M=D
@return650
D=A
@CALL
0;JMP
(return650)
@LCL //pop local
D=M
@0
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@LCL //push local
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@129  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
D=D-M
M=-1
@eq127
D;JEQ
@SP
A=M-1
M=0
(eq127)
@SP
AM=M-1
D=M
@Touch.update$if1
D;JNE
@Touch.update$ifelse1
0;JMP
(Touch.update$if1)
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@Touch.send
D=A
@R13
M=D
@return651
D=A
@CALL
0;JMP
(return651)
@LCL //pop local
D=M
@0
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@Touch.send
D=A
@R13
M=D
@return652
D=A
@CALL
0;JMP
(return652)
@LCL //pop local
D=M
@0
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@LCL //push local
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@76  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
D=M-D
M=-1
@gt128
D;JGT
@SP
A=M-1
M=0
(gt128)
@SP
AM=M-1
D=M
@Touch.update$if2
D;JNE
@Touch.update$ifelse2
0;JMP
(Touch.update$if2)
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@RETURN
0;JMP

(Touch.update$ifelse2)
@LCL //push local
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //pop static
AM=M-1
D=M
@Touch.1
M=D
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@Touch.send
D=A
@R13
M=D
@return653
D=A
@CALL
0;JMP
(return653)
@LCL //pop local
D=M
@0
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@Touch.send
D=A
@R13
M=D
@return654
D=A
@CALL
0;JMP
(return654)
@LCL //pop local
D=M
@0
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@LCL //push local
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@76  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
D=M-D
M=-1
@gt129
D;JGT
@SP
A=M-1
M=0
(gt129)
@SP
AM=M-1
D=M
@Touch.update$if5
D;JNE
@Touch.update$ifelse5
0;JMP
(Touch.update$if5)
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@RETURN
0;JMP

(Touch.update$ifelse5)
@LCL //push local
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //pop static
AM=M-1
D=M
@Touch.2
M=D
@1  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //neg
A=M-1
M=-M
@SP  //pop static
AM=M-1
D=M
@Touch.3
M=D
@1  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //neg
A=M-1
M=-M
@RETURN
0;JMP

(Touch.update$ifelse1)
@LCL //push local
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@128  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
D=D-M
M=-1
@eq130
D;JEQ
@SP
A=M-1
M=0
(eq130)
@SP
AM=M-1
D=M
@Touch.update$if10
D;JNE
@Touch.update$ifelse10
0;JMP
(Touch.update$if10)
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@Touch.send
D=A
@R13
M=D
@return655
D=A
@CALL
0;JMP
(return655)
@LCL //pop local
D=M
@0
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@Touch.send
D=A
@R13
M=D
@return656
D=A
@CALL
0;JMP
(return656)
@LCL //pop local
D=M
@0
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@LCL //push local
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@76  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
D=M-D
M=-1
@gt131
D;JGT
@SP
A=M-1
M=0
(gt131)
@SP
AM=M-1
D=M
@Touch.update$if11
D;JNE
@Touch.update$ifelse11
0;JMP
(Touch.update$if11)
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@RETURN
0;JMP

(Touch.update$ifelse11)
@LCL //push local
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //pop static
AM=M-1
D=M
@Touch.1
M=D
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@Touch.send
D=A
@R13
M=D
@return657
D=A
@CALL
0;JMP
(return657)
@LCL //pop local
D=M
@0
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@Touch.send
D=A
@R13
M=D
@return658
D=A
@CALL
0;JMP
(return658)
@LCL //pop local
D=M
@0
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@LCL //push local
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@76  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
D=M-D
M=-1
@gt132
D;JGT
@SP
A=M-1
M=0
(gt132)
@SP
AM=M-1
D=M
@Touch.update$if14
D;JNE
@Touch.update$ifelse14
0;JMP
(Touch.update$if14)
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@RETURN
0;JMP

(Touch.update$ifelse14)
@LCL //push local
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //pop static
AM=M-1
D=M
@Touch.2
M=D
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //pop static
AM=M-1
D=M
@Touch.3
M=D
@1  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //neg
A=M-1
M=-M
@RETURN
0;JMP

(Touch.update$ifelse10)
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@RETURN
0;JMP

(Touch.send)
@0
D=A
(Touch.send_LOOP)
@Touch.send_END
D;JEQ
@SP
A=M
M=0
@SP
M=M+1
D=D-1
@Touch.send_LOOP
0;JMP
(Touch.send_END)

(Touch.send$while2)
@Touch.0   //push static
D=M
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@SP  //pop pointer
AM=M-1
D=M
@THAT
M=D
@THAT    //push that
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
D=M-D
M=-1
@lt133
D;JLT
@SP
A=M-1
M=0
(lt133)
@SP  //not
A=M-1
M=!M
@SP
AM=M-1
D=M
@Touch.send$whileend2
D;JNE
@1  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@Sys.wait
D=A
@R13
M=D
@return659
D=A
@CALL
0;JMP
(return659)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@Touch.send$while2
0;JMP
(Touch.send$whileend2)
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@Touch.0   //push static
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@ARG //push argument
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@SP  //pop pointer
AM=M-1
D=M
@THAT
M=D
@R5 //push temp
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT    //pop that
D=M
@0
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
(Touch.send$while8)
@Touch.0   //push static
D=M
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@SP  //pop pointer
AM=M-1
D=M
@THAT
M=D
@THAT    //push that
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
D=M-D
M=-1
@lt134
D;JLT
@SP
A=M-1
M=0
(lt134)
@SP  //not
A=M-1
M=!M
@SP
AM=M-1
D=M
@Touch.send$whileend8
D;JNE
@1  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@Sys.wait
D=A
@R13
M=D
@return660
D=A
@CALL
0;JMP
(return660)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@Touch.send$while8
0;JMP
(Touch.send$whileend8)
@Touch.0   //push static
D=M
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@SP  //pop pointer
AM=M-1
D=M
@THAT
M=D
@THAT    //push that
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@RETURN
0;JMP

(About.display)
@1
D=A
(About.display_LOOP)
@About.display_END
D;JEQ
@SP
A=M
M=0
@SP
M=M+1
D=D-1
@About.display_LOOP
0;JMP
(About.display_END)

@ARG //push argument
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
@About.display$if1
D;JNE
@About.display$ifelse1
0;JMP
(About.display$if1)
@50  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL //pop local
D=M
@0
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@About.display$ifend1
0;JMP
(About.display$ifelse1)
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL //pop local
D=M
@0
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
(About.display$ifend1)
@0
D=A
@R14
M=D
@Screen.clearScreen
D=A
@R13
M=D
@return661
D=A
@CALL
0;JMP
(return661)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@14  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@String.new
D=A
@R13
M=D
@return662
D=A
@CALL
0;JMP
(return662)
@110  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return663
D=A
@CALL
0;JMP
(return663)
@97  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return664
D=A
@CALL
0;JMP
(return664)
@110  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return665
D=A
@CALL
0;JMP
(return665)
@100  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return666
D=A
@CALL
0;JMP
(return666)
@50  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return667
D=A
@CALL
0;JMP
(return667)
@116  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return668
D=A
@CALL
0;JMP
(return668)
@101  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return669
D=A
@CALL
0;JMP
(return669)
@116  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return670
D=A
@CALL
0;JMP
(return670)
@114  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return671
D=A
@CALL
0;JMP
(return671)
@105  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return672
D=A
@CALL
0;JMP
(return672)
@115  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return673
D=A
@CALL
0;JMP
(return673)
@45  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return674
D=A
@CALL
0;JMP
(return674)
@49  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return675
D=A
@CALL
0;JMP
(return675)
@51  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return676
D=A
@CALL
0;JMP
(return676)
@6  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@3  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL //push local
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@4
D=A
@R14
M=D
@About.show
D=A
@R13
M=D
@return677
D=A
@CALL
0;JMP
(return677)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@ARG //push argument
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
@About.display$if10
D;JNE
@About.display$ifelse10
0;JMP
(About.display$if10)
@1000  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@Sys.wait
D=A
@R13
M=D
@return678
D=A
@CALL
0;JMP
(return678)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
(About.display$ifelse10)
@24  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@String.new
D=A
@R13
M=D
@return679
D=A
@CALL
0;JMP
(return679)
@32  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return680
D=A
@CALL
0;JMP
(return680)
@46  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return681
D=A
@CALL
0;JMP
(return681)
@46  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return682
D=A
@CALL
0;JMP
(return682)
@46  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return683
D=A
@CALL
0;JMP
(return683)
@32  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return684
D=A
@CALL
0;JMP
(return684)
@87  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return685
D=A
@CALL
0;JMP
(return685)
@111  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return686
D=A
@CALL
0;JMP
(return686)
@117  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return687
D=A
@CALL
0;JMP
(return687)
@108  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return688
D=A
@CALL
0;JMP
(return688)
@100  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return689
D=A
@CALL
0;JMP
(return689)
@39  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return690
D=A
@CALL
0;JMP
(return690)
@110  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return691
D=A
@CALL
0;JMP
(return691)
@116  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return692
D=A
@CALL
0;JMP
(return692)
@32  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return693
D=A
@CALL
0;JMP
(return693)
@105  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return694
D=A
@CALL
0;JMP
(return694)
@116  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return695
D=A
@CALL
0;JMP
(return695)
@32  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return696
D=A
@CALL
0;JMP
(return696)
@98  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return697
D=A
@CALL
0;JMP
(return697)
@101  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return698
D=A
@CALL
0;JMP
(return698)
@32  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return699
D=A
@CALL
0;JMP
(return699)
@110  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return700
D=A
@CALL
0;JMP
(return700)
@105  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return701
D=A
@CALL
0;JMP
(return701)
@99  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return702
D=A
@CALL
0;JMP
(return702)
@101  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return703
D=A
@CALL
0;JMP
(return703)
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@5  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL //push local
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@4
D=A
@R14
M=D
@About.show
D=A
@R13
M=D
@return704
D=A
@CALL
0;JMP
(return704)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@26  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@String.new
D=A
@R13
M=D
@return705
D=A
@CALL
0;JMP
(return705)
@32  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return706
D=A
@CALL
0;JMP
(return706)
@116  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return707
D=A
@CALL
0;JMP
(return707)
@111  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return708
D=A
@CALL
0;JMP
(return708)
@32  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return709
D=A
@CALL
0;JMP
(return709)
@109  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return710
D=A
@CALL
0;JMP
(return710)
@97  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return711
D=A
@CALL
0;JMP
(return711)
@107  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return712
D=A
@CALL
0;JMP
(return712)
@101  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return713
D=A
@CALL
0;JMP
(return713)
@32  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return714
D=A
@CALL
0;JMP
(return714)
@72  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return715
D=A
@CALL
0;JMP
(return715)
@97  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return716
D=A
@CALL
0;JMP
(return716)
@99  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return717
D=A
@CALL
0;JMP
(return717)
@107  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return718
D=A
@CALL
0;JMP
(return718)
@32  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return719
D=A
@CALL
0;JMP
(return719)
@111  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return720
D=A
@CALL
0;JMP
(return720)
@114  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return721
D=A
@CALL
0;JMP
(return721)
@32  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return722
D=A
@CALL
0;JMP
(return722)
@74  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return723
D=A
@CALL
0;JMP
(return723)
@97  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return724
D=A
@CALL
0;JMP
(return724)
@99  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return725
D=A
@CALL
0;JMP
(return725)
@107  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return726
D=A
@CALL
0;JMP
(return726)
@32  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return727
D=A
@CALL
0;JMP
(return727)
@97  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return728
D=A
@CALL
0;JMP
(return728)
@108  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return729
D=A
@CALL
0;JMP
(return729)
@115  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return730
D=A
@CALL
0;JMP
(return730)
@111  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return731
D=A
@CALL
0;JMP
(return731)
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@6  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL //push local
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@4
D=A
@R14
M=D
@About.show
D=A
@R13
M=D
@return732
D=A
@CALL
0;JMP
(return732)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@29  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@String.new
D=A
@R13
M=D
@return733
D=A
@CALL
0;JMP
(return733)
@32  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return734
D=A
@CALL
0;JMP
(return734)
@114  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return735
D=A
@CALL
0;JMP
(return735)
@117  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return736
D=A
@CALL
0;JMP
(return736)
@110  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return737
D=A
@CALL
0;JMP
(return737)
@32  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return738
D=A
@CALL
0;JMP
(return738)
@111  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return739
D=A
@CALL
0;JMP
(return739)
@110  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return740
D=A
@CALL
0;JMP
(return740)
@32  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return741
D=A
@CALL
0;JMP
(return741)
@115  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return742
D=A
@CALL
0;JMP
(return742)
@111  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return743
D=A
@CALL
0;JMP
(return743)
@109  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return744
D=A
@CALL
0;JMP
(return744)
@101  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return745
D=A
@CALL
0;JMP
(return745)
@32  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return746
D=A
@CALL
0;JMP
(return746)
@39  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return747
D=A
@CALL
0;JMP
(return747)
@114  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return748
D=A
@CALL
0;JMP
(return748)
@101  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return749
D=A
@CALL
0;JMP
(return749)
@97  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return750
D=A
@CALL
0;JMP
(return750)
@108  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return751
D=A
@CALL
0;JMP
(return751)
@32  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return752
D=A
@CALL
0;JMP
(return752)
@112  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return753
D=A
@CALL
0;JMP
(return753)
@108  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return754
D=A
@CALL
0;JMP
(return754)
@97  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return755
D=A
@CALL
0;JMP
(return755)
@116  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return756
D=A
@CALL
0;JMP
(return756)
@102  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return757
D=A
@CALL
0;JMP
(return757)
@111  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return758
D=A
@CALL
0;JMP
(return758)
@114  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return759
D=A
@CALL
0;JMP
(return759)
@109  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return760
D=A
@CALL
0;JMP
(return760)
@44  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return761
D=A
@CALL
0;JMP
(return761)
@39  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return762
D=A
@CALL
0;JMP
(return762)
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@7  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL //push local
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@4
D=A
@R14
M=D
@About.show
D=A
@R13
M=D
@return763
D=A
@CALL
0;JMP
(return763)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@29  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@String.new
D=A
@R13
M=D
@return764
D=A
@CALL
0;JMP
(return764)
@32  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return765
D=A
@CALL
0;JMP
(return765)
@109  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return766
D=A
@CALL
0;JMP
(return766)
@97  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return767
D=A
@CALL
0;JMP
(return767)
@100  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return768
D=A
@CALL
0;JMP
(return768)
@101  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return769
D=A
@CALL
0;JMP
(return769)
@32  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return770
D=A
@CALL
0;JMP
(return770)
@102  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return771
D=A
@CALL
0;JMP
(return771)
@114  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return772
D=A
@CALL
0;JMP
(return772)
@111  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return773
D=A
@CALL
0;JMP
(return773)
@109  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return774
D=A
@CALL
0;JMP
(return774)
@32  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return775
D=A
@CALL
0;JMP
(return775)
@115  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return776
D=A
@CALL
0;JMP
(return776)
@111  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return777
D=A
@CALL
0;JMP
(return777)
@109  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return778
D=A
@CALL
0;JMP
(return778)
@101  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return779
D=A
@CALL
0;JMP
(return779)
@32  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return780
D=A
@CALL
0;JMP
(return780)
@39  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return781
D=A
@CALL
0;JMP
(return781)
@114  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return782
D=A
@CALL
0;JMP
(return782)
@101  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return783
D=A
@CALL
0;JMP
(return783)
@97  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return784
D=A
@CALL
0;JMP
(return784)
@108  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return785
D=A
@CALL
0;JMP
(return785)
@32  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return786
D=A
@CALL
0;JMP
(return786)
@115  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return787
D=A
@CALL
0;JMP
(return787)
@116  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return788
D=A
@CALL
0;JMP
(return788)
@117  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return789
D=A
@CALL
0;JMP
(return789)
@102  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return790
D=A
@CALL
0;JMP
(return790)
@102  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return791
D=A
@CALL
0;JMP
(return791)
@39  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return792
D=A
@CALL
0;JMP
(return792)
@63  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return793
D=A
@CALL
0;JMP
(return793)
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@8  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL //push local
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@4
D=A
@R14
M=D
@About.show
D=A
@R13
M=D
@return794
D=A
@CALL
0;JMP
(return794)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@ARG //push argument
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
@About.display$if23
D;JNE
@About.display$ifelse23
0;JMP
(About.display$if23)
@1000  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@Sys.wait
D=A
@R13
M=D
@return795
D=A
@CALL
0;JMP
(return795)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
(About.display$ifelse23)
@24  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@String.new
D=A
@R13
M=D
@return796
D=A
@CALL
0;JMP
(return796)
@32  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return797
D=A
@CALL
0;JMP
(return797)
@32  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return798
D=A
@CALL
0;JMP
(return798)
@108  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return799
D=A
@CALL
0;JMP
(return799)
@101  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return800
D=A
@CALL
0;JMP
(return800)
@116  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return801
D=A
@CALL
0;JMP
(return801)
@32  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return802
D=A
@CALL
0;JMP
(return802)
@114  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return803
D=A
@CALL
0;JMP
(return803)
@101  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return804
D=A
@CALL
0;JMP
(return804)
@97  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return805
D=A
@CALL
0;JMP
(return805)
@108  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return806
D=A
@CALL
0;JMP
(return806)
@95  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return807
D=A
@CALL
0;JMP
(return807)
@115  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return808
D=A
@CALL
0;JMP
(return808)
@116  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return809
D=A
@CALL
0;JMP
(return809)
@117  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return810
D=A
@CALL
0;JMP
(return810)
@102  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return811
D=A
@CALL
0;JMP
(return811)
@102  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return812
D=A
@CALL
0;JMP
(return812)
@32  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return813
D=A
@CALL
0;JMP
(return813)
@61  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return814
D=A
@CALL
0;JMP
(return814)
@32  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return815
D=A
@CALL
0;JMP
(return815)
@70  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return816
D=A
@CALL
0;JMP
(return816)
@80  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return817
D=A
@CALL
0;JMP
(return817)
@71  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return818
D=A
@CALL
0;JMP
(return818)
@65  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return819
D=A
@CALL
0;JMP
(return819)
@59  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return820
D=A
@CALL
0;JMP
(return820)
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@16  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL //push local
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@4
D=A
@R14
M=D
@About.show
D=A
@R13
M=D
@return821
D=A
@CALL
0;JMP
(return821)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@ARG //push argument
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
@About.display$if30
D;JNE
@About.display$ifelse30
0;JMP
(About.display$if30)
@1000  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@Sys.wait
D=A
@R13
M=D
@return822
D=A
@CALL
0;JMP
(return822)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
(About.display$ifelse30)
@26  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@String.new
D=A
@R13
M=D
@return823
D=A
@CALL
0;JMP
(return823)
@32  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return824
D=A
@CALL
0;JMP
(return824)
@32  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return825
D=A
@CALL
0;JMP
(return825)
@100  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return826
D=A
@CALL
0;JMP
(return826)
@111  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return827
D=A
@CALL
0;JMP
(return827)
@32  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return828
D=A
@CALL
0;JMP
(return828)
@70  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return829
D=A
@CALL
0;JMP
(return829)
@80  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return830
D=A
@CALL
0;JMP
(return830)
@71  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return831
D=A
@CALL
0;JMP
(return831)
@65  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return832
D=A
@CALL
0;JMP
(return832)
@46  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return833
D=A
@CALL
0;JMP
(return833)
@114  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return834
D=A
@CALL
0;JMP
(return834)
@117  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return835
D=A
@CALL
0;JMP
(return835)
@110  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return836
D=A
@CALL
0;JMP
(return836)
@74  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return837
D=A
@CALL
0;JMP
(return837)
@97  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return838
D=A
@CALL
0;JMP
(return838)
@99  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return839
D=A
@CALL
0;JMP
(return839)
@107  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return840
D=A
@CALL
0;JMP
(return840)
@40  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return841
D=A
@CALL
0;JMP
(return841)
@84  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return842
D=A
@CALL
0;JMP
(return842)
@101  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return843
D=A
@CALL
0;JMP
(return843)
@116  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return844
D=A
@CALL
0;JMP
(return844)
@114  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return845
D=A
@CALL
0;JMP
(return845)
@105  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return846
D=A
@CALL
0;JMP
(return846)
@115  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return847
D=A
@CALL
0;JMP
(return847)
@41  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return848
D=A
@CALL
0;JMP
(return848)
@59  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return849
D=A
@CALL
0;JMP
(return849)
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@18  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL //push local
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@4
D=A
@R14
M=D
@About.show
D=A
@R13
M=D
@return850
D=A
@CALL
0;JMP
(return850)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@ARG //push argument
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
@About.display$if37
D;JNE
@About.display$ifelse37
0;JMP
(About.display$if37)
@1000  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@Sys.wait
D=A
@R13
M=D
@return851
D=A
@CALL
0;JMP
(return851)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
(About.display$ifelse37)
@30  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@String.new
D=A
@R13
M=D
@return852
D=A
@CALL
0;JMP
(return852)
@103  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return853
D=A
@CALL
0;JMP
(return853)
@105  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return854
D=A
@CALL
0;JMP
(return854)
@116  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return855
D=A
@CALL
0;JMP
(return855)
@108  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return856
D=A
@CALL
0;JMP
(return856)
@97  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return857
D=A
@CALL
0;JMP
(return857)
@98  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return858
D=A
@CALL
0;JMP
(return858)
@46  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return859
D=A
@CALL
0;JMP
(return859)
@99  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return860
D=A
@CALL
0;JMP
(return860)
@111  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return861
D=A
@CALL
0;JMP
(return861)
@109  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return862
D=A
@CALL
0;JMP
(return862)
@47  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return863
D=A
@CALL
0;JMP
(return863)
@120  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return864
D=A
@CALL
0;JMP
(return864)
@54  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return865
D=A
@CALL
0;JMP
(return865)
@53  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return866
D=A
@CALL
0;JMP
(return866)
@51  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return867
D=A
@CALL
0;JMP
(return867)
@47  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return868
D=A
@CALL
0;JMP
(return868)
@110  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return869
D=A
@CALL
0;JMP
(return869)
@97  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return870
D=A
@CALL
0;JMP
(return870)
@110  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return871
D=A
@CALL
0;JMP
(return871)
@100  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return872
D=A
@CALL
0;JMP
(return872)
@50  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return873
D=A
@CALL
0;JMP
(return873)
@116  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return874
D=A
@CALL
0;JMP
(return874)
@101  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return875
D=A
@CALL
0;JMP
(return875)
@116  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return876
D=A
@CALL
0;JMP
(return876)
@114  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return877
D=A
@CALL
0;JMP
(return877)
@105  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return878
D=A
@CALL
0;JMP
(return878)
@115  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return879
D=A
@CALL
0;JMP
(return879)
@45  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return880
D=A
@CALL
0;JMP
(return880)
@49  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return881
D=A
@CALL
0;JMP
(return881)
@51  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return882
D=A
@CALL
0;JMP
(return882)
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@22  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL //push local
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@4
D=A
@R14
M=D
@About.show
D=A
@R13
M=D
@return883
D=A
@CALL
0;JMP
(return883)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@ARG //push argument
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
@About.display$if44
D;JNE
@About.display$ifelse44
0;JMP
(About.display$if44)
@1000  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@Sys.wait
D=A
@R13
M=D
@return884
D=A
@CALL
0;JMP
(return884)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
(About.display$ifelse44)
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@RETURN
0;JMP

(About.show)
@1
D=A
(About.show_LOOP)
@About.show_END
D;JEQ
@SP
A=M
M=0
@SP
M=M+1
D=D-1
@About.show_LOOP
0;JMP
(About.show_END)

@ARG //push argument
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG //push argument
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@Output.moveCursor
D=A
@R13
M=D
@return885
D=A
@CALL
0;JMP
(return885)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL //pop local
D=M
@0
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
(About.show$while4)
@LCL //push local
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG //push argument
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@String.length
D=A
@R13
M=D
@return886
D=A
@CALL
0;JMP
(return886)
@SP
AM=M-1
D=M
A=A-1
D=M-D
M=-1
@lt135
D;JLT
@SP
A=M-1
M=0
(lt135)
@SP  //not
A=M-1
M=!M
@SP
AM=M-1
D=M
@About.show$whileend4
D;JNE
@ARG //push argument
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@LCL //push local
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.charAt
D=A
@R13
M=D
@return887
D=A
@CALL
0;JMP
(return887)
@1
D=A
@R14
M=D
@Output.printChar
D=A
@R13
M=D
@return888
D=A
@CALL
0;JMP
(return888)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@ARG //push argument
D=M
@3
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@Sys.wait
D=A
@R13
M=D
@return889
D=A
@CALL
0;JMP
(return889)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@LCL //push local
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@LCL //pop local
D=M
@0
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@About.show$while4
0;JMP
(About.show$whileend4)
@ARG //push argument
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@String.dispose
D=A
@R13
M=D
@return890
D=A
@CALL
0;JMP
(return890)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@RETURN
0;JMP

(UART.init)
@0
D=A
(UART.init_LOOP)
@UART.init_END
D;JEQ
@SP
A=M
M=0
@SP
M=M+1
D=D-1
@UART.init_LOOP
0;JMP
(UART.init_END)

@8194  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //pop static
AM=M-1
D=M
@UART.0
M=D
@6  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@String.new
D=A
@R13
M=D
@return891
D=A
@CALL
0;JMP
(return891)
@SP  //pop static
AM=M-1
D=M
@UART.1
M=D
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@RETURN
0;JMP

(UART.readChar)
@1
D=A
(UART.readChar_LOOP)
@UART.readChar_END
D;JEQ
@SP
A=M
M=0
@SP
M=M+1
D=D-1
@UART.readChar_LOOP
0;JMP
(UART.readChar_END)

@1  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //neg
A=M-1
M=-M
@LCL //pop local
D=M
@0
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
(UART.readChar$while2)
@LCL //push local
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
D=M-D
M=-1
@lt136
D;JLT
@SP
A=M-1
M=0
(lt136)
@SP  //not
A=M-1
M=!M
@SP
AM=M-1
D=M
@UART.readChar$whileend2
D;JNE
@UART.0   //push static
D=M
@SP
A=M
M=D
@SP
M=M+1
@1  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@SP  //pop pointer
AM=M-1
D=M
@THAT
M=D
@THAT    //push that
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@LCL //pop local
D=M
@0
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@UART.readChar$while2
0;JMP
(UART.readChar$whileend2)
@1  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@UART.0   //push static
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@1  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //neg
A=M-1
M=-M
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@SP  //pop pointer
AM=M-1
D=M
@THAT
M=D
@R5 //push temp
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT    //pop that
D=M
@0
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@LCL //push local
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@RETURN
0;JMP

(UART.writeChar)
@1
D=A
(UART.writeChar_LOOP)
@UART.writeChar_END
D;JEQ
@SP
A=M
M=0
@SP
M=M+1
D=D-1
@UART.writeChar_LOOP
0;JMP
(UART.writeChar_END)

@1  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //neg
A=M-1
M=-M
@LCL //pop local
D=M
@0
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
(UART.writeChar$while2)
@LCL //push local
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //not
A=M-1
M=!M
@SP
AM=M-1
D=M
@UART.writeChar$whileend2
D;JNE
@UART.0   //push static
D=M
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@SP  //pop pointer
AM=M-1
D=M
@THAT
M=D
@THAT    //push that
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@LCL //pop local
D=M
@0
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@UART.writeChar$while2
0;JMP
(UART.writeChar$whileend2)
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@UART.0   //push static
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@ARG //push argument
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@SP  //pop pointer
AM=M-1
D=M
@THAT
M=D
@R5 //push temp
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT    //pop that
D=M
@0
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@RETURN
0;JMP

(UART.printString)
@1
D=A
(UART.printString_LOOP)
@UART.printString_END
D;JEQ
@SP
A=M
M=0
@SP
M=M+1
D=D-1
@UART.printString_LOOP
0;JMP
(UART.printString_END)

@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL //pop local
D=M
@0
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
(UART.printString$while2)
@LCL //push local
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG //push argument
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@String.length
D=A
@R13
M=D
@return892
D=A
@CALL
0;JMP
(return892)
@SP
AM=M-1
D=M
A=A-1
D=M-D
M=-1
@lt137
D;JLT
@SP
A=M-1
M=0
(lt137)
@SP  //not
A=M-1
M=!M
@SP
AM=M-1
D=M
@UART.printString$whileend2
D;JNE
@ARG //push argument
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@LCL //push local
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.charAt
D=A
@R13
M=D
@return893
D=A
@CALL
0;JMP
(return893)
@1
D=A
@R14
M=D
@UART.writeChar
D=A
@R13
M=D
@return894
D=A
@CALL
0;JMP
(return894)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@LCL //push local
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@LCL //pop local
D=M
@0
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@UART.printString$while2
0;JMP
(UART.printString$whileend2)
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@RETURN
0;JMP

(UART.printInt)
@0
D=A
(UART.printInt_LOOP)
@UART.printInt_END
D;JEQ
@SP
A=M
M=0
@SP
M=M+1
D=D-1
@UART.printInt_LOOP
0;JMP
(UART.printInt_END)

@UART.1   //push static
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG //push argument
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.setInt
D=A
@R13
M=D
@return895
D=A
@CALL
0;JMP
(return895)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@UART.1   //push static
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@UART.printString
D=A
@R13
M=D
@return896
D=A
@CALL
0;JMP
(return896)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@RETURN
0;JMP

(UART.println)
@0
D=A
(UART.println_LOOP)
@UART.println_END
D;JEQ
@SP
A=M
M=0
@SP
M=M+1
D=D-1
@UART.println_LOOP
0;JMP
(UART.println_END)

@13  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@UART.writeChar
D=A
@R13
M=D
@return897
D=A
@CALL
0;JMP
(return897)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@10  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@UART.writeChar
D=A
@R13
M=D
@return898
D=A
@CALL
0;JMP
(return898)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@RETURN
0;JMP

(UART.readInt)
@2
D=A
(UART.readInt_LOOP)
@UART.readInt_END
D;JEQ
@SP
A=M
M=0
@SP
M=M+1
D=D-1
@UART.readInt_LOOP
0;JMP
(UART.readInt_END)

@ARG //push argument
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@UART.readLine
D=A
@R13
M=D
@return899
D=A
@CALL
0;JMP
(return899)
@LCL //pop local
D=M
@0
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@LCL //push local
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@String.intValue
D=A
@R13
M=D
@return900
D=A
@CALL
0;JMP
(return900)
@LCL //pop local
D=M
@1
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@LCL //push local
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@String.dispose
D=A
@R13
M=D
@return901
D=A
@CALL
0;JMP
(return901)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@LCL //push local
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@RETURN
0;JMP

(UART.readLine)
@5
D=A
(UART.readLine_LOOP)
@UART.readLine_END
D;JEQ
@SP
A=M
M=0
@SP
M=M+1
D=D-1
@UART.readLine_LOOP
0;JMP
(UART.readLine_END)

@80  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@String.new
D=A
@R13
M=D
@return902
D=A
@CALL
0;JMP
(return902)
@LCL //pop local
D=M
@3
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@ARG //push argument
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@UART.printString
D=A
@R13
M=D
@return903
D=A
@CALL
0;JMP
(return903)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@0
D=A
@R14
M=D
@UART.readChar
D=A
@R13
M=D
@return904
D=A
@CALL
0;JMP
(return904)
@LCL //pop local
D=M
@0
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
(UART.readLine$while4)
@LCL //push local
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@13  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
D=D-M
M=-1
@eq138
D;JEQ
@SP
A=M-1
M=0
(eq138)
@SP  //not
A=M-1
M=!M
@SP  //not
A=M-1
M=!M
@SP
AM=M-1
D=M
@UART.readLine$whileend4
D;JNE
@LCL //push local
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@UART.writeChar
D=A
@R13
M=D
@return905
D=A
@CALL
0;JMP
(return905)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@LCL //push local
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@127  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
D=D-M
M=-1
@eq139
D;JEQ
@SP
A=M-1
M=0
(eq139)
@SP
AM=M-1
D=M
@UART.readLine$if7
D;JNE
@UART.readLine$ifelse7
0;JMP
(UART.readLine$if7)
@LCL //push local
D=M
@3
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@String.eraseLastChar
D=A
@R13
M=D
@return906
D=A
@CALL
0;JMP
(return906)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@UART.readLine$ifend7
0;JMP
(UART.readLine$ifelse7)
@LCL //push local
D=M
@3
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@LCL //push local
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return907
D=A
@CALL
0;JMP
(return907)
@LCL //pop local
D=M
@3
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
(UART.readLine$ifend7)
@0
D=A
@R14
M=D
@UART.readChar
D=A
@R13
M=D
@return908
D=A
@CALL
0;JMP
(return908)
@LCL //pop local
D=M
@0
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@UART.readLine$while4
0;JMP
(UART.readLine$whileend4)
@0
D=A
@R14
M=D
@UART.println
D=A
@R13
M=D
@return909
D=A
@CALL
0;JMP
(return909)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@LCL //push local
D=M
@3
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@RETURN
0;JMP

(Ball.new)
@0
D=A
(Ball.new_LOOP)
@Ball.new_END
D;JEQ
@SP
A=M
M=0
@SP
M=M+1
D=D-1
@Ball.new_LOOP
0;JMP
(Ball.new_END)

@15  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@Memory.alloc
D=A
@R13
M=D
@return910
D=A
@CALL
0;JMP
(return910)
@SP  //pop pointer
AM=M-1
D=M
@THIS
M=D
@ARG //push argument
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS    //pop this
D=M
@0
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@ARG //push argument
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS    //pop this
D=M
@1
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@ARG //push argument
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS    //pop this
D=M
@10
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@ARG //push argument
D=M
@3
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@6  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //sub
AM=M-1
D=M
A=A-1
M=M-D
@THIS    //pop this
D=M
@11
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@ARG //push argument
D=M
@4
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS    //pop this
D=M
@12
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@ARG //push argument
D=M
@5
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@6  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //sub
AM=M-1
D=M
A=A-1
M=M-D
@THIS    //pop this
D=M
@13
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@THIS    //pop this
D=M
@14
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@R3 //push pointer
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@Ball.show
D=A
@R13
M=D
@return911
D=A
@CALL
0;JMP
(return911)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@R3 //push pointer
D=M
@SP
A=M
M=D
@SP
M=M+1
@RETURN
0;JMP

(Ball.dispose)
@0
D=A
(Ball.dispose_LOOP)
@Ball.dispose_END
D;JEQ
@SP
A=M
M=0
@SP
M=M+1
D=D-1
@Ball.dispose_LOOP
0;JMP
(Ball.dispose_END)

@ARG //push argument
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //pop pointer
AM=M-1
D=M
@THIS
M=D
@R3 //push pointer
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@Memory.deAlloc
D=A
@R13
M=D
@return912
D=A
@CALL
0;JMP
(return912)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@RETURN
0;JMP

(Ball.show)
@0
D=A
(Ball.show_LOOP)
@Ball.show_END
D;JEQ
@SP
A=M
M=0
@SP
M=M+1
D=D-1
@Ball.show_LOOP
0;JMP
(Ball.show_END)

@ARG //push argument
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //pop pointer
AM=M-1
D=M
@THIS
M=D
@R3 //push pointer
D=M
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@Ball.draw
D=A
@R13
M=D
@return913
D=A
@CALL
0;JMP
(return913)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@RETURN
0;JMP

(Ball.hide)
@0
D=A
(Ball.hide_LOOP)
@Ball.hide_END
D;JEQ
@SP
A=M
M=0
@SP
M=M+1
D=D-1
@Ball.hide_LOOP
0;JMP
(Ball.hide_END)

@ARG //push argument
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //pop pointer
AM=M-1
D=M
@THIS
M=D
@R3 //push pointer
D=M
@SP
A=M
M=D
@SP
M=M+1
@1  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //neg
A=M-1
M=-M
@2
D=A
@R14
M=D
@Ball.draw
D=A
@R13
M=D
@return914
D=A
@CALL
0;JMP
(return914)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@RETURN
0;JMP

(Ball.draw)
@0
D=A
(Ball.draw_LOOP)
@Ball.draw_END
D;JEQ
@SP
A=M
M=0
@SP
M=M+1
D=D-1
@Ball.draw_LOOP
0;JMP
(Ball.draw_END)

@ARG //push argument
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //pop pointer
AM=M-1
D=M
@THIS
M=D
@ARG //push argument
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@Screen.setColor
D=A
@R13
M=D
@return915
D=A
@CALL
0;JMP
(return915)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@THIS    //push this
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS    //push this
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@5  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@5  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@4
D=A
@R14
M=D
@Screen.drawRectangle
D=A
@R13
M=D
@return916
D=A
@CALL
0;JMP
(return916)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@Screen.setColor
D=A
@R13
M=D
@return917
D=A
@CALL
0;JMP
(return917)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@RETURN
0;JMP

(Ball.getLeft)
@0
D=A
(Ball.getLeft_LOOP)
@Ball.getLeft_END
D;JEQ
@SP
A=M
M=0
@SP
M=M+1
D=D-1
@Ball.getLeft_LOOP
0;JMP
(Ball.getLeft_END)

@ARG //push argument
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //pop pointer
AM=M-1
D=M
@THIS
M=D
@THIS    //push this
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@RETURN
0;JMP

(Ball.getRight)
@0
D=A
(Ball.getRight_LOOP)
@Ball.getRight_END
D;JEQ
@SP
A=M
M=0
@SP
M=M+1
D=D-1
@Ball.getRight_LOOP
0;JMP
(Ball.getRight_END)

@ARG //push argument
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //pop pointer
AM=M-1
D=M
@THIS
M=D
@THIS    //push this
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@5  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@RETURN
0;JMP

(Ball.setDestination)
@3
D=A
(Ball.setDestination_LOOP)
@Ball.setDestination_END
D;JEQ
@SP
A=M
M=0
@SP
M=M+1
D=D-1
@Ball.setDestination_LOOP
0;JMP
(Ball.setDestination_END)

@ARG //push argument
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //pop pointer
AM=M-1
D=M
@THIS
M=D
@ARG //push argument
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS    //push this
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //sub
AM=M-1
D=M
A=A-1
M=M-D
@THIS    //pop this
D=M
@2
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@ARG //push argument
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS    //push this
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //sub
AM=M-1
D=M
A=A-1
M=M-D
@THIS    //pop this
D=M
@3
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@THIS    //push this
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@Math.abs
D=A
@R13
M=D
@return918
D=A
@CALL
0;JMP
(return918)
@LCL //pop local
D=M
@0
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@THIS    //push this
D=M
@3
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@Math.abs
D=A
@R13
M=D
@return919
D=A
@CALL
0;JMP
(return919)
@LCL //pop local
D=M
@1
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@LCL //push local
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@LCL //push local
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
D=M-D
M=-1
@lt140
D;JLT
@SP
A=M-1
M=0
(lt140)
@THIS    //pop this
D=M
@7
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@THIS    //push this
D=M
@7
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
@Ball.setDestination$if1
D;JNE
@Ball.setDestination$ifelse1
0;JMP
(Ball.setDestination$if1)
@LCL //push local
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@LCL //pop local
D=M
@2
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@LCL //push local
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@LCL //pop local
D=M
@0
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@LCL //push local
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@LCL //pop local
D=M
@1
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@THIS    //push this
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG //push argument
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
D=M-D
M=-1
@lt141
D;JLT
@SP
A=M-1
M=0
(lt141)
@THIS    //pop this
D=M
@8
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@THIS    //push this
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG //push argument
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
D=M-D
M=-1
@lt142
D;JLT
@SP
A=M-1
M=0
(lt142)
@THIS    //pop this
D=M
@9
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@Ball.setDestination$ifend1
0;JMP
(Ball.setDestination$ifelse1)
@THIS    //push this
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG //push argument
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
D=M-D
M=-1
@lt143
D;JLT
@SP
A=M-1
M=0
(lt143)
@THIS    //pop this
D=M
@8
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@THIS    //push this
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG //push argument
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
D=M-D
M=-1
@lt144
D;JLT
@SP
A=M-1
M=0
(lt144)
@THIS    //pop this
D=M
@9
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
(Ball.setDestination$ifend1)
@2  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL //push local
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@Math.multiply
D=A
@R13
M=D
@return920
D=A
@CALL
0;JMP
(return920)
@LCL //push local
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //sub
AM=M-1
D=M
A=A-1
M=M-D
@THIS    //pop this
D=M
@4
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@2  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL //push local
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@Math.multiply
D=A
@R13
M=D
@return921
D=A
@CALL
0;JMP
(return921)
@THIS    //pop this
D=M
@5
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@2  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL //push local
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@LCL //push local
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //sub
AM=M-1
D=M
A=A-1
M=M-D
@2
D=A
@R14
M=D
@Math.multiply
D=A
@R13
M=D
@return922
D=A
@CALL
0;JMP
(return922)
@THIS    //pop this
D=M
@6
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@RETURN
0;JMP

(Ball.move)
@0
D=A
(Ball.move_LOOP)
@Ball.move_END
D;JEQ
@SP
A=M
M=0
@SP
M=M+1
D=D-1
@Ball.move_LOOP
0;JMP
(Ball.move_END)

@ARG //push argument
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //pop pointer
AM=M-1
D=M
@THIS
M=D
@R3 //push pointer
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@Ball.hide
D=A
@R13
M=D
@return923
D=A
@CALL
0;JMP
(return923)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@THIS    //push this
D=M
@4
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
D=M-D
M=-1
@lt145
D;JLT
@SP
A=M-1
M=0
(lt145)
@SP
AM=M-1
D=M
@Ball.move$if3
D;JNE
@Ball.move$ifelse3
0;JMP
(Ball.move$if3)
@THIS    //push this
D=M
@4
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS    //push this
D=M
@5
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@THIS    //pop this
D=M
@4
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@Ball.move$ifend3
0;JMP
(Ball.move$ifelse3)
@THIS    //push this
D=M
@4
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS    //push this
D=M
@6
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@THIS    //pop this
D=M
@4
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@THIS    //push this
D=M
@9
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
@Ball.move$if6
D;JNE
@Ball.move$ifelse6
0;JMP
(Ball.move$if6)
@THIS    //push this
D=M
@7
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
@Ball.move$if7
D;JNE
@Ball.move$ifelse7
0;JMP
(Ball.move$if7)
@THIS    //push this
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@4  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@THIS    //pop this
D=M
@0
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@Ball.move$ifend7
0;JMP
(Ball.move$ifelse7)
@THIS    //push this
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@4  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@THIS    //pop this
D=M
@1
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
(Ball.move$ifend7)
@Ball.move$ifend6
0;JMP
(Ball.move$ifelse6)
@THIS    //push this
D=M
@7
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
@Ball.move$if14
D;JNE
@Ball.move$ifelse14
0;JMP
(Ball.move$if14)
@THIS    //push this
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@4  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //sub
AM=M-1
D=M
A=A-1
M=M-D
@THIS    //pop this
D=M
@0
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@Ball.move$ifend14
0;JMP
(Ball.move$ifelse14)
@THIS    //push this
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@4  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //sub
AM=M-1
D=M
A=A-1
M=M-D
@THIS    //pop this
D=M
@1
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
(Ball.move$ifend14)
(Ball.move$ifend6)
(Ball.move$ifend3)
@THIS    //push this
D=M
@8
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
@Ball.move$if23
D;JNE
@Ball.move$ifelse23
0;JMP
(Ball.move$if23)
@THIS    //push this
D=M
@7
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
@Ball.move$if24
D;JNE
@Ball.move$ifelse24
0;JMP
(Ball.move$if24)
@THIS    //push this
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@4  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@THIS    //pop this
D=M
@1
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@Ball.move$ifend24
0;JMP
(Ball.move$ifelse24)
@THIS    //push this
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@4  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@THIS    //pop this
D=M
@0
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
(Ball.move$ifend24)
@Ball.move$ifend23
0;JMP
(Ball.move$ifelse23)
@THIS    //push this
D=M
@7
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
@Ball.move$if31
D;JNE
@Ball.move$ifelse31
0;JMP
(Ball.move$if31)
@THIS    //push this
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@4  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //sub
AM=M-1
D=M
A=A-1
M=M-D
@THIS    //pop this
D=M
@1
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@Ball.move$ifend31
0;JMP
(Ball.move$ifelse31)
@THIS    //push this
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@4  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //sub
AM=M-1
D=M
A=A-1
M=M-D
@THIS    //pop this
D=M
@0
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
(Ball.move$ifend31)
(Ball.move$ifend23)
@THIS    //push this
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS    //push this
D=M
@10
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
D=M-D
M=-1
@gt146
D;JGT
@SP
A=M-1
M=0
(gt146)
@SP  //not
A=M-1
M=!M
@SP
AM=M-1
D=M
@Ball.move$if38
D;JNE
@Ball.move$ifelse38
0;JMP
(Ball.move$if38)
@1  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@THIS    //pop this
D=M
@14
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@THIS    //push this
D=M
@10
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS    //pop this
D=M
@0
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
(Ball.move$ifelse38)
@THIS    //push this
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS    //push this
D=M
@11
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
D=M-D
M=-1
@lt147
D;JLT
@SP
A=M-1
M=0
(lt147)
@SP  //not
A=M-1
M=!M
@SP
AM=M-1
D=M
@Ball.move$if41
D;JNE
@Ball.move$ifelse41
0;JMP
(Ball.move$if41)
@2  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@THIS    //pop this
D=M
@14
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@THIS    //push this
D=M
@11
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS    //pop this
D=M
@0
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
(Ball.move$ifelse41)
@THIS    //push this
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS    //push this
D=M
@12
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
D=M-D
M=-1
@gt148
D;JGT
@SP
A=M-1
M=0
(gt148)
@SP  //not
A=M-1
M=!M
@SP
AM=M-1
D=M
@Ball.move$if44
D;JNE
@Ball.move$ifelse44
0;JMP
(Ball.move$if44)
@3  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@THIS    //pop this
D=M
@14
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@THIS    //push this
D=M
@12
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS    //pop this
D=M
@1
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
(Ball.move$ifelse44)
@THIS    //push this
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS    //push this
D=M
@13
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
D=M-D
M=-1
@lt149
D;JLT
@SP
A=M-1
M=0
(lt149)
@SP  //not
A=M-1
M=!M
@SP
AM=M-1
D=M
@Ball.move$if47
D;JNE
@Ball.move$ifelse47
0;JMP
(Ball.move$if47)
@4  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@THIS    //pop this
D=M
@14
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@THIS    //push this
D=M
@13
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS    //pop this
D=M
@1
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
(Ball.move$ifelse47)
@R3 //push pointer
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@Ball.show
D=A
@R13
M=D
@return924
D=A
@CALL
0;JMP
(return924)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@THIS    //push this
D=M
@14
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@RETURN
0;JMP

(Ball.bounce)
@5
D=A
(Ball.bounce_LOOP)
@Ball.bounce_END
D;JEQ
@SP
A=M
M=0
@SP
M=M+1
D=D-1
@Ball.bounce_LOOP
0;JMP
(Ball.bounce_END)

@ARG //push argument
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //pop pointer
AM=M-1
D=M
@THIS
M=D
@THIS    //push this
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@10  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@Math.divide
D=A
@R13
M=D
@return925
D=A
@CALL
0;JMP
(return925)
@LCL //pop local
D=M
@2
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@THIS    //push this
D=M
@3
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@10  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@Math.divide
D=A
@R13
M=D
@return926
D=A
@CALL
0;JMP
(return926)
@LCL //pop local
D=M
@3
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@ARG //push argument
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
D=D-M
M=-1
@eq150
D;JEQ
@SP
A=M-1
M=0
(eq150)
@SP
AM=M-1
D=M
@Ball.bounce$if1
D;JNE
@Ball.bounce$ifelse1
0;JMP
(Ball.bounce$if1)
@10  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL //pop local
D=M
@4
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@Ball.bounce$ifend1
0;JMP
(Ball.bounce$ifelse1)
@THIS    //push this
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
D=M-D
M=-1
@lt151
D;JLT
@SP
A=M-1
M=0
(lt151)
@SP  //not
A=M-1
M=!M
@ARG //push argument
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
D=D-M
M=-1
@eq152
D;JEQ
@SP
A=M-1
M=0
(eq152)
@SP  //and
AM=M-1
D=M
A=A-1
M=D&M
@THIS    //push this
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
D=M-D
M=-1
@lt153
D;JLT
@SP
A=M-1
M=0
(lt153)
@ARG //push argument
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //neg
A=M-1
M=-M
@SP
AM=M-1
D=M
A=A-1
D=D-M
M=-1
@eq154
D;JEQ
@SP
A=M-1
M=0
(eq154)
@SP  //and
AM=M-1
D=M
A=A-1
M=D&M
@SP  //or
AM=M-1
D=M
A=A-1
M=D|M
@SP
AM=M-1
D=M
@Ball.bounce$if4
D;JNE
@Ball.bounce$ifelse4
0;JMP
(Ball.bounce$if4)
@20  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL //pop local
D=M
@4
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@Ball.bounce$ifend4
0;JMP
(Ball.bounce$ifelse4)
@5  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL //pop local
D=M
@4
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
(Ball.bounce$ifend4)
(Ball.bounce$ifend1)
@THIS    //push this
D=M
@14
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
D=D-M
M=-1
@eq155
D;JEQ
@SP
A=M-1
M=0
(eq155)
@SP
AM=M-1
D=M
@Ball.bounce$if11
D;JNE
@Ball.bounce$ifelse11
0;JMP
(Ball.bounce$if11)
@234  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL //pop local
D=M
@0
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@LCL //push local
D=M
@3
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@30  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //neg
A=M-1
M=-M
@2
D=A
@R14
M=D
@Math.multiply
D=A
@R13
M=D
@return927
D=A
@CALL
0;JMP
(return927)
@LCL //push local
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@Math.divide
D=A
@R13
M=D
@return928
D=A
@CALL
0;JMP
(return928)
@LCL //pop local
D=M
@1
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@THIS    //push this
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@LCL //push local
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@LCL //push local
D=M
@4
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@Math.multiply
D=A
@R13
M=D
@return929
D=A
@CALL
0;JMP
(return929)
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@LCL //pop local
D=M
@1
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@Ball.bounce$ifend11
0;JMP
(Ball.bounce$ifelse11)
@THIS    //push this
D=M
@14
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@2  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
D=D-M
M=-1
@eq156
D;JEQ
@SP
A=M-1
M=0
(eq156)
@SP
AM=M-1
D=M
@Ball.bounce$if14
D;JNE
@Ball.bounce$ifelse14
0;JMP
(Ball.bounce$if14)
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL //pop local
D=M
@0
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@LCL //push local
D=M
@3
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@30  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@Math.multiply
D=A
@R13
M=D
@return930
D=A
@CALL
0;JMP
(return930)
@LCL //push local
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@Math.divide
D=A
@R13
M=D
@return931
D=A
@CALL
0;JMP
(return931)
@LCL //pop local
D=M
@1
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@THIS    //push this
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@LCL //push local
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@LCL //push local
D=M
@4
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@Math.multiply
D=A
@R13
M=D
@return932
D=A
@CALL
0;JMP
(return932)
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@LCL //pop local
D=M
@1
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@Ball.bounce$ifend14
0;JMP
(Ball.bounce$ifelse14)
@THIS    //push this
D=M
@14
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@3  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
D=D-M
M=-1
@eq157
D;JEQ
@SP
A=M-1
M=0
(eq157)
@SP
AM=M-1
D=M
@Ball.bounce$if17
D;JNE
@Ball.bounce$ifelse17
0;JMP
(Ball.bounce$if17)
@314  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL //pop local
D=M
@1
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@LCL //push local
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@40  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //neg
A=M-1
M=-M
@2
D=A
@R14
M=D
@Math.multiply
D=A
@R13
M=D
@return933
D=A
@CALL
0;JMP
(return933)
@LCL //push local
D=M
@3
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@Math.divide
D=A
@R13
M=D
@return934
D=A
@CALL
0;JMP
(return934)
@LCL //pop local
D=M
@0
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@THIS    //push this
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@LCL //push local
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@LCL //push local
D=M
@4
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@Math.multiply
D=A
@R13
M=D
@return935
D=A
@CALL
0;JMP
(return935)
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@LCL //pop local
D=M
@0
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@Ball.bounce$ifend17
0;JMP
(Ball.bounce$ifelse17)
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL //pop local
D=M
@1
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@LCL //push local
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@40  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@Math.multiply
D=A
@R13
M=D
@return936
D=A
@CALL
0;JMP
(return936)
@LCL //push local
D=M
@3
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@Math.divide
D=A
@R13
M=D
@return937
D=A
@CALL
0;JMP
(return937)
@LCL //pop local
D=M
@0
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@THIS    //push this
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@LCL //push local
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@LCL //push local
D=M
@4
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@Math.multiply
D=A
@R13
M=D
@return938
D=A
@CALL
0;JMP
(return938)
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@LCL //pop local
D=M
@0
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
(Ball.bounce$ifend17)
(Ball.bounce$ifend14)
(Ball.bounce$ifend11)
@R3 //push pointer
D=M
@SP
A=M
M=D
@SP
M=M+1
@LCL //push local
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@LCL //push local
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@3
D=A
@R14
M=D
@Ball.setDestination
D=A
@R13
M=D
@return939
D=A
@CALL
0;JMP
(return939)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@RETURN
0;JMP

(GPIO.init)
@0
D=A
(GPIO.init_LOOP)
@GPIO.init_END
D;JEQ
@SP
A=M
M=0
@SP
M=M+1
D=D-1
@GPIO.init_LOOP
0;JMP
(GPIO.init_END)

@8192  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //pop static
AM=M-1
D=M
@GPIO.0
M=D
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@RETURN
0;JMP

(GPIO.getBut)
@0
D=A
(GPIO.getBut_LOOP)
@GPIO.getBut_END
D;JEQ
@SP
A=M
M=0
@SP
M=M+1
D=D-1
@GPIO.getBut_LOOP
0;JMP
(GPIO.getBut_END)

@GPIO.0   //push static
D=M
@SP
A=M
M=D
@SP
M=M+1
@1  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@SP  //pop pointer
AM=M-1
D=M
@THAT
M=D
@THAT    //push that
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@RETURN
0;JMP

(GPIO.getLed)
@0
D=A
(GPIO.getLed_LOOP)
@GPIO.getLed_END
D;JEQ
@SP
A=M
M=0
@SP
M=M+1
D=D-1
@GPIO.getLed_LOOP
0;JMP
(GPIO.getLed_END)

@GPIO.0   //push static
D=M
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@SP  //pop pointer
AM=M-1
D=M
@THAT
M=D
@THAT    //push that
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@RETURN
0;JMP

(GPIO.setLed)
@0
D=A
(GPIO.setLed_LOOP)
@GPIO.setLed_END
D;JEQ
@SP
A=M
M=0
@SP
M=M+1
D=D-1
@GPIO.setLed_LOOP
0;JMP
(GPIO.setLed_END)

@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@GPIO.0   //push static
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@ARG //push argument
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@SP  //pop pointer
AM=M-1
D=M
@THAT
M=D
@R5 //push temp
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT    //pop that
D=M
@0
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@RETURN
0;JMP

(Math.init)
@2
D=A
(Math.init_LOOP)
@Math.init_END
D;JEQ
@SP
A=M
M=0
@SP
M=M+1
D=D-1
@Math.init_LOOP
0;JMP
(Math.init_END)

@16  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@Array.new
D=A
@R13
M=D
@return940
D=A
@CALL
0;JMP
(return940)
@SP  //pop static
AM=M-1
D=M
@Math.0
M=D
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL //pop local
D=M
@0
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@1  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL //pop local
D=M
@1
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
(Math.init$while2)
@LCL //push local
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@16  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
D=M-D
M=-1
@lt158
D;JLT
@SP
A=M-1
M=0
(lt158)
@SP  //not
A=M-1
M=!M
@SP
AM=M-1
D=M
@Math.init$whileend2
D;JNE
@LCL //push local
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@Math.0   //push static
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@LCL //push local
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@SP  //pop pointer
AM=M-1
D=M
@THAT
M=D
@R5 //push temp
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT    //pop that
D=M
@0
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@LCL //push local
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@LCL //push local
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@LCL //pop local
D=M
@1
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@LCL //push local
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@LCL //pop local
D=M
@0
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@Math.init$while2
0;JMP
(Math.init$whileend2)
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@RETURN
0;JMP

(Math.abs)
@0
D=A
(Math.abs_LOOP)
@Math.abs_END
D;JEQ
@SP
A=M
M=0
@SP
M=M+1
D=D-1
@Math.abs_LOOP
0;JMP
(Math.abs_END)

@ARG //push argument
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
D=M-D
M=-1
@lt159
D;JLT
@SP
A=M-1
M=0
(lt159)
@SP
AM=M-1
D=M
@Math.abs$if1
D;JNE
@Math.abs$ifelse1
0;JMP
(Math.abs$if1)
@ARG //push argument
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //neg
A=M-1
M=-M
@RETURN
0;JMP

(Math.abs$ifelse1)
@ARG //push argument
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@RETURN
0;JMP

(Math.multiply)
@2
D=A
(Math.multiply_LOOP)
@Math.multiply_END
D;JEQ
@SP
A=M
M=0
@SP
M=M+1
D=D-1
@Math.multiply_LOOP
0;JMP
(Math.multiply_END)

@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL //pop local
D=M
@0
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL //pop local
D=M
@1
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
(Math.multiply$while2)
@LCL //push local
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@16  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
D=M-D
M=-1
@lt160
D;JLT
@SP
A=M-1
M=0
(lt160)
@SP  //not
A=M-1
M=!M
@SP
AM=M-1
D=M
@Math.multiply$whileend2
D;JNE
@Math.0   //push static
D=M
@SP
A=M
M=D
@SP
M=M+1
@LCL //push local
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@SP  //pop pointer
AM=M-1
D=M
@THAT
M=D
@THAT    //push that
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG //push argument
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //and
AM=M-1
D=M
A=A-1
M=D&M
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
D=D-M
M=-1
@eq161
D;JEQ
@SP
A=M-1
M=0
(eq161)
@SP
AM=M-1
D=M
@Math.multiply$if3
D;JNE
@Math.multiply$ifelse3
0;JMP
(Math.multiply$if3)
@Math.multiply$ifend3
0;JMP
(Math.multiply$ifelse3)
@LCL //push local
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG //push argument
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@LCL //pop local
D=M
@0
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
(Math.multiply$ifend3)
@LCL //push local
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@LCL //pop local
D=M
@1
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@ARG //push argument
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG //push argument
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@ARG //pop argument
D=M
@1
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@Math.multiply$while2
0;JMP
(Math.multiply$whileend2)
@LCL //push local
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@RETURN
0;JMP

(Math.divide)
@2
D=A
(Math.divide_LOOP)
@Math.divide_END
D;JEQ
@SP
A=M
M=0
@SP
M=M+1
D=D-1
@Math.divide_LOOP
0;JMP
(Math.divide_END)

@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL //pop local
D=M
@1
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@ARG //push argument
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
D=M-D
M=-1
@lt162
D;JLT
@SP
A=M-1
M=0
(lt162)
@SP
AM=M-1
D=M
@Math.divide$if1
D;JNE
@Math.divide$ifelse1
0;JMP
(Math.divide$if1)
@ARG //push argument
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@Math.abs
D=A
@R13
M=D
@return941
D=A
@CALL
0;JMP
(return941)
@ARG //pop argument
D=M
@0
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@LCL //push local
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //not
A=M-1
M=!M
@LCL //pop local
D=M
@1
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
(Math.divide$ifelse1)
@ARG //push argument
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
D=M-D
M=-1
@lt163
D;JLT
@SP
A=M-1
M=0
(lt163)
@SP
AM=M-1
D=M
@Math.divide$if4
D;JNE
@Math.divide$ifelse4
0;JMP
(Math.divide$if4)
@ARG //push argument
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@Math.abs
D=A
@R13
M=D
@return942
D=A
@CALL
0;JMP
(return942)
@ARG //pop argument
D=M
@1
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@LCL //push local
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //not
A=M-1
M=!M
@LCL //pop local
D=M
@1
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
(Math.divide$ifelse4)
@ARG //push argument
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG //push argument
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
D=M-D
M=-1
@lt164
D;JLT
@SP
A=M-1
M=0
(lt164)
@SP
AM=M-1
D=M
@Math.divide$if7
D;JNE
@Math.divide$ifelse7
0;JMP
(Math.divide$if7)
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@RETURN
0;JMP

(Math.divide$ifelse7)
@ARG //push argument
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG //push argument
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG //push argument
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@SP
AM=M-1
D=M
A=A-1
D=M-D
M=-1
@lt165
D;JLT
@SP
A=M-1
M=0
(lt165)
@SP
AM=M-1
D=M
@Math.divide$if10
D;JNE
@Math.divide$ifelse10
0;JMP
(Math.divide$if10)
@LCL //push local
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
@Math.divide$if11
D;JNE
@Math.divide$ifelse11
0;JMP
(Math.divide$if11)
@1  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //neg
A=M-1
M=-M
@RETURN
0;JMP

(Math.divide$ifelse11)
@1  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@RETURN
0;JMP

(Math.divide$ifelse10)
@ARG //push argument
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG //push argument
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG //push argument
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@2
D=A
@R14
M=D
@Math.divide
D=A
@R13
M=D
@return943
D=A
@CALL
0;JMP
(return943)
@LCL //pop local
D=M
@0
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@LCL //push local
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@LCL //push local
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@ARG //push argument
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@LCL //push local
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG //push argument
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG //push argument
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@2
D=A
@R14
M=D
@Math.multiply
D=A
@R13
M=D
@return944
D=A
@CALL
0;JMP
(return944)
@SP  //sub
AM=M-1
D=M
A=A-1
M=M-D
@ARG //push argument
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@Math.divide
D=A
@R13
M=D
@return945
D=A
@CALL
0;JMP
(return945)
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@LCL //pop local
D=M
@0
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@LCL //push local
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
@Math.divide$if16
D;JNE
@Math.divide$ifelse16
0;JMP
(Math.divide$if16)
@LCL //push local
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //neg
A=M-1
M=-M
@RETURN
0;JMP

(Math.divide$ifelse16)
@LCL //push local
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@RETURN
0;JMP

(Math.sqrt)
@3
D=A
(Math.sqrt_LOOP)
@Math.sqrt_END
D;JEQ
@SP
A=M
M=0
@SP
M=M+1
D=D-1
@Math.sqrt_LOOP
0;JMP
(Math.sqrt_END)

@ARG //push argument
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
D=M-D
M=-1
@lt166
D;JLT
@SP
A=M-1
M=0
(lt166)
@SP
AM=M-1
D=M
@Math.sqrt$if1
D;JNE
@Math.sqrt$ifelse1
0;JMP
(Math.sqrt$if1)
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@RETURN
0;JMP

(Math.sqrt$ifelse1)
@7  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL //pop local
D=M
@0
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL //pop local
D=M
@1
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
(Math.sqrt$while5)
@LCL //push local
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
D=M-D
M=-1
@lt167
D;JLT
@SP
A=M-1
M=0
(lt167)
@SP  //not
A=M-1
M=!M
@SP  //not
A=M-1
M=!M
@SP
AM=M-1
D=M
@Math.sqrt$whileend5
D;JNE
@LCL //push local
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@Math.0   //push static
D=M
@SP
A=M
M=D
@SP
M=M+1
@LCL //push local
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@SP  //pop pointer
AM=M-1
D=M
@THAT
M=D
@THAT    //push that
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@LCL //push local
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@Math.0   //push static
D=M
@SP
A=M
M=D
@SP
M=M+1
@LCL //push local
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@SP  //pop pointer
AM=M-1
D=M
@THAT
M=D
@THAT    //push that
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@2
D=A
@R14
M=D
@Math.multiply
D=A
@R13
M=D
@return946
D=A
@CALL
0;JMP
(return946)
@LCL //pop local
D=M
@2
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@LCL //push local
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
D=M-D
M=-1
@lt168
D;JLT
@SP
A=M-1
M=0
(lt168)
@LCL //push local
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG //push argument
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
D=M-D
M=-1
@gt169
D;JGT
@SP
A=M-1
M=0
(gt169)
@SP  //or
AM=M-1
D=M
A=A-1
M=D|M
@SP
AM=M-1
D=M
@Math.sqrt$if6
D;JNE
@Math.sqrt$ifelse6
0;JMP
(Math.sqrt$if6)
@Math.sqrt$ifend6
0;JMP
(Math.sqrt$ifelse6)
@LCL //push local
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@Math.0   //push static
D=M
@SP
A=M
M=D
@SP
M=M+1
@LCL //push local
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@SP  //pop pointer
AM=M-1
D=M
@THAT
M=D
@THAT    //push that
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@LCL //pop local
D=M
@1
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
(Math.sqrt$ifend6)
@LCL //push local
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //sub
AM=M-1
D=M
A=A-1
M=M-D
@LCL //pop local
D=M
@0
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@Math.sqrt$while5
0;JMP
(Math.sqrt$whileend5)
@LCL //push local
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@RETURN
0;JMP

(Math.max)
@0
D=A
(Math.max_LOOP)
@Math.max_END
D;JEQ
@SP
A=M
M=0
@SP
M=M+1
D=D-1
@Math.max_LOOP
0;JMP
(Math.max_END)

@ARG //push argument
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@Math.0   //push static
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
D=M-D
M=-1
@gt170
D;JGT
@SP
A=M-1
M=0
(gt170)
@SP
AM=M-1
D=M
@Math.max$if1
D;JNE
@Math.max$ifelse1
0;JMP
(Math.max$if1)
@ARG //push argument
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@RETURN
0;JMP

(Math.max$ifelse1)
@Math.0   //push static
D=M
@SP
A=M
M=D
@SP
M=M+1
@RETURN
0;JMP

(Math.min)
@0
D=A
(Math.min_LOOP)
@Math.min_END
D;JEQ
@SP
A=M
M=0
@SP
M=M+1
D=D-1
@Math.min_LOOP
0;JMP
(Math.min_END)

@ARG //push argument
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@Math.0   //push static
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
D=M-D
M=-1
@lt171
D;JLT
@SP
A=M-1
M=0
(lt171)
@SP
AM=M-1
D=M
@Math.min$if1
D;JNE
@Math.min$ifelse1
0;JMP
(Math.min$if1)
@ARG //push argument
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@RETURN
0;JMP

(Math.min$ifelse1)
@Math.0   //push static
D=M
@SP
A=M
M=D
@SP
M=M+1
@RETURN
0;JMP

