@256
D=A
@SP
M=D
@0
D=A
@R14
M=D
@Sys.init
D=A
@R13
M=D
@return0
D=A
@CALL
0;JMP
(return0)
(HALT)
@HALT
0;JMP
(RETURN)
@LCL
D=M
@R13
M=D
@R13
D=M
@5
A=D-A
D=M
@R14
M=D
@SP
A=M-1
D=M
@ARG
A=M
M=D
@ARG
D=M+1
@SP
M=D
@R13
AM=M-1
D=M
@THAT
M=D
@R13
AM=M-1
D=M
@THIS
M=D
@R13
AM=M-1
D=M
@ARG
M=D
@R13
AM=M-1
D=M
@LCL
M=D
@R14
A=M
0;JMP
(CALL)
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
@5
D=D-A
@R14
A=M
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@R13
A=M
0;JMP

(Int32.new)
@0
D=A
(Int32.new_LOOP)
@Int32.new_END
D;JEQ
@SP
A=M
M=0
@SP
M=M+1
D=D-1
@Int32.new_LOOP
0;JMP
(Int32.new_END)

@2  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@Memory.alloc
D=A
@R13
M=D
@return1
D=A
@CALL
0;JMP
(return1)
@SP  //pop pointer
AM=M-1
D=M
@THIS
M=D
@ARG //push argument
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS    //pop this
D=M
@0
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@ARG //push argument
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS    //pop this
D=M
@1
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@R3 //push pointer
D=M
@SP
A=M
M=D
@SP
M=M+1
@RETURN
0;JMP

(Int32.dispose)
@0
D=A
(Int32.dispose_LOOP)
@Int32.dispose_END
D;JEQ
@SP
A=M
M=0
@SP
M=M+1
D=D-1
@Int32.dispose_LOOP
0;JMP
(Int32.dispose_END)

@ARG //push argument
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //pop pointer
AM=M-1
D=M
@THIS
M=D
@R3 //push pointer
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@Memory.deAlloc
D=A
@R13
M=D
@return2
D=A
@CALL
0;JMP
(return2)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@RETURN
0;JMP

(Int32.diff)
@1
D=A
(Int32.diff_LOOP)
@Int32.diff_END
D;JEQ
@SP
A=M
M=0
@SP
M=M+1
D=D-1
@Int32.diff_LOOP
0;JMP
(Int32.diff_END)

@ARG //push argument
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //pop pointer
AM=M-1
D=M
@THIS
M=D
@ARG //push argument
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@Int32.getLow
D=A
@R13
M=D
@return3
D=A
@CALL
0;JMP
(return3)
@THIS    //push this
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //sub
AM=M-1
D=M
A=A-1
M=M-D
@LCL //pop local
D=M
@0
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@LCL //push local
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
D=M-D
M=-1
@lt0
D;JLT
@SP
A=M-1
M=0
(lt0)
@SP
AM=M-1
D=M
@Int32.diff$if1
D;JNE
@Int32.diff$ifelse1
0;JMP
(Int32.diff$if1)
@1  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //neg
A=M-1
M=-M
@RETURN
0;JMP

(Int32.diff$ifelse1)
@ARG //push argument
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@Int32.getLow
D=A
@R13
M=D
@return4
D=A
@CALL
0;JMP
(return4)
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
D=M-D
M=-1
@lt1
D;JLT
@SP
A=M-1
M=0
(lt1)
@THIS    //push this
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
D=M-D
M=-1
@lt2
D;JLT
@SP
A=M-1
M=0
(lt2)
@SP  //and
AM=M-1
D=M
A=A-1
M=D&M
@ARG //push argument
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@Int32.getHigh
D=A
@R13
M=D
@return5
D=A
@CALL
0;JMP
(return5)
@THIS    //push this
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
D=D-M
M=-1
@eq3
D;JEQ
@SP
A=M-1
M=0
(eq3)
@SP  //and
AM=M-1
D=M
A=A-1
M=D&M
@SP
AM=M-1
D=M
@Int32.diff$if4
D;JNE
@Int32.diff$ifelse4
0;JMP
(Int32.diff$if4)
@LCL //push local
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@RETURN
0;JMP

(Int32.diff$ifelse4)
@ARG //push argument
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@Int32.getLow
D=A
@R13
M=D
@return6
D=A
@CALL
0;JMP
(return6)
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
D=M-D
M=-1
@lt4
D;JLT
@SP
A=M-1
M=0
(lt4)
@SP  //not
A=M-1
M=!M
@THIS    //push this
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
D=M-D
M=-1
@lt5
D;JLT
@SP
A=M-1
M=0
(lt5)
@SP  //not
A=M-1
M=!M
@SP  //and
AM=M-1
D=M
A=A-1
M=D&M
@ARG //push argument
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@Int32.getHigh
D=A
@R13
M=D
@return7
D=A
@CALL
0;JMP
(return7)
@THIS    //push this
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
D=D-M
M=-1
@eq6
D;JEQ
@SP
A=M-1
M=0
(eq6)
@SP  //and
AM=M-1
D=M
A=A-1
M=D&M
@SP
AM=M-1
D=M
@Int32.diff$if7
D;JNE
@Int32.diff$ifelse7
0;JMP
(Int32.diff$if7)
@LCL //push local
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@RETURN
0;JMP

(Int32.diff$ifelse7)
@ARG //push argument
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@Int32.getLow
D=A
@R13
M=D
@return8
D=A
@CALL
0;JMP
(return8)
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
D=M-D
M=-1
@lt7
D;JLT
@SP
A=M-1
M=0
(lt7)
@THIS    //push this
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
D=M-D
M=-1
@lt8
D;JLT
@SP
A=M-1
M=0
(lt8)
@SP  //not
A=M-1
M=!M
@SP  //and
AM=M-1
D=M
A=A-1
M=D&M
@ARG //push argument
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@Int32.getHigh
D=A
@R13
M=D
@return9
D=A
@CALL
0;JMP
(return9)
@1  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@THIS    //push this
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
D=D-M
M=-1
@eq9
D;JEQ
@SP
A=M-1
M=0
(eq9)
@SP  //and
AM=M-1
D=M
A=A-1
M=D&M
@SP
AM=M-1
D=M
@Int32.diff$if10
D;JNE
@Int32.diff$ifelse10
0;JMP
(Int32.diff$if10)
@LCL //push local
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@RETURN
0;JMP

(Int32.diff$ifelse10)
@1  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //neg
A=M-1
M=-M
@RETURN
0;JMP

(Int32.getHigh)
@0
D=A
(Int32.getHigh_LOOP)
@Int32.getHigh_END
D;JEQ
@SP
A=M
M=0
@SP
M=M+1
D=D-1
@Int32.getHigh_LOOP
0;JMP
(Int32.getHigh_END)

@ARG //push argument
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //pop pointer
AM=M-1
D=M
@THIS
M=D
@THIS    //push this
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@RETURN
0;JMP

(Int32.getLow)
@0
D=A
(Int32.getLow_LOOP)
@Int32.getLow_END
D;JEQ
@SP
A=M
M=0
@SP
M=M+1
D=D-1
@Int32.getLow_LOOP
0;JMP
(Int32.getLow_END)

@ARG //push argument
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //pop pointer
AM=M-1
D=M
@THIS
M=D
@THIS    //push this
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@RETURN
0;JMP

(Int32.add)
@1
D=A
(Int32.add_LOOP)
@Int32.add_END
D;JEQ
@SP
A=M
M=0
@SP
M=M+1
D=D-1
@Int32.add_LOOP
0;JMP
(Int32.add_END)

@ARG //push argument
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //pop pointer
AM=M-1
D=M
@THIS
M=D
@ARG //push argument
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS    //push this
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@LCL //pop local
D=M
@0
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@ARG //push argument
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
D=M-D
M=-1
@lt10
D;JLT
@SP
A=M-1
M=0
(lt10)
@THIS    //push this
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
D=M-D
M=-1
@lt11
D;JLT
@SP
A=M-1
M=0
(lt11)
@SP  //and
AM=M-1
D=M
A=A-1
M=D&M
@SP
AM=M-1
D=M
@Int32.add$if1
D;JNE
@Int32.add$ifelse1
0;JMP
(Int32.add$if1)
@LCL //push local
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS    //pop this
D=M
@1
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@THIS    //push this
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@THIS    //pop this
D=M
@0
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@RETURN
0;JMP

(Int32.add$ifelse1)
@ARG //push argument
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
D=M-D
M=-1
@lt12
D;JLT
@SP
A=M-1
M=0
(lt12)
@SP  //not
A=M-1
M=!M
@THIS    //push this
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
D=M-D
M=-1
@lt13
D;JLT
@SP
A=M-1
M=0
(lt13)
@SP  //not
A=M-1
M=!M
@SP  //and
AM=M-1
D=M
A=A-1
M=D&M
@SP
AM=M-1
D=M
@Int32.add$if4
D;JNE
@Int32.add$ifelse4
0;JMP
(Int32.add$if4)
@LCL //push local
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS    //pop this
D=M
@1
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@RETURN
0;JMP

(Int32.add$ifelse4)
@LCL //push local
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
D=M-D
M=-1
@lt14
D;JLT
@SP
A=M-1
M=0
(lt14)
@SP
AM=M-1
D=M
@Int32.add$if7
D;JNE
@Int32.add$ifelse7
0;JMP
(Int32.add$if7)
@LCL //push local
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS    //pop this
D=M
@1
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@RETURN
0;JMP

(Int32.add$ifelse7)
@LCL //push local
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS    //pop this
D=M
@1
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@THIS    //push this
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@THIS    //pop this
D=M
@0
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@RETURN
0;JMP

(Int32.print)
@0
D=A
(Int32.print_LOOP)
@Int32.print_END
D;JEQ
@SP
A=M
M=0
@SP
M=M+1
D=D-1
@Int32.print_LOOP
0;JMP
(Int32.print_END)

@ARG //push argument
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //pop pointer
AM=M-1
D=M
@THIS
M=D
@THIS    //push this
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@Math.getHigh
D=A
@R13
M=D
@return10
D=A
@CALL
0;JMP
(return10)
@1
D=A
@R14
M=D
@Output.printHex8
D=A
@R13
M=D
@return11
D=A
@CALL
0;JMP
(return11)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@THIS    //push this
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@Math.getLow
D=A
@R13
M=D
@return12
D=A
@CALL
0;JMP
(return12)
@1
D=A
@R14
M=D
@Output.printHex8
D=A
@R13
M=D
@return13
D=A
@CALL
0;JMP
(return13)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@THIS    //push this
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@Math.getHigh
D=A
@R13
M=D
@return14
D=A
@CALL
0;JMP
(return14)
@1
D=A
@R14
M=D
@Output.printHex8
D=A
@R13
M=D
@return15
D=A
@CALL
0;JMP
(return15)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@THIS    //push this
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@Math.getLow
D=A
@R13
M=D
@return16
D=A
@CALL
0;JMP
(return16)
@1
D=A
@R14
M=D
@Output.printHex8
D=A
@R13
M=D
@return17
D=A
@CALL
0;JMP
(return17)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@RETURN
0;JMP

(List.new)
@0
D=A
(List.new_LOOP)
@List.new_END
D;JEQ
@SP
A=M
M=0
@SP
M=M+1
D=D-1
@List.new_LOOP
0;JMP
(List.new_END)

@2  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@Memory.alloc
D=A
@R13
M=D
@return18
D=A
@CALL
0;JMP
(return18)
@SP  //pop pointer
AM=M-1
D=M
@THIS
M=D
@ARG //push argument
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS    //pop this
D=M
@0
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@ARG //push argument
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS    //pop this
D=M
@1
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@R3 //push pointer
D=M
@SP
A=M
M=D
@SP
M=M+1
@RETURN
0;JMP

(List.dispose)
@0
D=A
(List.dispose_LOOP)
@List.dispose_END
D;JEQ
@SP
A=M
M=0
@SP
M=M+1
D=D-1
@List.dispose_LOOP
0;JMP
(List.dispose_END)

@ARG //push argument
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //pop pointer
AM=M-1
D=M
@THIS
M=D
@THIS    //push this
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
D=D-M
M=-1
@eq15
D;JEQ
@SP
A=M-1
M=0
(eq15)
@SP  //not
A=M-1
M=!M
@SP
AM=M-1
D=M
@List.dispose$if1
D;JNE
@List.dispose$ifelse1
0;JMP
(List.dispose$if1)
@THIS    //push this
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@List.dispose
D=A
@R13
M=D
@return19
D=A
@CALL
0;JMP
(return19)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
(List.dispose$ifelse1)
@R3 //push pointer
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@Memory.deAlloc
D=A
@R13
M=D
@return20
D=A
@CALL
0;JMP
(return20)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@RETURN
0;JMP

(List.getData)
@0
D=A
(List.getData_LOOP)
@List.getData_END
D;JEQ
@SP
A=M
M=0
@SP
M=M+1
D=D-1
@List.getData_LOOP
0;JMP
(List.getData_END)

@ARG //push argument
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //pop pointer
AM=M-1
D=M
@THIS
M=D
@THIS    //push this
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@RETURN
0;JMP

(List.getNext)
@0
D=A
(List.getNext_LOOP)
@List.getNext_END
D;JEQ
@SP
A=M
M=0
@SP
M=M+1
D=D-1
@List.getNext_LOOP
0;JMP
(List.getNext_END)

@ARG //push argument
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //pop pointer
AM=M-1
D=M
@THIS
M=D
@THIS    //push this
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@RETURN
0;JMP

(List.pop)
@2
D=A
(List.pop_LOOP)
@List.pop_END
D;JEQ
@SP
A=M
M=0
@SP
M=M+1
D=D-1
@List.pop_LOOP
0;JMP
(List.pop_END)

@ARG //push argument
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //pop pointer
AM=M-1
D=M
@THIS
M=D
@THIS    //push this
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@LCL //pop local
D=M
@0
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@THIS    //push this
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@LCL //pop local
D=M
@1
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@LCL //push local
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@String.dispose
D=A
@R13
M=D
@return21
D=A
@CALL
0;JMP
(return21)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@R3 //push pointer
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@Memory.deAlloc
D=A
@R13
M=D
@return22
D=A
@CALL
0;JMP
(return22)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@LCL //push local
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@RETURN
0;JMP

(List.getLength)
@1
D=A
(List.getLength_LOOP)
@List.getLength_END
D;JEQ
@SP
A=M
M=0
@SP
M=M+1
D=D-1
@List.getLength_LOOP
0;JMP
(List.getLength_END)

@ARG //push argument
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
D=D-M
M=-1
@eq16
D;JEQ
@SP
A=M-1
M=0
(eq16)
@SP
AM=M-1
D=M
@List.getLength$if1
D;JNE
@List.getLength$ifelse1
0;JMP
(List.getLength$if1)
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@RETURN
0;JMP

(List.getLength$ifelse1)
@ARG //push argument
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@List.getData
D=A
@R13
M=D
@return23
D=A
@CALL
0;JMP
(return23)
@LCL //pop local
D=M
@0
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@LCL //push local
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@String.length
D=A
@R13
M=D
@return24
D=A
@CALL
0;JMP
(return24)
@ARG //push argument
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@List.getNext
D=A
@R13
M=D
@return25
D=A
@CALL
0;JMP
(return25)
@1
D=A
@R14
M=D
@List.getLength
D=A
@R13
M=D
@return26
D=A
@CALL
0;JMP
(return26)
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@RETURN
0;JMP

(List.remove)
@1
D=A
(List.remove_LOOP)
@List.remove_END
D;JEQ
@SP
A=M
M=0
@SP
M=M+1
D=D-1
@List.remove_LOOP
0;JMP
(List.remove_END)

@ARG //push argument
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
D=D-M
M=-1
@eq17
D;JEQ
@SP
A=M-1
M=0
(eq17)
@SP
AM=M-1
D=M
@List.remove$if1
D;JNE
@List.remove$ifelse1
0;JMP
(List.remove$if1)
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@RETURN
0;JMP

(List.remove$ifelse1)
@ARG //push argument
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@List.getData
D=A
@R13
M=D
@return27
D=A
@CALL
0;JMP
(return27)
@ARG //push argument
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
D=D-M
M=-1
@eq18
D;JEQ
@SP
A=M-1
M=0
(eq18)
@SP
AM=M-1
D=M
@List.remove$if4
D;JNE
@List.remove$ifelse4
0;JMP
(List.remove$if4)
@ARG //push argument
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG //push argument
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@List.getNext
D=A
@R13
M=D
@return28
D=A
@CALL
0;JMP
(return28)
@2
D=A
@R14
M=D
@List.remove
D=A
@R13
M=D
@return29
D=A
@CALL
0;JMP
(return29)
@LCL //pop local
D=M
@0
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@List.remove$ifend4
0;JMP
(List.remove$ifelse4)
@ARG //push argument
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@List.getData
D=A
@R13
M=D
@return30
D=A
@CALL
0;JMP
(return30)
@ARG //push argument
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG //push argument
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@List.getNext
D=A
@R13
M=D
@return31
D=A
@CALL
0;JMP
(return31)
@2
D=A
@R14
M=D
@List.remove
D=A
@R13
M=D
@return32
D=A
@CALL
0;JMP
(return32)
@2
D=A
@R14
M=D
@List.new
D=A
@R13
M=D
@return33
D=A
@CALL
0;JMP
(return33)
@LCL //pop local
D=M
@0
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
(List.remove$ifend4)
@ARG //push argument
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@Memory.deAlloc
D=A
@R13
M=D
@return34
D=A
@CALL
0;JMP
(return34)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@LCL //push local
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@RETURN
0;JMP

(List.append)
@0
D=A
(List.append_LOOP)
@List.append_END
D;JEQ
@SP
A=M
M=0
@SP
M=M+1
D=D-1
@List.append_LOOP
0;JMP
(List.append_END)

@ARG //push argument
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //pop pointer
AM=M-1
D=M
@THIS
M=D
@THIS    //push this
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
D=D-M
M=-1
@eq19
D;JEQ
@SP
A=M-1
M=0
(eq19)
@SP
AM=M-1
D=M
@List.append$if1
D;JNE
@List.append$ifelse1
0;JMP
(List.append$if1)
@ARG //push argument
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@List.new
D=A
@R13
M=D
@return35
D=A
@CALL
0;JMP
(return35)
@THIS    //pop this
D=M
@1
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@RETURN
0;JMP

(List.append$ifelse1)
@THIS    //push this
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG //push argument
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@List.append
D=A
@R13
M=D
@return36
D=A
@CALL
0;JMP
(return36)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@RETURN
0;JMP

(Address.new)
@0
D=A
(Address.new_LOOP)
@Address.new_END
D;JEQ
@SP
A=M
M=0
@SP
M=M+1
D=D-1
@Address.new_LOOP
0;JMP
(Address.new_END)

@2  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@Memory.alloc
D=A
@R13
M=D
@return37
D=A
@CALL
0;JMP
(return37)
@SP  //pop pointer
AM=M-1
D=M
@THIS
M=D
@4  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@Array.new
D=A
@R13
M=D
@return38
D=A
@CALL
0;JMP
(return38)
@THIS    //pop this
D=M
@0
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@THIS    //push this
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@ARG //push argument
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@SP  //pop pointer
AM=M-1
D=M
@THAT
M=D
@THAT    //push that
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@SP  //pop pointer
AM=M-1
D=M
@THAT
M=D
@R5 //push temp
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT    //pop that
D=M
@0
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@1  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@THIS    //push this
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@ARG //push argument
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@SP  //pop pointer
AM=M-1
D=M
@THAT
M=D
@THAT    //push that
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@SP  //pop pointer
AM=M-1
D=M
@THAT
M=D
@R5 //push temp
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT    //pop that
D=M
@0
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@2  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@THIS    //push this
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@ARG //push argument
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@2  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@SP  //pop pointer
AM=M-1
D=M
@THAT
M=D
@THAT    //push that
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@SP  //pop pointer
AM=M-1
D=M
@THAT
M=D
@R5 //push temp
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT    //pop that
D=M
@0
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@3  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@THIS    //push this
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@ARG //push argument
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@3  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@SP  //pop pointer
AM=M-1
D=M
@THAT
M=D
@THAT    //push that
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@SP  //pop pointer
AM=M-1
D=M
@THAT
M=D
@R5 //push temp
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT    //pop that
D=M
@0
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@6  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@Array.new
D=A
@R13
M=D
@return39
D=A
@CALL
0;JMP
(return39)
@THIS    //pop this
D=M
@1
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@THIS    //push this
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@ARG //push argument
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@SP  //pop pointer
AM=M-1
D=M
@THAT
M=D
@THAT    //push that
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@SP  //pop pointer
AM=M-1
D=M
@THAT
M=D
@R5 //push temp
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT    //pop that
D=M
@0
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@1  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@THIS    //push this
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@ARG //push argument
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@SP  //pop pointer
AM=M-1
D=M
@THAT
M=D
@THAT    //push that
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@SP  //pop pointer
AM=M-1
D=M
@THAT
M=D
@R5 //push temp
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT    //pop that
D=M
@0
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@2  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@THIS    //push this
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@ARG //push argument
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@2  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@SP  //pop pointer
AM=M-1
D=M
@THAT
M=D
@THAT    //push that
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@SP  //pop pointer
AM=M-1
D=M
@THAT
M=D
@R5 //push temp
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT    //pop that
D=M
@0
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@3  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@THIS    //push this
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@ARG //push argument
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@3  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@SP  //pop pointer
AM=M-1
D=M
@THAT
M=D
@THAT    //push that
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@SP  //pop pointer
AM=M-1
D=M
@THAT
M=D
@R5 //push temp
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT    //pop that
D=M
@0
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@4  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@THIS    //push this
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@ARG //push argument
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@4  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@SP  //pop pointer
AM=M-1
D=M
@THAT
M=D
@THAT    //push that
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@SP  //pop pointer
AM=M-1
D=M
@THAT
M=D
@R5 //push temp
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT    //pop that
D=M
@0
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@5  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@THIS    //push this
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@ARG //push argument
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@5  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@SP  //pop pointer
AM=M-1
D=M
@THAT
M=D
@THAT    //push that
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@SP  //pop pointer
AM=M-1
D=M
@THAT
M=D
@R5 //push temp
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT    //pop that
D=M
@0
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@R3 //push pointer
D=M
@SP
A=M
M=D
@SP
M=M+1
@RETURN
0;JMP

(Address.dispose)
@0
D=A
(Address.dispose_LOOP)
@Address.dispose_END
D;JEQ
@SP
A=M
M=0
@SP
M=M+1
D=D-1
@Address.dispose_LOOP
0;JMP
(Address.dispose_END)

@ARG //push argument
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //pop pointer
AM=M-1
D=M
@THIS
M=D
@THIS    //push this
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@Array.dispose
D=A
@R13
M=D
@return40
D=A
@CALL
0;JMP
(return40)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@THIS    //push this
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@Array.dispose
D=A
@R13
M=D
@return41
D=A
@CALL
0;JMP
(return41)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@R3 //push pointer
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@Memory.deAlloc
D=A
@R13
M=D
@return42
D=A
@CALL
0;JMP
(return42)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@RETURN
0;JMP

(Address.isIP)
@1
D=A
(Address.isIP_LOOP)
@Address.isIP_END
D;JEQ
@SP
A=M
M=0
@SP
M=M+1
D=D-1
@Address.isIP_LOOP
0;JMP
(Address.isIP_END)

@ARG //push argument
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //pop pointer
AM=M-1
D=M
@THIS
M=D
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL //pop local
D=M
@0
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
(Address.isIP$while2)
@LCL //push local
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@4  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
D=M-D
M=-1
@lt20
D;JLT
@SP
A=M-1
M=0
(lt20)
@SP  //not
A=M-1
M=!M
@SP
AM=M-1
D=M
@Address.isIP$whileend2
D;JNE
@THIS    //push this
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@LCL //push local
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@SP  //pop pointer
AM=M-1
D=M
@THAT
M=D
@THAT    //push that
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG //push argument
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@LCL //push local
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@SP  //pop pointer
AM=M-1
D=M
@THAT
M=D
@THAT    //push that
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
D=D-M
M=-1
@eq21
D;JEQ
@SP
A=M-1
M=0
(eq21)
@SP  //not
A=M-1
M=!M
@SP
AM=M-1
D=M
@Address.isIP$if3
D;JNE
@Address.isIP$ifelse3
0;JMP
(Address.isIP$if3)
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@RETURN
0;JMP

(Address.isIP$ifelse3)
@LCL //push local
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@LCL //pop local
D=M
@0
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@Address.isIP$while2
0;JMP
(Address.isIP$whileend2)
@1  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //neg
A=M-1
M=-M
@RETURN
0;JMP

(Address.getMAC)
@0
D=A
(Address.getMAC_LOOP)
@Address.getMAC_END
D;JEQ
@SP
A=M
M=0
@SP
M=M+1
D=D-1
@Address.getMAC_LOOP
0;JMP
(Address.getMAC_END)

@ARG //push argument
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //pop pointer
AM=M-1
D=M
@THIS
M=D
@THIS    //push this
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@RETURN
0;JMP

(Address.setMAC)
@0
D=A
(Address.setMAC_LOOP)
@Address.setMAC_END
D;JEQ
@SP
A=M
M=0
@SP
M=M+1
D=D-1
@Address.setMAC_LOOP
0;JMP
(Address.setMAC_END)

@ARG //push argument
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //pop pointer
AM=M-1
D=M
@THIS
M=D
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@THIS    //push this
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@ARG //push argument
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@SP  //pop pointer
AM=M-1
D=M
@THAT
M=D
@THAT    //push that
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@SP  //pop pointer
AM=M-1
D=M
@THAT
M=D
@R5 //push temp
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT    //pop that
D=M
@0
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@1  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@THIS    //push this
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@ARG //push argument
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@SP  //pop pointer
AM=M-1
D=M
@THAT
M=D
@THAT    //push that
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@SP  //pop pointer
AM=M-1
D=M
@THAT
M=D
@R5 //push temp
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT    //pop that
D=M
@0
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@2  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@THIS    //push this
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@ARG //push argument
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@2  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@SP  //pop pointer
AM=M-1
D=M
@THAT
M=D
@THAT    //push that
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@SP  //pop pointer
AM=M-1
D=M
@THAT
M=D
@R5 //push temp
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT    //pop that
D=M
@0
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@3  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@THIS    //push this
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@ARG //push argument
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@3  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@SP  //pop pointer
AM=M-1
D=M
@THAT
M=D
@THAT    //push that
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@SP  //pop pointer
AM=M-1
D=M
@THAT
M=D
@R5 //push temp
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT    //pop that
D=M
@0
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@4  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@THIS    //push this
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@ARG //push argument
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@4  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@SP  //pop pointer
AM=M-1
D=M
@THAT
M=D
@THAT    //push that
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@SP  //pop pointer
AM=M-1
D=M
@THAT
M=D
@R5 //push temp
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT    //pop that
D=M
@0
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@5  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@THIS    //push this
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@ARG //push argument
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@5  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@SP  //pop pointer
AM=M-1
D=M
@THAT
M=D
@THAT    //push that
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@SP  //pop pointer
AM=M-1
D=M
@THAT
M=D
@R5 //push temp
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT    //pop that
D=M
@0
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@RETURN
0;JMP

(Address.print)
@0
D=A
(Address.print_LOOP)
@Address.print_END
D;JEQ
@SP
A=M
M=0
@SP
M=M+1
D=D-1
@Address.print_LOOP
0;JMP
(Address.print_END)

@ARG //push argument
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //pop pointer
AM=M-1
D=M
@THIS
M=D
@THIS    //push this
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@Address.printIP
D=A
@R13
M=D
@return43
D=A
@CALL
0;JMP
(return43)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@32  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@Output.printChar
D=A
@R13
M=D
@return44
D=A
@CALL
0;JMP
(return44)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@THIS    //push this
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@Address.printMAC
D=A
@R13
M=D
@return45
D=A
@CALL
0;JMP
(return45)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@RETURN
0;JMP

(Address.printMAC)
@0
D=A
(Address.printMAC_LOOP)
@Address.printMAC_END
D;JEQ
@SP
A=M
M=0
@SP
M=M+1
D=D-1
@Address.printMAC_LOOP
0;JMP
(Address.printMAC_END)

@ARG //push argument
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@SP  //pop pointer
AM=M-1
D=M
@THAT
M=D
@THAT    //push that
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@Output.printHex8
D=A
@R13
M=D
@return46
D=A
@CALL
0;JMP
(return46)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@58  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@Output.printChar
D=A
@R13
M=D
@return47
D=A
@CALL
0;JMP
(return47)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@ARG //push argument
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@SP  //pop pointer
AM=M-1
D=M
@THAT
M=D
@THAT    //push that
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@Output.printHex8
D=A
@R13
M=D
@return48
D=A
@CALL
0;JMP
(return48)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@58  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@Output.printChar
D=A
@R13
M=D
@return49
D=A
@CALL
0;JMP
(return49)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@ARG //push argument
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@2  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@SP  //pop pointer
AM=M-1
D=M
@THAT
M=D
@THAT    //push that
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@Output.printHex8
D=A
@R13
M=D
@return50
D=A
@CALL
0;JMP
(return50)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@58  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@Output.printChar
D=A
@R13
M=D
@return51
D=A
@CALL
0;JMP
(return51)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@ARG //push argument
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@3  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@SP  //pop pointer
AM=M-1
D=M
@THAT
M=D
@THAT    //push that
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@Output.printHex8
D=A
@R13
M=D
@return52
D=A
@CALL
0;JMP
(return52)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@58  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@Output.printChar
D=A
@R13
M=D
@return53
D=A
@CALL
0;JMP
(return53)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@ARG //push argument
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@4  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@SP  //pop pointer
AM=M-1
D=M
@THAT
M=D
@THAT    //push that
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@Output.printHex8
D=A
@R13
M=D
@return54
D=A
@CALL
0;JMP
(return54)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@58  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@Output.printChar
D=A
@R13
M=D
@return55
D=A
@CALL
0;JMP
(return55)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@ARG //push argument
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@5  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@SP  //pop pointer
AM=M-1
D=M
@THAT
M=D
@THAT    //push that
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@Output.printHex8
D=A
@R13
M=D
@return56
D=A
@CALL
0;JMP
(return56)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@RETURN
0;JMP

(Address.printIP)
@0
D=A
(Address.printIP_LOOP)
@Address.printIP_END
D;JEQ
@SP
A=M
M=0
@SP
M=M+1
D=D-1
@Address.printIP_LOOP
0;JMP
(Address.printIP_END)

@ARG //push argument
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@SP  //pop pointer
AM=M-1
D=M
@THAT
M=D
@THAT    //push that
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@Output.printInt
D=A
@R13
M=D
@return57
D=A
@CALL
0;JMP
(return57)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@46  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@Output.printChar
D=A
@R13
M=D
@return58
D=A
@CALL
0;JMP
(return58)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@ARG //push argument
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@SP  //pop pointer
AM=M-1
D=M
@THAT
M=D
@THAT    //push that
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@Output.printInt
D=A
@R13
M=D
@return59
D=A
@CALL
0;JMP
(return59)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@46  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@Output.printChar
D=A
@R13
M=D
@return60
D=A
@CALL
0;JMP
(return60)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@ARG //push argument
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@2  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@SP  //pop pointer
AM=M-1
D=M
@THAT
M=D
@THAT    //push that
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@Output.printInt
D=A
@R13
M=D
@return61
D=A
@CALL
0;JMP
(return61)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@46  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@Output.printChar
D=A
@R13
M=D
@return62
D=A
@CALL
0;JMP
(return62)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@ARG //push argument
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@3  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@SP  //pop pointer
AM=M-1
D=M
@THAT
M=D
@THAT    //push that
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@Output.printInt
D=A
@R13
M=D
@return63
D=A
@CALL
0;JMP
(return63)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@RETURN
0;JMP

(Echo.processMessage)
@1
D=A
(Echo.processMessage_LOOP)
@Echo.processMessage_END
D;JEQ
@SP
A=M
M=0
@SP
M=M+1
D=D-1
@Echo.processMessage_LOOP
0;JMP
(Echo.processMessage_END)

@ARG //push argument
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@4  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@String.new
D=A
@R13
M=D
@return64
D=A
@CALL
0;JMP
(return64)
@113  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return65
D=A
@CALL
0;JMP
(return65)
@117  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return66
D=A
@CALL
0;JMP
(return66)
@105  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return67
D=A
@CALL
0;JMP
(return67)
@116  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return68
D=A
@CALL
0;JMP
(return68)
@2
D=A
@R14
M=D
@Array.startsWith
D=A
@R13
M=D
@return69
D=A
@CALL
0;JMP
(return69)
@SP
AM=M-1
D=M
@Echo.processMessage$if1
D;JNE
@Echo.processMessage$ifelse1
0;JMP
(Echo.processMessage$if1)
@ARG //push argument
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@Socket.close
D=A
@R13
M=D
@return70
D=A
@CALL
0;JMP
(return70)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@Echo.processMessage$ifend1
0;JMP
(Echo.processMessage$ifelse1)
@ARG //push argument
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@1
D=A
@R14
M=D
@String.new
D=A
@R13
M=D
@return71
D=A
@CALL
0;JMP
(return71)
@LCL //pop local
D=M
@0
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@LCL //push local
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@62  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return72
D=A
@CALL
0;JMP
(return72)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@LCL //push local
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG //push argument
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG //push argument
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@3
D=A
@R14
M=D
@String.appendArray
D=A
@R13
M=D
@return73
D=A
@CALL
0;JMP
(return73)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@ARG //push argument
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@LCL //push local
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@Socket.write
D=A
@R13
M=D
@return74
D=A
@CALL
0;JMP
(return74)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
(Echo.processMessage$ifend1)
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@RETURN
0;JMP

(Screen.init)
@0
D=A
(Screen.init_LOOP)
@Screen.init_END
D;JEQ
@SP
A=M
M=0
@SP
M=M+1
D=D-1
@Screen.init_LOOP
0;JMP
(Screen.init_END)

@ARG //push argument
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //pop static
AM=M-1
D=M
@Screen.0
M=D
@1  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //neg
A=M-1
M=-M
@SP  //pop static
AM=M-1
D=M
@Screen.1
M=D
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //pop static
AM=M-1
D=M
@Screen.2
M=D
@54  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@Screen.writeCommand
D=A
@R13
M=D
@return75
D=A
@CALL
0;JMP
(return75)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@72  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@Screen.writeData
D=A
@R13
M=D
@return76
D=A
@CALL
0;JMP
(return76)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@58  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@Screen.writeCommand
D=A
@R13
M=D
@return77
D=A
@CALL
0;JMP
(return77)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@85  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@Screen.writeData
D=A
@R13
M=D
@return78
D=A
@CALL
0;JMP
(return78)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@17  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@Screen.writeCommand
D=A
@R13
M=D
@return79
D=A
@CALL
0;JMP
(return79)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@500  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@Sys.wait
D=A
@R13
M=D
@return80
D=A
@CALL
0;JMP
(return80)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@41  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@Screen.writeCommand
D=A
@R13
M=D
@return81
D=A
@CALL
0;JMP
(return81)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@500  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@Sys.wait
D=A
@R13
M=D
@return82
D=A
@CALL
0;JMP
(return82)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@0
D=A
@R14
M=D
@Screen.clearScreen
D=A
@R13
M=D
@return83
D=A
@CALL
0;JMP
(return83)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@RETURN
0;JMP

(Screen.clearScreen)
@1
D=A
(Screen.clearScreen_LOOP)
@Screen.clearScreen_END
D;JEQ
@SP
A=M
M=0
@SP
M=M+1
D=D-1
@Screen.clearScreen_LOOP
0;JMP
(Screen.clearScreen_END)

@Screen.1   //push static
D=M
@SP
A=M
M=D
@SP
M=M+1
@LCL //pop local
D=M
@0
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@Screen.2   //push static
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //pop static
AM=M-1
D=M
@Screen.1
M=D
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@240  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@320  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@4
D=A
@R14
M=D
@Screen.drawRectangle
D=A
@R13
M=D
@return84
D=A
@CALL
0;JMP
(return84)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@LCL //push local
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //pop static
AM=M-1
D=M
@Screen.1
M=D
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@RETURN
0;JMP

(Screen.drawPixel)
@0
D=A
(Screen.drawPixel_LOOP)
@Screen.drawPixel_END
D;JEQ
@SP
A=M
M=0
@SP
M=M+1
D=D-1
@Screen.drawPixel_LOOP
0;JMP
(Screen.drawPixel_END)

@ARG //push argument
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
D=M-D
M=-1
@lt22
D;JLT
@SP
A=M-1
M=0
(lt22)
@ARG //push argument
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@239  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
D=M-D
M=-1
@gt23
D;JGT
@SP
A=M-1
M=0
(gt23)
@SP  //or
AM=M-1
D=M
A=A-1
M=D|M
@ARG //push argument
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
D=M-D
M=-1
@lt24
D;JLT
@SP
A=M-1
M=0
(lt24)
@SP  //or
AM=M-1
D=M
A=A-1
M=D|M
@ARG //push argument
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@319  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
D=M-D
M=-1
@gt25
D;JGT
@SP
A=M-1
M=0
(gt25)
@SP  //or
AM=M-1
D=M
A=A-1
M=D|M
@SP
AM=M-1
D=M
@Screen.drawPixel$if1
D;JNE
@Screen.drawPixel$ifelse1
0;JMP
(Screen.drawPixel$if1)
@7  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@Sys.error
D=A
@R13
M=D
@return85
D=A
@CALL
0;JMP
(return85)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
(Screen.drawPixel$ifelse1)
@42  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@Screen.writeCommand
D=A
@R13
M=D
@return86
D=A
@CALL
0;JMP
(return86)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@ARG //push argument
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@Screen.writeData16
D=A
@R13
M=D
@return87
D=A
@CALL
0;JMP
(return87)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@ARG //push argument
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@Screen.writeData16
D=A
@R13
M=D
@return88
D=A
@CALL
0;JMP
(return88)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@43  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@Screen.writeCommand
D=A
@R13
M=D
@return89
D=A
@CALL
0;JMP
(return89)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@ARG //push argument
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@Screen.writeData16
D=A
@R13
M=D
@return90
D=A
@CALL
0;JMP
(return90)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@ARG //push argument
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@Screen.writeData16
D=A
@R13
M=D
@return91
D=A
@CALL
0;JMP
(return91)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@44  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@Screen.writeCommand
D=A
@R13
M=D
@return92
D=A
@CALL
0;JMP
(return92)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@Screen.1   //push static
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@Screen.writeData16
D=A
@R13
M=D
@return93
D=A
@CALL
0;JMP
(return93)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@RETURN
0;JMP

(Screen.setColor)
@0
D=A
(Screen.setColor_LOOP)
@Screen.setColor_END
D;JEQ
@SP
A=M
M=0
@SP
M=M+1
D=D-1
@Screen.setColor_LOOP
0;JMP
(Screen.setColor_END)

@ARG //push argument
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //pop static
AM=M-1
D=M
@Screen.1
M=D
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@RETURN
0;JMP

(Screen.setBackColor)
@0
D=A
(Screen.setBackColor_LOOP)
@Screen.setBackColor_END
D;JEQ
@SP
A=M
M=0
@SP
M=M+1
D=D-1
@Screen.setBackColor_LOOP
0;JMP
(Screen.setBackColor_END)

@ARG //push argument
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //pop static
AM=M-1
D=M
@Screen.2
M=D
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@RETURN
0;JMP

(Screen.paintPixel)
@0
D=A
(Screen.paintPixel_LOOP)
@Screen.paintPixel_END
D;JEQ
@SP
A=M
M=0
@SP
M=M+1
D=D-1
@Screen.paintPixel_LOOP
0;JMP
(Screen.paintPixel_END)

@Screen.1   //push static
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@Screen.writeData16
D=A
@R13
M=D
@return94
D=A
@CALL
0;JMP
(return94)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@RETURN
0;JMP

(Screen.clearPixel)
@0
D=A
(Screen.clearPixel_LOOP)
@Screen.clearPixel_END
D;JEQ
@SP
A=M
M=0
@SP
M=M+1
D=D-1
@Screen.clearPixel_LOOP
0;JMP
(Screen.clearPixel_END)

@Screen.2   //push static
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@Screen.writeData16
D=A
@R13
M=D
@return95
D=A
@CALL
0;JMP
(return95)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@RETURN
0;JMP

(Screen.drawLine)
@4
D=A
(Screen.drawLine_LOOP)
@Screen.drawLine_END
D;JEQ
@SP
A=M
M=0
@SP
M=M+1
D=D-1
@Screen.drawLine_LOOP
0;JMP
(Screen.drawLine_END)

@ARG //push argument
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG //push argument
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //sub
AM=M-1
D=M
A=A-1
M=M-D
@LCL //pop local
D=M
@0
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@ARG //push argument
D=M
@3
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG //push argument
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //sub
AM=M-1
D=M
A=A-1
M=M-D
@LCL //pop local
D=M
@1
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@LCL //push local
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
D=M-D
M=-1
@lt26
D;JLT
@SP
A=M-1
M=0
(lt26)
@SP
AM=M-1
D=M
@Screen.drawLine$if1
D;JNE
@Screen.drawLine$ifelse1
0;JMP
(Screen.drawLine$if1)
@1  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //neg
A=M-1
M=-M
@LCL //pop local
D=M
@2
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@Screen.drawLine$ifend1
0;JMP
(Screen.drawLine$ifelse1)
@1  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL //pop local
D=M
@2
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
(Screen.drawLine$ifend1)
@LCL //push local
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
D=M-D
M=-1
@lt27
D;JLT
@SP
A=M-1
M=0
(lt27)
@SP
AM=M-1
D=M
@Screen.drawLine$if6
D;JNE
@Screen.drawLine$ifelse6
0;JMP
(Screen.drawLine$if6)
@1  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //neg
A=M-1
M=-M
@LCL //pop local
D=M
@3
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@Screen.drawLine$ifend6
0;JMP
(Screen.drawLine$ifelse6)
@1  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL //pop local
D=M
@3
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
(Screen.drawLine$ifend6)
@LCL //push local
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
D=D-M
M=-1
@eq28
D;JEQ
@SP
A=M-1
M=0
(eq28)
@SP
AM=M-1
D=M
@Screen.drawLine$if11
D;JNE
@Screen.drawLine$ifelse11
0;JMP
(Screen.drawLine$if11)
(Screen.drawLine$while13)
@ARG //push argument
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG //push argument
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
D=D-M
M=-1
@eq29
D;JEQ
@SP
A=M-1
M=0
(eq29)
@SP  //not
A=M-1
M=!M
@SP  //not
A=M-1
M=!M
@SP
AM=M-1
D=M
@Screen.drawLine$whileend13
D;JNE
@ARG //push argument
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG //push argument
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@Screen.drawPixel
D=A
@R13
M=D
@return96
D=A
@CALL
0;JMP
(return96)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@ARG //push argument
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@LCL //push local
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@ARG //pop argument
D=M
@0
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@Screen.drawLine$while13
0;JMP
(Screen.drawLine$whileend13)
@ARG //push argument
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG //push argument
D=M
@3
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@Screen.drawPixel
D=A
@R13
M=D
@return97
D=A
@CALL
0;JMP
(return97)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@RETURN
0;JMP

(Screen.drawLine$ifelse11)
@LCL //push local
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
D=D-M
M=-1
@eq30
D;JEQ
@SP
A=M-1
M=0
(eq30)
@SP
AM=M-1
D=M
@Screen.drawLine$if22
D;JNE
@Screen.drawLine$ifelse22
0;JMP
(Screen.drawLine$if22)
(Screen.drawLine$while24)
@ARG //push argument
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG //push argument
D=M
@3
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
D=D-M
M=-1
@eq31
D;JEQ
@SP
A=M-1
M=0
(eq31)
@SP  //not
A=M-1
M=!M
@SP  //not
A=M-1
M=!M
@SP
AM=M-1
D=M
@Screen.drawLine$whileend24
D;JNE
@ARG //push argument
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG //push argument
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@Screen.drawPixel
D=A
@R13
M=D
@return98
D=A
@CALL
0;JMP
(return98)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@ARG //push argument
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@LCL //push local
D=M
@3
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@ARG //pop argument
D=M
@1
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@Screen.drawLine$while24
0;JMP
(Screen.drawLine$whileend24)
@ARG //push argument
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG //push argument
D=M
@3
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@Screen.drawPixel
D=A
@R13
M=D
@return99
D=A
@CALL
0;JMP
(return99)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@RETURN
0;JMP

(Screen.drawLine$ifelse22)
(Screen.drawLine$while34)
@ARG //push argument
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG //push argument
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
D=D-M
M=-1
@eq32
D;JEQ
@SP
A=M-1
M=0
(eq32)
@ARG //push argument
D=M
@3
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG //push argument
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
D=D-M
M=-1
@eq33
D;JEQ
@SP
A=M-1
M=0
(eq33)
@SP  //and
AM=M-1
D=M
A=A-1
M=D&M
@SP  //not
A=M-1
M=!M
@SP  //not
A=M-1
M=!M
@SP
AM=M-1
D=M
@Screen.drawLine$whileend34
D;JNE
@ARG //push argument
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG //push argument
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@Screen.drawPixel
D=A
@R13
M=D
@return100
D=A
@CALL
0;JMP
(return100)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@ARG //push argument
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG //push argument
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //sub
AM=M-1
D=M
A=A-1
M=M-D
@LCL //push local
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@Math.multiply
D=A
@R13
M=D
@return101
D=A
@CALL
0;JMP
(return101)
@1
D=A
@R14
M=D
@Math.abs
D=A
@R13
M=D
@return102
D=A
@CALL
0;JMP
(return102)
@ARG //push argument
D=M
@3
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG //push argument
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //sub
AM=M-1
D=M
A=A-1
M=M-D
@LCL //push local
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@Math.multiply
D=A
@R13
M=D
@return103
D=A
@CALL
0;JMP
(return103)
@1
D=A
@R14
M=D
@Math.abs
D=A
@R13
M=D
@return104
D=A
@CALL
0;JMP
(return104)
@SP
AM=M-1
D=M
A=A-1
D=M-D
M=-1
@gt34
D;JGT
@SP
A=M-1
M=0
(gt34)
@SP
AM=M-1
D=M
@Screen.drawLine$if37
D;JNE
@Screen.drawLine$ifelse37
0;JMP
(Screen.drawLine$if37)
@ARG //push argument
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@LCL //push local
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@ARG //pop argument
D=M
@0
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@Screen.drawLine$ifend37
0;JMP
(Screen.drawLine$ifelse37)
@ARG //push argument
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@LCL //push local
D=M
@3
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@ARG //pop argument
D=M
@1
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
(Screen.drawLine$ifend37)
@Screen.drawLine$while34
0;JMP
(Screen.drawLine$whileend34)
@ARG //push argument
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG //push argument
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@Screen.drawPixel
D=A
@R13
M=D
@return105
D=A
@CALL
0;JMP
(return105)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@RETURN
0;JMP

(Screen.drawRectangle)
@2
D=A
(Screen.drawRectangle_LOOP)
@Screen.drawRectangle_END
D;JEQ
@SP
A=M
M=0
@SP
M=M+1
D=D-1
@Screen.drawRectangle_LOOP
0;JMP
(Screen.drawRectangle_END)

@ARG //push argument
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG //push argument
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG //push argument
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG //push argument
D=M
@3
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@4
D=A
@R14
M=D
@Screen.setAddrWindow
D=A
@R13
M=D
@return106
D=A
@CALL
0;JMP
(return106)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL //pop local
D=M
@1
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
(Screen.drawRectangle$while4)
@LCL //push local
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG //push argument
D=M
@3
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
D=M-D
M=-1
@lt35
D;JLT
@SP
A=M-1
M=0
(lt35)
@SP  //not
A=M-1
M=!M
@SP
AM=M-1
D=M
@Screen.drawRectangle$whileend4
D;JNE
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL //pop local
D=M
@0
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
(Screen.drawRectangle$while6)
@LCL //push local
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG //push argument
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
D=M-D
M=-1
@lt36
D;JLT
@SP
A=M-1
M=0
(lt36)
@SP  //not
A=M-1
M=!M
@SP
AM=M-1
D=M
@Screen.drawRectangle$whileend6
D;JNE
@Screen.1   //push static
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@Screen.writeData16
D=A
@R13
M=D
@return107
D=A
@CALL
0;JMP
(return107)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@LCL //push local
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@LCL //pop local
D=M
@0
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@Screen.drawRectangle$while6
0;JMP
(Screen.drawRectangle$whileend6)
@LCL //push local
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@LCL //pop local
D=M
@1
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@Screen.drawRectangle$while4
0;JMP
(Screen.drawRectangle$whileend4)
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@RETURN
0;JMP

(Screen.drawCircle)
@4
D=A
(Screen.drawCircle_LOOP)
@Screen.drawCircle_END
D;JEQ
@SP
A=M
M=0
@SP
M=M+1
D=D-1
@Screen.drawCircle_LOOP
0;JMP
(Screen.drawCircle_END)

@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL //pop local
D=M
@0
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
(Screen.drawCircle$while2)
@LCL //push local
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG //push argument
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
D=D-M
M=-1
@eq37
D;JEQ
@SP
A=M-1
M=0
(eq37)
@SP  //not
A=M-1
M=!M
@SP  //not
A=M-1
M=!M
@SP
AM=M-1
D=M
@Screen.drawCircle$whileend2
D;JNE
@ARG //push argument
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG //push argument
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@Math.multiply
D=A
@R13
M=D
@return108
D=A
@CALL
0;JMP
(return108)
@LCL //push local
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@LCL //push local
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@Math.multiply
D=A
@R13
M=D
@return109
D=A
@CALL
0;JMP
(return109)
@SP  //sub
AM=M-1
D=M
A=A-1
M=M-D
@1
D=A
@R14
M=D
@Math.sqrt
D=A
@R13
M=D
@return110
D=A
@CALL
0;JMP
(return110)
@LCL //pop local
D=M
@3
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@ARG //push argument
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@LCL //push local
D=M
@3
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //sub
AM=M-1
D=M
A=A-1
M=M-D
@ARG //push argument
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@LCL //push local
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@ARG //push argument
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@LCL //push local
D=M
@3
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@ARG //push argument
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@LCL //push local
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@4
D=A
@R14
M=D
@Screen.drawLine
D=A
@R13
M=D
@return111
D=A
@CALL
0;JMP
(return111)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@ARG //push argument
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@LCL //push local
D=M
@3
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //sub
AM=M-1
D=M
A=A-1
M=M-D
@ARG //push argument
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@LCL //push local
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //sub
AM=M-1
D=M
A=A-1
M=M-D
@ARG //push argument
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@LCL //push local
D=M
@3
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@ARG //push argument
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@LCL //push local
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //sub
AM=M-1
D=M
A=A-1
M=M-D
@4
D=A
@R14
M=D
@Screen.drawLine
D=A
@R13
M=D
@return112
D=A
@CALL
0;JMP
(return112)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@LCL //push local
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@LCL //pop local
D=M
@0
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@Screen.drawCircle$while2
0;JMP
(Screen.drawCircle$whileend2)
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@RETURN
0;JMP

(Screen.setAddrWindow)
@0
D=A
(Screen.setAddrWindow_LOOP)
@Screen.setAddrWindow_END
D;JEQ
@SP
A=M
M=0
@SP
M=M+1
D=D-1
@Screen.setAddrWindow_LOOP
0;JMP
(Screen.setAddrWindow_END)

@42  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@Screen.writeCommand
D=A
@R13
M=D
@return113
D=A
@CALL
0;JMP
(return113)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@ARG //push argument
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@Screen.writeData16
D=A
@R13
M=D
@return114
D=A
@CALL
0;JMP
(return114)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@ARG //push argument
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG //push argument
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@1  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //sub
AM=M-1
D=M
A=A-1
M=M-D
@1
D=A
@R14
M=D
@Screen.writeData16
D=A
@R13
M=D
@return115
D=A
@CALL
0;JMP
(return115)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@43  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@Screen.writeCommand
D=A
@R13
M=D
@return116
D=A
@CALL
0;JMP
(return116)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@ARG //push argument
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@Screen.writeData16
D=A
@R13
M=D
@return117
D=A
@CALL
0;JMP
(return117)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@ARG //push argument
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG //push argument
D=M
@3
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@1  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //sub
AM=M-1
D=M
A=A-1
M=M-D
@1
D=A
@R14
M=D
@Screen.writeData16
D=A
@R13
M=D
@return118
D=A
@CALL
0;JMP
(return118)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@44  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@Screen.writeCommand
D=A
@R13
M=D
@return119
D=A
@CALL
0;JMP
(return119)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@RETURN
0;JMP

(Screen.writeData)
@0
D=A
(Screen.writeData_LOOP)
@Screen.writeData_END
D;JEQ
@SP
A=M
M=0
@SP
M=M+1
D=D-1
@Screen.writeData_LOOP
0;JMP
(Screen.writeData_END)

@1  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@Screen.0   //push static
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@ARG //push argument
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@SP  //pop pointer
AM=M-1
D=M
@THAT
M=D
@R5 //push temp
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT    //pop that
D=M
@0
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@RETURN
0;JMP

(Screen.writeData16)
@0
D=A
(Screen.writeData16_LOOP)
@Screen.writeData16_END
D;JEQ
@SP
A=M
M=0
@SP
M=M+1
D=D-1
@Screen.writeData16_LOOP
0;JMP
(Screen.writeData16_END)

@2  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@Screen.0   //push static
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@ARG //push argument
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@SP  //pop pointer
AM=M-1
D=M
@THAT
M=D
@R5 //push temp
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT    //pop that
D=M
@0
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@RETURN
0;JMP

(Screen.writeCommand)
@0
D=A
(Screen.writeCommand_LOOP)
@Screen.writeCommand_END
D;JEQ
@SP
A=M
M=0
@SP
M=M+1
D=D-1
@Screen.writeCommand_LOOP
0;JMP
(Screen.writeCommand_END)

@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@Screen.0   //push static
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@ARG //push argument
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@SP  //pop pointer
AM=M-1
D=M
@THAT
M=D
@R5 //push temp
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT    //pop that
D=M
@0
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@RETURN
0;JMP

(Screen.BLACK)
@0
D=A
(Screen.BLACK_LOOP)
@Screen.BLACK_END
D;JEQ
@SP
A=M
M=0
@SP
M=M+1
D=D-1
@Screen.BLACK_LOOP
0;JMP
(Screen.BLACK_END)

@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@RETURN
0;JMP

(Screen.NAVY)
@0
D=A
(Screen.NAVY_LOOP)
@Screen.NAVY_END
D;JEQ
@SP
A=M
M=0
@SP
M=M+1
D=D-1
@Screen.NAVY_LOOP
0;JMP
(Screen.NAVY_END)

@16  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@RETURN
0;JMP

(Screen.BLUE)
@0
D=A
(Screen.BLUE_LOOP)
@Screen.BLUE_END
D;JEQ
@SP
A=M
M=0
@SP
M=M+1
D=D-1
@Screen.BLUE_LOOP
0;JMP
(Screen.BLUE_END)

@31  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@RETURN
0;JMP

(Screen.GREEN)
@0
D=A
(Screen.GREEN_LOOP)
@Screen.GREEN_END
D;JEQ
@SP
A=M
M=0
@SP
M=M+1
D=D-1
@Screen.GREEN_LOOP
0;JMP
(Screen.GREEN_END)

@2016  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@RETURN
0;JMP

(Screen.CYAN)
@0
D=A
(Screen.CYAN_LOOP)
@Screen.CYAN_END
D;JEQ
@SP
A=M
M=0
@SP
M=M+1
D=D-1
@Screen.CYAN_LOOP
0;JMP
(Screen.CYAN_END)

@2047  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@RETURN
0;JMP

(Screen.MAROON)
@0
D=A
(Screen.MAROON_LOOP)
@Screen.MAROON_END
D;JEQ
@SP
A=M
M=0
@SP
M=M+1
D=D-1
@Screen.MAROON_LOOP
0;JMP
(Screen.MAROON_END)

@32767  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //not
A=M-1
M=!M
@RETURN
0;JMP

(Screen.PURPLE)
@0
D=A
(Screen.PURPLE_LOOP)
@Screen.PURPLE_END
D;JEQ
@SP
A=M
M=0
@SP
M=M+1
D=D-1
@Screen.PURPLE_LOOP
0;JMP
(Screen.PURPLE_END)

@32752  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //neg
A=M-1
M=-M
@RETURN
0;JMP

(Screen.OLIVE)
@0
D=A
(Screen.OLIVE_LOOP)
@Screen.OLIVE_END
D;JEQ
@SP
A=M
M=0
@SP
M=M+1
D=D-1
@Screen.OLIVE_LOOP
0;JMP
(Screen.OLIVE_END)

@31744  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //neg
A=M-1
M=-M
@RETURN
0;JMP

(Screen.DARKGREY)
@0
D=A
(Screen.DARKGREY_LOOP)
@Screen.DARKGREY_END
D;JEQ
@SP
A=M
M=0
@SP
M=M+1
D=D-1
@Screen.DARKGREY_LOOP
0;JMP
(Screen.DARKGREY_END)

@31728  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //neg
A=M-1
M=-M
@RETURN
0;JMP

(Screen.LIGHTGREY)
@0
D=A
(Screen.LIGHTGREY_LOOP)
@Screen.LIGHTGREY_END
D;JEQ
@SP
A=M
M=0
@SP
M=M+1
D=D-1
@Screen.LIGHTGREY_LOOP
0;JMP
(Screen.LIGHTGREY_END)

@14824  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //neg
A=M-1
M=-M
@RETURN
0;JMP

(Screen.RED)
@0
D=A
(Screen.RED_LOOP)
@Screen.RED_END
D;JEQ
@SP
A=M
M=0
@SP
M=M+1
D=D-1
@Screen.RED_LOOP
0;JMP
(Screen.RED_END)

@2048  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //neg
A=M-1
M=-M
@RETURN
0;JMP

(Screen.MAGENTA)
@0
D=A
(Screen.MAGENTA_LOOP)
@Screen.MAGENTA_END
D;JEQ
@SP
A=M
M=0
@SP
M=M+1
D=D-1
@Screen.MAGENTA_LOOP
0;JMP
(Screen.MAGENTA_END)

@2017  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //neg
A=M-1
M=-M
@RETURN
0;JMP

(Screen.YELLOW)
@0
D=A
(Screen.YELLOW_LOOP)
@Screen.YELLOW_END
D;JEQ
@SP
A=M
M=0
@SP
M=M+1
D=D-1
@Screen.YELLOW_LOOP
0;JMP
(Screen.YELLOW_END)

@32  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //neg
A=M-1
M=-M
@RETURN
0;JMP

(Screen.ORANGE)
@0
D=A
(Screen.ORANGE_LOOP)
@Screen.ORANGE_END
D;JEQ
@SP
A=M
M=0
@SP
M=M+1
D=D-1
@Screen.ORANGE_LOOP
0;JMP
(Screen.ORANGE_END)

@736  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //neg
A=M-1
M=-M
@RETURN
0;JMP

(Screen.WHITE)
@0
D=A
(Screen.WHITE_LOOP)
@Screen.WHITE_END
D;JEQ
@SP
A=M
M=0
@SP
M=M+1
D=D-1
@Screen.WHITE_LOOP
0;JMP
(Screen.WHITE_END)

@1  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //neg
A=M-1
M=-M
@RETURN
0;JMP

(Output.init)
@0
D=A
(Output.init_LOOP)
@Output.init_END
D;JEQ
@SP
A=M
M=0
@SP
M=M+1
D=D-1
@Output.init_LOOP
0;JMP
(Output.init_END)

@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //pop static
AM=M-1
D=M
@Output.1
M=D
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //pop static
AM=M-1
D=M
@Output.0
M=D
@0
D=A
@R14
M=D
@Output.initMap
D=A
@R13
M=D
@return120
D=A
@CALL
0;JMP
(return120)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@RETURN
0;JMP

(Output.initMap)
@0
D=A
(Output.initMap_LOOP)
@Output.initMap_END
D;JEQ
@SP
A=M
M=0
@SP
M=M+1
D=D-1
@Output.initMap_LOOP
0;JMP
(Output.initMap_END)

@127  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@Array.new
D=A
@R13
M=D
@return121
D=A
@CALL
0;JMP
(return121)
@SP  //pop static
AM=M-1
D=M
@Output.2
M=D
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@3  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@448  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //not
A=M-1
M=!M
@7169  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //not
A=M-1
M=!M
@16355  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@448  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //not
A=M-1
M=!M
@8191  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //not
A=M-1
M=!M
@7
D=A
@R14
M=D
@Output.create
D=A
@R13
M=D
@return122
D=A
@CALL
0;JMP
(return122)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@10  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@3  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@448  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //not
A=M-1
M=!M
@7169  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //not
A=M-1
M=!M
@16355  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@448  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //not
A=M-1
M=!M
@8191  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //not
A=M-1
M=!M
@7
D=A
@R14
M=D
@Output.create
D=A
@R13
M=D
@return123
D=A
@CALL
0;JMP
(return123)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@32  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@7
D=A
@R14
M=D
@Output.create
D=A
@R13
M=D
@return124
D=A
@CALL
0;JMP
(return124)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@33  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@1  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@15489  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //not
A=M-1
M=!M
@14304  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@7168  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@7
D=A
@R14
M=D
@Output.create
D=A
@R13
M=D
@return125
D=A
@CALL
0;JMP
(return125)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@34  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@24590  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@3584  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@24576  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@7
D=A
@R14
M=D
@Output.create
D=A
@R13
M=D
@return126
D=A
@CALL
0;JMP
(return126)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@35  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@28608  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //not
A=M-1
M=!M
@16239  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //not
A=M-1
M=!M
@2307  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@1014  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //not
A=M-1
M=!M
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@7
D=A
@R14
M=D
@Output.create
D=A
@R13
M=D
@return127
D=A
@CALL
0;JMP
(return127)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@36  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@26596  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //not
A=M-1
M=!M
@14553  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //not
A=M-1
M=!M
@29281  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@5107  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //not
A=M-1
M=!M
@32767  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //not
A=M-1
M=!M
@7
D=A
@R14
M=D
@Output.create
D=A
@R13
M=D
@return128
D=A
@CALL
0;JMP
(return128)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@37  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@3  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@6169  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@32575  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //not
A=M-1
M=!M
@1539  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@12337  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@32767  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //not
A=M-1
M=!M
@7
D=A
@R14
M=D
@Output.create
D=A
@R13
M=D
@return129
D=A
@CALL
0;JMP
(return129)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@38  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@1  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@16321  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //not
A=M-1
M=!M
@15809  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //not
A=M-1
M=!M
@7651  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@5085  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //not
A=M-1
M=!M
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@7
D=A
@R14
M=D
@Output.create
D=A
@R13
M=D
@return130
D=A
@CALL
0;JMP
(return130)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@39  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@32753  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //not
A=M-1
M=!M
@96  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@7
D=A
@R14
M=D
@Output.create
D=A
@R13
M=D
@return131
D=A
@CALL
0;JMP
(return131)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@40  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@15  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@32259  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //not
A=M-1
M=!M
@12386  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@512  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@7
D=A
@R14
M=D
@Output.create
D=A
@R13
M=D
@return132
D=A
@CALL
0;JMP
(return132)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@41  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@32  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@8966  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@8128  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2047  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //not
A=M-1
M=!M
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@7
D=A
@R14
M=D
@Output.create
D=A
@R13
M=D
@return133
D=A
@CALL
0;JMP
(return133)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@42  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@1  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@20511  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@224  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@3585  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@4074  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //not
A=M-1
M=!M
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@7
D=A
@R14
M=D
@Output.create
D=A
@R13
M=D
@return134
D=A
@CALL
0;JMP
(return134)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@43  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@16388  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@496  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@7936  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@16388  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@7
D=A
@R14
M=D
@Output.create
D=A
@R13
M=D
@return135
D=A
@CALL
0;JMP
(return135)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@45  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@16388  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@64  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@1024  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@16388  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@7
D=A
@R14
M=D
@Output.create
D=A
@R13
M=D
@return136
D=A
@CALL
0;JMP
(return136)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@46  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@768  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@12288  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@7
D=A
@R14
M=D
@Output.create
D=A
@R13
M=D
@return137
D=A
@CALL
0;JMP
(return137)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@47  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@3  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@24  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@192  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@1536  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@12289  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@32767  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //not
A=M-1
M=!M
@7
D=A
@R14
M=D
@Output.create
D=A
@R13
M=D
@return138
D=A
@CALL
0;JMP
(return138)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@48  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2016  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //not
A=M-1
M=!M
@15609  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //not
A=M-1
M=!M
@12385  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@1008  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //not
A=M-1
M=!M
@32767  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //not
A=M-1
M=!M
@7
D=A
@R14
M=D
@Output.create
D=A
@R13
M=D
@return139
D=A
@CALL
0;JMP
(return139)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@49  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2080  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@15361  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //not
A=M-1
M=!M
@16354  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@32  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@7
D=A
@R14
M=D
@Output.create
D=A
@R13
M=D
@return140
D=A
@CALL
0;JMP
(return140)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@50  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@3  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@31683  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //not
A=M-1
M=!M
@25186  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@8995  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@7728  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@16383  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //not
A=M-1
M=!M
@7
D=A
@R14
M=D
@Output.create
D=A
@R13
M=D
@return141
D=A
@CALL
0;JMP
(return141)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@51  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@1  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@1072  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@25122  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@8739  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@482  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //not
A=M-1
M=!M
@16383  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //not
A=M-1
M=!M
@7
D=A
@R14
M=D
@Output.create
D=A
@R13
M=D
@return142
D=A
@CALL
0;JMP
(return142)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@52  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@24581  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@584  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@16323  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@475  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //not
A=M-1
M=!M
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@7
D=A
@R14
M=D
@Output.create
D=A
@R13
M=D
@return143
D=A
@CALL
0;JMP
(return143)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@53  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@1  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@7729  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@7661  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //not
A=M-1
M=!M
@8483  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@3553  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //not
A=M-1
M=!M
@8192  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@7
D=A
@R14
M=D
@Output.create
D=A
@R13
M=D
@return144
D=A
@CALL
0;JMP
(return144)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@54  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@1  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@1984  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //not
A=M-1
M=!M
@15833  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //not
A=M-1
M=!M
@8739  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@7651  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //not
A=M-1
M=!M
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@7
D=A
@R14
M=D
@Output.create
D=A
@R13
M=D
@return145
D=A
@CALL
0;JMP
(return145)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@55  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@1536  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@9154  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@15904  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@15873  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@8191  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //not
A=M-1
M=!M
@7
D=A
@R14
M=D
@Output.create
D=A
@R13
M=D
@return146
D=A
@CALL
0;JMP
(return146)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@56  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@1  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@9152  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //not
A=M-1
M=!M
@7645  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //not
A=M-1
M=!M
@8739  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@482  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //not
A=M-1
M=!M
@16383  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //not
A=M-1
M=!M
@7
D=A
@R14
M=D
@Output.create
D=A
@R13
M=D
@return147
D=A
@CALL
0;JMP
(return147)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@57  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@7203  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@7645  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //not
A=M-1
M=!M
@12833  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@496  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //not
A=M-1
M=!M
@16383  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //not
A=M-1
M=!M
@7
D=A
@R14
M=D
@Output.create
D=A
@R13
M=D
@return148
D=A
@CALL
0;JMP
(return148)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@58  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@408  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@6528  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@7
D=A
@R14
M=D
@Output.create
D=A
@R13
M=D
@return149
D=A
@CALL
0;JMP
(return149)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@59  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@32  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@920  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@6528  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@7
D=A
@R14
M=D
@Output.create
D=A
@R13
M=D
@return150
D=A
@CALL
0;JMP
(return150)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@60  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@16398  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@432  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@12674  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2048  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@7
D=A
@R14
M=D
@Output.create
D=A
@R13
M=D
@return151
D=A
@CALL
0;JMP
(return151)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@61  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@28662  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //not
A=M-1
M=!M
@144  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2304  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@28662  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //not
A=M-1
M=!M
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@7
D=A
@R14
M=D
@Output.create
D=A
@R13
M=D
@return152
D=A
@CALL
0;JMP
(return152)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@62  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2097  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@32335  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //not
A=M-1
M=!M
@3584  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@16384  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@7
D=A
@R14
M=D
@Output.create
D=A
@R13
M=D
@return153
D=A
@CALL
0;JMP
(return153)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@64  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@1  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@960  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //not
A=M-1
M=!M
@7677  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //not
A=M-1
M=!M
@12066  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@504  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //not
A=M-1
M=!M
@16383  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //not
A=M-1
M=!M
@7
D=A
@R14
M=D
@Output.create
D=A
@R13
M=D
@return154
D=A
@CALL
0;JMP
(return154)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@63  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@3072  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@7325  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //not
A=M-1
M=!M
@14112  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@7680  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@16383  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //not
A=M-1
M=!M
@7
D=A
@R14
M=D
@Output.create
D=A
@R13
M=D
@return155
D=A
@CALL
0;JMP
(return155)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@65  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@3  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@1984  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //not
A=M-1
M=!M
@16345  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //not
A=M-1
M=!M
@611  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@960  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //not
A=M-1
M=!M
@32767  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //not
A=M-1
M=!M
@7
D=A
@R14
M=D
@Output.create
D=A
@R13
M=D
@return156
D=A
@CALL
0;JMP
(return156)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@66  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@3  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@448  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //not
A=M-1
M=!M
@7645  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //not
A=M-1
M=!M
@8739  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@482  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //not
A=M-1
M=!M
@16383  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //not
A=M-1
M=!M
@7
D=A
@R14
M=D
@Output.create
D=A
@R13
M=D
@return157
D=A
@CALL
0;JMP
(return157)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@67  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2016  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //not
A=M-1
M=!M
@15609  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //not
A=M-1
M=!M
@8227  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@1560  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@16383  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //not
A=M-1
M=!M
@7
D=A
@R14
M=D
@Output.create
D=A
@R13
M=D
@return158
D=A
@CALL
0;JMP
(return158)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@68  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@3  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@448  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //not
A=M-1
M=!M
@7677  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //not
A=M-1
M=!M
@12385  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@1008  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //not
A=M-1
M=!M
@32767  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //not
A=M-1
M=!M
@7
D=A
@R14
M=D
@Output.create
D=A
@R13
M=D
@return159
D=A
@CALL
0;JMP
(return159)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@69  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@3  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@448  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //not
A=M-1
M=!M
@7645  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //not
A=M-1
M=!M
@10019  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@1592  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@8191  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //not
A=M-1
M=!M
@7
D=A
@R14
M=D
@Output.create
D=A
@R13
M=D
@return160
D=A
@CALL
0;JMP
(return160)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@70  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@3  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@448  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //not
A=M-1
M=!M
@8157  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //not
A=M-1
M=!M
@1824  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@1536  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@8191  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //not
A=M-1
M=!M
@7
D=A
@R14
M=D
@Output.create
D=A
@R13
M=D
@return161
D=A
@CALL
0;JMP
(return161)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@71  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2016  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //not
A=M-1
M=!M
@15609  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //not
A=M-1
M=!M
@8737  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@6593  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //not
A=M-1
M=!M
@16383  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //not
A=M-1
M=!M
@7
D=A
@R14
M=D
@Output.create
D=A
@R13
M=D
@return162
D=A
@CALL
0;JMP
(return162)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@72  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@3  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@448  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //not
A=M-1
M=!M
@8159  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //not
A=M-1
M=!M
@515  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@448  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //not
A=M-1
M=!M
@8191  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //not
A=M-1
M=!M
@7
D=A
@R14
M=D
@Output.create
D=A
@R13
M=D
@return163
D=A
@CALL
0;JMP
(return163)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@73  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@32  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@9214  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@16354  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@512  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@7
D=A
@R14
M=D
@Output.create
D=A
@R13
M=D
@return164
D=A
@CALL
0;JMP
(return164)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@74  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@1  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@32711  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //not
A=M-1
M=!M
@514  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@16353  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@511  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //not
A=M-1
M=!M
@8192  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@7
D=A
@R14
M=D
@Output.create
D=A
@R13
M=D
@return165
D=A
@CALL
0;JMP
(return165)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@75  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@3  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@448  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //not
A=M-1
M=!M
@8159  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //not
A=M-1
M=!M
@1795  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@8647  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //not
A=M-1
M=!M
@8191  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //not
A=M-1
M=!M
@7
D=A
@R14
M=D
@Output.create
D=A
@R13
M=D
@return166
D=A
@CALL
0;JMP
(return166)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@76  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@3  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@448  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //not
A=M-1
M=!M
@7679  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //not
A=M-1
M=!M
@8195  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@56  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@7
D=A
@R14
M=D
@Output.create
D=A
@R13
M=D
@return167
D=A
@CALL
0;JMP
(return167)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@77  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@3  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@448  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //not
A=M-1
M=!M
@16359  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //not
A=M-1
M=!M
@387  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@960  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //not
A=M-1
M=!M
@8191  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //not
A=M-1
M=!M
@7
D=A
@R14
M=D
@Output.create
D=A
@R13
M=D
@return168
D=A
@CALL
0;JMP
(return168)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@78  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@3  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@448  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //not
A=M-1
M=!M
@8135  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //not
A=M-1
M=!M
@3587  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@448  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //not
A=M-1
M=!M
@8191  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //not
A=M-1
M=!M
@7
D=A
@R14
M=D
@Output.create
D=A
@R13
M=D
@return169
D=A
@CALL
0;JMP
(return169)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@79  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@1  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@960  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //not
A=M-1
M=!M
@7677  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //not
A=M-1
M=!M
@8227  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@480  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //not
A=M-1
M=!M
@16383  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //not
A=M-1
M=!M
@7
D=A
@R14
M=D
@Output.create
D=A
@R13
M=D
@return170
D=A
@CALL
0;JMP
(return170)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@80  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@3  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@448  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //not
A=M-1
M=!M
@8157  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //not
A=M-1
M=!M
@544  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@15873  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@16383  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //not
A=M-1
M=!M
@7
D=A
@R14
M=D
@Output.create
D=A
@R13
M=D
@return171
D=A
@CALL
0;JMP
(return171)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@81  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@1  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@960  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //not
A=M-1
M=!M
@7549  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //not
A=M-1
M=!M
@14375  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@416  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //not
A=M-1
M=!M
@16383  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //not
A=M-1
M=!M
@7
D=A
@R14
M=D
@Output.create
D=A
@R13
M=D
@return172
D=A
@CALL
0;JMP
(return172)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@82  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@3  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@448  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //not
A=M-1
M=!M
@8157  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //not
A=M-1
M=!M
@1571  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@454  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //not
A=M-1
M=!M
@16383  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //not
A=M-1
M=!M
@7
D=A
@R14
M=D
@Output.create
D=A
@R13
M=D
@return173
D=A
@CALL
0;JMP
(return173)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@83  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@1  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@29638  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //not
A=M-1
M=!M
@7629  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //not
A=M-1
M=!M
@8739  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@4579  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //not
A=M-1
M=!M
@16383  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //not
A=M-1
M=!M
@7
D=A
@R14
M=D
@Output.create
D=A
@R13
M=D
@return174
D=A
@CALL
0;JMP
(return174)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@84  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@3616  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@25598  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@16354  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@1536  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@8191  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //not
A=M-1
M=!M
@7
D=A
@R14
M=D
@Output.create
D=A
@R13
M=D
@return175
D=A
@CALL
0;JMP
(return175)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@85  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@1  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@448  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //not
A=M-1
M=!M
@7679  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //not
A=M-1
M=!M
@8195  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@480  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //not
A=M-1
M=!M
@8191  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //not
A=M-1
M=!M
@7
D=A
@R14
M=D
@Output.create
D=A
@R13
M=D
@return176
D=A
@CALL
0;JMP
(return176)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@86  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@15887  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@7231  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //not
A=M-1
M=!M
@15360  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@508  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //not
A=M-1
M=!M
@8191  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //not
A=M-1
M=!M
@7
D=A
@R14
M=D
@Output.create
D=A
@R13
M=D
@return177
D=A
@CALL
0;JMP
(return177)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@87  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@1  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@448  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //not
A=M-1
M=!M
@7743  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //not
A=M-1
M=!M
@7171  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@480  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //not
A=M-1
M=!M
@8191  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //not
A=M-1
M=!M
@7
D=A
@R14
M=D
@Output.create
D=A
@R13
M=D
@return178
D=A
@CALL
0;JMP
(return178)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@88  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@3  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@1597  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@7943  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //not
A=M-1
M=!M
@3971  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@8655  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //not
A=M-1
M=!M
@24576  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@7
D=A
@R14
M=D
@Output.create
D=A
@R13
M=D
@return179
D=A
@CALL
0;JMP
(return179)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@89  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@7715  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@7199  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //not
A=M-1
M=!M
@15874  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@15873  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@8191  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //not
A=M-1
M=!M
@7
D=A
@R14
M=D
@Output.create
D=A
@R13
M=D
@return180
D=A
@CALL
0;JMP
(return180)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@90  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@3  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@29123  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //not
A=M-1
M=!M
@25186  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@8995  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@7736  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@8191  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //not
A=M-1
M=!M
@7
D=A
@R14
M=D
@Output.create
D=A
@R13
M=D
@return181
D=A
@CALL
0;JMP
(return181)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@91  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@63  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@7169  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //not
A=M-1
M=!M
@8226  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@512  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@7
D=A
@R14
M=D
@Output.create
D=A
@R13
M=D
@return182
D=A
@CALL
0;JMP
(return182)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@92  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@6147  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@96  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@3073  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@32719  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //not
A=M-1
M=!M
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@7
D=A
@R14
M=D
@Output.create
D=A
@R13
M=D
@return183
D=A
@CALL
0;JMP
(return183)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@93  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@32  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@8706  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@16355  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@511  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //not
A=M-1
M=!M
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@7
D=A
@R14
M=D
@Output.create
D=A
@R13
M=D
@return184
D=A
@CALL
0;JMP
(return184)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@94  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@32755  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //not
A=M-1
M=!M
@96  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@3072  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@32767  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //not
A=M-1
M=!M
@7
D=A
@R14
M=D
@Output.create
D=A
@R13
M=D
@return185
D=A
@CALL
0;JMP
(return185)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@95  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@4  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@64  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@1024  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@16388  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@64  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@7
D=A
@R14
M=D
@Output.create
D=A
@R13
M=D
@return186
D=A
@CALL
0;JMP
(return186)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@96  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@8198  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@192  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2048  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@7
D=A
@R14
M=D
@Output.create
D=A
@R13
M=D
@return187
D=A
@CALL
0;JMP
(return187)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@97  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@1  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@32706  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //not
A=M-1
M=!M
@592  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@7939  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@8159  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //not
A=M-1
M=!M
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@7
D=A
@R14
M=D
@Output.create
D=A
@R13
M=D
@return188
D=A
@CALL
0;JMP
(return188)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@98  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@1  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@448  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //not
A=M-1
M=!M
@7663  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //not
A=M-1
M=!M
@8963  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@8163  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //not
A=M-1
M=!M
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@7
D=A
@R14
M=D
@Output.create
D=A
@R13
M=D
@return189
D=A
@CALL
0;JMP
(return189)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@99  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@1  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@8128  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //not
A=M-1
M=!M
@528  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@8451  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@12306  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@7
D=A
@R14
M=D
@Output.create
D=A
@R13
M=D
@return190
D=A
@CALL
0;JMP
(return190)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@100  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@1  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@16321  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //not
A=M-1
M=!M
@560  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@8451  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@480  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //not
A=M-1
M=!M
@8191  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //not
A=M-1
M=!M
@7
D=A
@R14
M=D
@Output.create
D=A
@R13
M=D
@return191
D=A
@CALL
0;JMP
(return191)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@101  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@1  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@8128  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //not
A=M-1
M=!M
@592  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@9475  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@28694  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@7
D=A
@R14
M=D
@Output.create
D=A
@R13
M=D
@return192
D=A
@CALL
0;JMP
(return192)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@102  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@8255  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@15361  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //not
A=M-1
M=!M
@8736  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@1536  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@16383  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //not
A=M-1
M=!M
@7
D=A
@R14
M=D
@Output.create
D=A
@R13
M=D
@return193
D=A
@CALL
0;JMP
(return193)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@103  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@28783  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@31607  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //not
A=M-1
M=!M
@18567  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@1984  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //not
A=M-1
M=!M
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@7
D=A
@R14
M=D
@Output.create
D=A
@R13
M=D
@return194
D=A
@CALL
0;JMP
(return194)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@104  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@3  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@448  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //not
A=M-1
M=!M
@8159  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //not
A=M-1
M=!M
@259  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@4033  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //not
A=M-1
M=!M
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@7
D=A
@R14
M=D
@Output.create
D=A
@R13
M=D
@return195
D=A
@CALL
0;JMP
(return195)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@105  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@33  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@1014  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@16226  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@7
D=A
@R14
M=D
@Output.create
D=A
@R13
M=D
@return196
D=A
@CALL
0;JMP
(return196)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@106  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@96  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@1024  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@16647  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2496  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //not
A=M-1
M=!M
@24576  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@7
D=A
@R14
M=D
@Output.create
D=A
@R13
M=D
@return197
D=A
@CALL
0;JMP
(return197)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@107  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@3  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@448  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //not
A=M-1
M=!M
@7999  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //not
A=M-1
M=!M
@7683  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@12321  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@7
D=A
@R14
M=D
@Output.create
D=A
@R13
M=D
@return198
D=A
@CALL
0;JMP
(return198)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@108  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@32  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@9214  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@16354  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@7
D=A
@R14
M=D
@Output.create
D=A
@R13
M=D
@return199
D=A
@CALL
0;JMP
(return199)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@109  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@3  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@4033  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //not
A=M-1
M=!M
@48  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@16128  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@12350  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@7
D=A
@R14
M=D
@Output.create
D=A
@R13
M=D
@return200
D=A
@CALL
0;JMP
(return200)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@110  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@3  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@4033  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //not
A=M-1
M=!M
@16  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@259  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@4033  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //not
A=M-1
M=!M
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@7
D=A
@R14
M=D
@Output.create
D=A
@R13
M=D
@return201
D=A
@CALL
0;JMP
(return201)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@111  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@1  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@8128  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //not
A=M-1
M=!M
@528  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@8451  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@4065  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //not
A=M-1
M=!M
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@7
D=A
@R14
M=D
@Output.create
D=A
@R13
M=D
@return202
D=A
@CALL
0;JMP
(return202)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@112  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@7  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@8064  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //not
A=M-1
M=!M
@272  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@4353  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@4081  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //not
A=M-1
M=!M
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@7
D=A
@R14
M=D
@Output.create
D=A
@R13
M=D
@return203
D=A
@CALL
0;JMP
(return203)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@113  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@8160  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //not
A=M-1
M=!M
@272  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@4359  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@3969  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //not
A=M-1
M=!M
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@7
D=A
@R14
M=D
@Output.create
D=A
@R13
M=D
@return204
D=A
@CALL
0;JMP
(return204)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@114  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@3  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@4033  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //not
A=M-1
M=!M
@560  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@256  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@28678  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@7
D=A
@R14
M=D
@Output.create
D=A
@R13
M=D
@return205
D=A
@CALL
0;JMP
(return205)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@115  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@1  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@8247  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@592  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@10499  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@20461  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //not
A=M-1
M=!M
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@7
D=A
@R14
M=D
@Output.create
D=A
@R13
M=D
@return206
D=A
@CALL
0;JMP
(return206)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@116  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@4127  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@15361  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //not
A=M-1
M=!M
@8451  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@16  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@7
D=A
@R14
M=D
@Output.create
D=A
@R13
M=D
@return207
D=A
@CALL
0;JMP
(return207)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@117  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@1  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@4032  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //not
A=M-1
M=!M
@512  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@7939  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@4063  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //not
A=M-1
M=!M
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@7
D=A
@R14
M=D
@Output.create
D=A
@R13
M=D
@return208
D=A
@CALL
0;JMP
(return208)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@118  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@4064  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //not
A=M-1
M=!M
@768  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@12289  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@4080  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //not
A=M-1
M=!M
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@7
D=A
@R14
M=D
@Output.create
D=A
@R13
M=D
@return209
D=A
@CALL
0;JMP
(return209)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@119  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@1  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@4032  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //not
A=M-1
M=!M
@384  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@6147  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@4064  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //not
A=M-1
M=!M
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@7
D=A
@R14
M=D
@Output.create
D=A
@R13
M=D
@return210
D=A
@CALL
0;JMP
(return210)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@120  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@4147  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@480  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@7683  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@12321  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@7
D=A
@R14
M=D
@Output.create
D=A
@R13
M=D
@return211
D=A
@CALL
0;JMP
(return211)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@121  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@4  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@28751  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@1152  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@26627  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@4064  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //not
A=M-1
M=!M
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@7
D=A
@R14
M=D
@Output.create
D=A
@R13
M=D
@return212
D=A
@CALL
0;JMP
(return212)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@122  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@3  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@12347  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@720  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@9987  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@12337  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@7
D=A
@R14
M=D
@Output.create
D=A
@R13
M=D
@return213
D=A
@CALL
0;JMP
(return213)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@123  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@8194  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@508  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@15842  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@544  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@8192  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@7
D=A
@R14
M=D
@Output.create
D=A
@R13
M=D
@return214
D=A
@CALL
0;JMP
(return214)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@124  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@1022  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@16352  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@7
D=A
@R14
M=D
@Output.create
D=A
@R13
M=D
@return215
D=A
@CALL
0;JMP
(return215)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@125  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@544  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@9182  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@8128  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@8194  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@7
D=A
@R14
M=D
@Output.create
D=A
@R13
M=D
@return216
D=A
@CALL
0;JMP
(return216)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@126  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@3072  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@8198  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@192  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2048  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@24576  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@7
D=A
@R14
M=D
@Output.create
D=A
@R13
M=D
@return217
D=A
@CALL
0;JMP
(return217)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@RETURN
0;JMP

(Output.create)
@1
D=A
(Output.create_LOOP)
@Output.create_END
D;JEQ
@SP
A=M
M=0
@SP
M=M+1
D=D-1
@Output.create_LOOP
0;JMP
(Output.create_END)

@6  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@Array.new
D=A
@R13
M=D
@return218
D=A
@CALL
0;JMP
(return218)
@LCL //pop local
D=M
@0
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@ARG //push argument
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@Output.2   //push static
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@LCL //push local
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@SP  //pop pointer
AM=M-1
D=M
@THAT
M=D
@R5 //push temp
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT    //pop that
D=M
@0
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL //push local
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@ARG //push argument
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@SP  //pop pointer
AM=M-1
D=M
@THAT
M=D
@R5 //push temp
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT    //pop that
D=M
@0
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@1  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL //push local
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@ARG //push argument
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@SP  //pop pointer
AM=M-1
D=M
@THAT
M=D
@R5 //push temp
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT    //pop that
D=M
@0
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@2  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL //push local
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@ARG //push argument
D=M
@3
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@SP  //pop pointer
AM=M-1
D=M
@THAT
M=D
@R5 //push temp
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT    //pop that
D=M
@0
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@3  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL //push local
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@ARG //push argument
D=M
@4
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@SP  //pop pointer
AM=M-1
D=M
@THAT
M=D
@R5 //push temp
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT    //pop that
D=M
@0
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@4  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL //push local
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@ARG //push argument
D=M
@5
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@SP  //pop pointer
AM=M-1
D=M
@THAT
M=D
@R5 //push temp
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT    //pop that
D=M
@0
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@5  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL //push local
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@ARG //push argument
D=M
@6
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@SP  //pop pointer
AM=M-1
D=M
@THAT
M=D
@R5 //push temp
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT    //pop that
D=M
@0
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@RETURN
0;JMP

(Output.drawChar)
@4
D=A
(Output.drawChar_LOOP)
@Output.drawChar_END
D;JEQ
@SP
A=M
M=0
@SP
M=M+1
D=D-1
@Output.drawChar_LOOP
0;JMP
(Output.drawChar_END)

@19  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@Output.1   //push static
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //sub
AM=M-1
D=M
A=A-1
M=M-D
@12  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@Math.multiply
D=A
@R13
M=D
@return219
D=A
@CALL
0;JMP
(return219)
@Output.0   //push static
D=M
@SP
A=M
M=D
@SP
M=M+1
@8  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@Math.multiply
D=A
@R13
M=D
@return220
D=A
@CALL
0;JMP
(return220)
@12  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@8  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@4
D=A
@R14
M=D
@Screen.setAddrWindow
D=A
@R13
M=D
@return221
D=A
@CALL
0;JMP
(return221)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@Output.2   //push static
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG //push argument
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@SP  //pop pointer
AM=M-1
D=M
@THAT
M=D
@THAT    //push that
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@LCL //pop local
D=M
@0
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL //pop local
D=M
@1
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
(Output.drawChar$while4)
@LCL //push local
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@6  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
D=M-D
M=-1
@lt38
D;JLT
@SP
A=M-1
M=0
(lt38)
@SP  //not
A=M-1
M=!M
@SP
AM=M-1
D=M
@Output.drawChar$whileend4
D;JNE
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL //pop local
D=M
@2
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@LCL //push local
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@LCL //push local
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@SP  //pop pointer
AM=M-1
D=M
@THAT
M=D
@THAT    //push that
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@LCL //pop local
D=M
@3
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
(Output.drawChar$while6)
@LCL //push local
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@16  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
D=M-D
M=-1
@lt39
D;JLT
@SP
A=M-1
M=0
(lt39)
@SP  //not
A=M-1
M=!M
@SP
AM=M-1
D=M
@Output.drawChar$whileend6
D;JNE
@LCL //push local
D=M
@3
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
D=M-D
M=-1
@lt40
D;JLT
@SP
A=M-1
M=0
(lt40)
@SP
AM=M-1
D=M
@Output.drawChar$if7
D;JNE
@Output.drawChar$ifelse7
0;JMP
(Output.drawChar$if7)
@0
D=A
@R14
M=D
@Screen.paintPixel
D=A
@R13
M=D
@return222
D=A
@CALL
0;JMP
(return222)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@Output.drawChar$ifend7
0;JMP
(Output.drawChar$ifelse7)
@0
D=A
@R14
M=D
@Screen.clearPixel
D=A
@R13
M=D
@return223
D=A
@CALL
0;JMP
(return223)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
(Output.drawChar$ifend7)
@LCL //push local
D=M
@3
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@LCL //push local
D=M
@3
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@LCL //pop local
D=M
@3
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@LCL //push local
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@LCL //pop local
D=M
@2
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@Output.drawChar$while6
0;JMP
(Output.drawChar$whileend6)
@LCL //push local
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@LCL //pop local
D=M
@1
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@Output.drawChar$while4
0;JMP
(Output.drawChar$whileend4)
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@RETURN
0;JMP

(Output.moveCursor)
@0
D=A
(Output.moveCursor_LOOP)
@Output.moveCursor_END
D;JEQ
@SP
A=M
M=0
@SP
M=M+1
D=D-1
@Output.moveCursor_LOOP
0;JMP
(Output.moveCursor_END)

@ARG //push argument
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
D=M-D
M=-1
@lt41
D;JLT
@SP
A=M-1
M=0
(lt41)
@ARG //push argument
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@19  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
D=M-D
M=-1
@gt42
D;JGT
@SP
A=M-1
M=0
(gt42)
@SP  //or
AM=M-1
D=M
A=A-1
M=D|M
@ARG //push argument
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
D=M-D
M=-1
@lt43
D;JLT
@SP
A=M-1
M=0
(lt43)
@SP  //or
AM=M-1
D=M
A=A-1
M=D|M
@ARG //push argument
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@39  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
D=M-D
M=-1
@gt44
D;JGT
@SP
A=M-1
M=0
(gt44)
@SP  //or
AM=M-1
D=M
A=A-1
M=D|M
@SP
AM=M-1
D=M
@Output.moveCursor$if1
D;JNE
@Output.moveCursor$ifelse1
0;JMP
(Output.moveCursor$if1)
@20  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@Sys.error
D=A
@R13
M=D
@return224
D=A
@CALL
0;JMP
(return224)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
(Output.moveCursor$ifelse1)
@ARG //push argument
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //pop static
AM=M-1
D=M
@Output.0
M=D
@ARG //push argument
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //pop static
AM=M-1
D=M
@Output.1
M=D
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@Output.drawChar
D=A
@R13
M=D
@return225
D=A
@CALL
0;JMP
(return225)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@RETURN
0;JMP

(Output.printChar)
@0
D=A
(Output.printChar_LOOP)
@Output.printChar_END
D;JEQ
@SP
A=M
M=0
@SP
M=M+1
D=D-1
@Output.printChar_LOOP
0;JMP
(Output.printChar_END)

@ARG //push argument
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@13  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
D=D-M
M=-1
@eq45
D;JEQ
@SP
A=M-1
M=0
(eq45)
@SP
AM=M-1
D=M
@Output.printChar$if1
D;JNE
@Output.printChar$ifelse1
0;JMP
(Output.printChar$if1)
@0
D=A
@R14
M=D
@Output.println
D=A
@R13
M=D
@return226
D=A
@CALL
0;JMP
(return226)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@Output.printChar$ifend1
0;JMP
(Output.printChar$ifelse1)
@ARG //push argument
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@127  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
D=D-M
M=-1
@eq46
D;JEQ
@SP
A=M-1
M=0
(eq46)
@SP
AM=M-1
D=M
@Output.printChar$if6
D;JNE
@Output.printChar$ifelse6
0;JMP
(Output.printChar$if6)
@0
D=A
@R14
M=D
@Output.backSpace
D=A
@R13
M=D
@return227
D=A
@CALL
0;JMP
(return227)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@Output.printChar$ifend6
0;JMP
(Output.printChar$ifelse6)
@ARG //push argument
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@Output.drawChar
D=A
@R13
M=D
@return228
D=A
@CALL
0;JMP
(return228)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@Output.0   //push static
D=M
@SP
A=M
M=D
@SP
M=M+1
@1  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@SP  //pop static
AM=M-1
D=M
@Output.0
M=D
@Output.0   //push static
D=M
@SP
A=M
M=D
@SP
M=M+1
@40  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
D=D-M
M=-1
@eq47
D;JEQ
@SP
A=M-1
M=0
(eq47)
@SP
AM=M-1
D=M
@Output.printChar$if13
D;JNE
@Output.printChar$ifelse13
0;JMP
(Output.printChar$if13)
@0
D=A
@R14
M=D
@Output.println
D=A
@R13
M=D
@return229
D=A
@CALL
0;JMP
(return229)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
(Output.printChar$ifelse13)
(Output.printChar$ifend6)
(Output.printChar$ifend1)
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@RETURN
0;JMP

(Output.printString)
@2
D=A
(Output.printString_LOOP)
@Output.printString_END
D;JEQ
@SP
A=M
M=0
@SP
M=M+1
D=D-1
@Output.printString_LOOP
0;JMP
(Output.printString_END)

@ARG //push argument
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@String.length
D=A
@R13
M=D
@return230
D=A
@CALL
0;JMP
(return230)
@LCL //pop local
D=M
@1
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
(Output.printString$while2)
@LCL //push local
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@LCL //push local
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
D=M-D
M=-1
@lt48
D;JLT
@SP
A=M-1
M=0
(lt48)
@SP  //not
A=M-1
M=!M
@SP
AM=M-1
D=M
@Output.printString$whileend2
D;JNE
@ARG //push argument
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@LCL //push local
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.charAt
D=A
@R13
M=D
@return231
D=A
@CALL
0;JMP
(return231)
@1
D=A
@R14
M=D
@Output.printChar
D=A
@R13
M=D
@return232
D=A
@CALL
0;JMP
(return232)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@LCL //push local
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@LCL //pop local
D=M
@0
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@Output.printString$while2
0;JMP
(Output.printString$whileend2)
@ARG //push argument
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@String.dispose
D=A
@R13
M=D
@return233
D=A
@CALL
0;JMP
(return233)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@RETURN
0;JMP

(Output.printInt)
@1
D=A
(Output.printInt_LOOP)
@Output.printInt_END
D;JEQ
@SP
A=M
M=0
@SP
M=M+1
D=D-1
@Output.printInt_LOOP
0;JMP
(Output.printInt_END)

@6  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@String.new
D=A
@R13
M=D
@return234
D=A
@CALL
0;JMP
(return234)
@LCL //pop local
D=M
@0
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@LCL //push local
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG //push argument
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.setInt
D=A
@R13
M=D
@return235
D=A
@CALL
0;JMP
(return235)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@LCL //push local
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@Output.printString
D=A
@R13
M=D
@return236
D=A
@CALL
0;JMP
(return236)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@RETURN
0;JMP

(Output.printHex8)
@0
D=A
(Output.printHex8_LOOP)
@Output.printHex8_END
D;JEQ
@SP
A=M
M=0
@SP
M=M+1
D=D-1
@Output.printHex8_LOOP
0;JMP
(Output.printHex8_END)

@ARG //push argument
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@16  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@Math.divide
D=A
@R13
M=D
@return237
D=A
@CALL
0;JMP
(return237)
@1
D=A
@R14
M=D
@Output.printHex4
D=A
@R13
M=D
@return238
D=A
@CALL
0;JMP
(return238)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@ARG //push argument
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@15  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //and
AM=M-1
D=M
A=A-1
M=D&M
@1
D=A
@R14
M=D
@Output.printHex4
D=A
@R13
M=D
@return239
D=A
@CALL
0;JMP
(return239)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@RETURN
0;JMP

(Output.printHex4)
@0
D=A
(Output.printHex4_LOOP)
@Output.printHex4_END
D;JEQ
@SP
A=M
M=0
@SP
M=M+1
D=D-1
@Output.printHex4_LOOP
0;JMP
(Output.printHex4_END)

@ARG //push argument
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@10  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
D=M-D
M=-1
@lt49
D;JLT
@SP
A=M-1
M=0
(lt49)
@SP
AM=M-1
D=M
@Output.printHex4$if1
D;JNE
@Output.printHex4$ifelse1
0;JMP
(Output.printHex4$if1)
@48  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@ARG //push argument
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@1
D=A
@R14
M=D
@Output.printChar
D=A
@R13
M=D
@return240
D=A
@CALL
0;JMP
(return240)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@Output.printHex4$ifend1
0;JMP
(Output.printHex4$ifelse1)
@87  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@ARG //push argument
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@1
D=A
@R14
M=D
@Output.printChar
D=A
@R13
M=D
@return241
D=A
@CALL
0;JMP
(return241)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
(Output.printHex4$ifend1)
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@RETURN
0;JMP

(Output.printArray)
@1
D=A
(Output.printArray_LOOP)
@Output.printArray_END
D;JEQ
@SP
A=M
M=0
@SP
M=M+1
D=D-1
@Output.printArray_LOOP
0;JMP
(Output.printArray_END)

@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL //pop local
D=M
@0
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
(Output.printArray$while2)
@LCL //push local
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG //push argument
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
D=M-D
M=-1
@lt50
D;JLT
@SP
A=M-1
M=0
(lt50)
@SP  //not
A=M-1
M=!M
@SP
AM=M-1
D=M
@Output.printArray$whileend2
D;JNE
@ARG //push argument
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@LCL //push local
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@SP  //pop pointer
AM=M-1
D=M
@THAT
M=D
@THAT    //push that
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@Output.printHex8
D=A
@R13
M=D
@return242
D=A
@CALL
0;JMP
(return242)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@32  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@Output.printChar
D=A
@R13
M=D
@return243
D=A
@CALL
0;JMP
(return243)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@LCL //push local
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@LCL //pop local
D=M
@0
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@Output.printArray$while2
0;JMP
(Output.printArray$whileend2)
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@RETURN
0;JMP

(Output.println)
@0
D=A
(Output.println_LOOP)
@Output.println_END
D;JEQ
@SP
A=M
M=0
@SP
M=M+1
D=D-1
@Output.println_LOOP
0;JMP
(Output.println_END)

@Output.1   //push static
D=M
@SP
A=M
M=D
@SP
M=M+1
@2  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@SP  //pop static
AM=M-1
D=M
@Output.1
M=D
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //pop static
AM=M-1
D=M
@Output.0
M=D
@Output.1   //push static
D=M
@SP
A=M
M=D
@SP
M=M+1
@19  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
D=M-D
M=-1
@gt51
D;JGT
@SP
A=M-1
M=0
(gt51)
@SP
AM=M-1
D=M
@Output.println$if1
D;JNE
@Output.println$ifelse1
0;JMP
(Output.println$if1)
@Output.1   //push static
D=M
@SP
A=M
M=D
@SP
M=M+1
@20  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //sub
AM=M-1
D=M
A=A-1
M=M-D
@SP  //pop static
AM=M-1
D=M
@Output.1
M=D
(Output.println$ifelse1)
(Output.println$while5)
@Output.0   //push static
D=M
@SP
A=M
M=D
@SP
M=M+1
@40  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
D=M-D
M=-1
@lt52
D;JLT
@SP
A=M-1
M=0
(lt52)
@SP  //not
A=M-1
M=!M
@SP
AM=M-1
D=M
@Output.println$whileend5
D;JNE
@32  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@Output.drawChar
D=A
@R13
M=D
@return244
D=A
@CALL
0;JMP
(return244)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@Output.0   //push static
D=M
@SP
A=M
M=D
@SP
M=M+1
@1  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@SP  //pop static
AM=M-1
D=M
@Output.0
M=D
@Output.println$while5
0;JMP
(Output.println$whileend5)
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //pop static
AM=M-1
D=M
@Output.0
M=D
@Output.1   //push static
D=M
@SP
A=M
M=D
@SP
M=M+1
@1  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //sub
AM=M-1
D=M
A=A-1
M=M-D
@SP  //pop static
AM=M-1
D=M
@Output.1
M=D
@Output.1   //push static
D=M
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
D=M-D
M=-1
@lt53
D;JLT
@SP
A=M-1
M=0
(lt53)
@SP
AM=M-1
D=M
@Output.println$if10
D;JNE
@Output.println$ifelse10
0;JMP
(Output.println$if10)
@19  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //pop static
AM=M-1
D=M
@Output.1
M=D
(Output.println$ifelse10)
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@RETURN
0;JMP

(Output.backSpace)
@0
D=A
(Output.backSpace_LOOP)
@Output.backSpace_END
D;JEQ
@SP
A=M
M=0
@SP
M=M+1
D=D-1
@Output.backSpace_LOOP
0;JMP
(Output.backSpace_END)

@Output.0   //push static
D=M
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
D=M-D
M=-1
@gt54
D;JGT
@SP
A=M-1
M=0
(gt54)
@SP
AM=M-1
D=M
@Output.backSpace$if1
D;JNE
@Output.backSpace$ifelse1
0;JMP
(Output.backSpace$if1)
@Output.0   //push static
D=M
@SP
A=M
M=D
@SP
M=M+1
@1  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //sub
AM=M-1
D=M
A=A-1
M=M-D
@SP  //pop static
AM=M-1
D=M
@Output.0
M=D
@32  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@Output.drawChar
D=A
@R13
M=D
@return245
D=A
@CALL
0;JMP
(return245)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
(Output.backSpace$ifelse1)
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@RETURN
0;JMP

(Memory.init)
@0
D=A
(Memory.init_LOOP)
@Memory.init_END
D;JEQ
@SP
A=M
M=0
@SP
M=M+1
D=D-1
@Memory.init_LOOP
0;JMP
(Memory.init_END)

@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //pop static
AM=M-1
D=M
@Memory.0
M=D
@1024  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //pop static
AM=M-1
D=M
@Memory.1
M=D
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@Memory.1   //push static
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@2  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@SP  //pop pointer
AM=M-1
D=M
@THAT
M=D
@R5 //push temp
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT    //pop that
D=M
@0
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@1  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@Memory.1   //push static
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@Memory.1   //push static
D=M
@SP
A=M
M=D
@SP
M=M+1
@2  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@SP  //pop pointer
AM=M-1
D=M
@THAT
M=D
@R5 //push temp
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT    //pop that
D=M
@0
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@2  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@Memory.1   //push static
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@4096  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@Memory.1   //push static
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //sub
AM=M-1
D=M
A=A-1
M=M-D
@2  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //sub
AM=M-1
D=M
A=A-1
M=M-D
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@SP  //pop pointer
AM=M-1
D=M
@THAT
M=D
@R5 //push temp
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT    //pop that
D=M
@0
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@3  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@Memory.1   //push static
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@SP  //pop pointer
AM=M-1
D=M
@THAT
M=D
@R5 //push temp
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT    //pop that
D=M
@0
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@RETURN
0;JMP

(Memory.print)
@1
D=A
(Memory.print_LOOP)
@Memory.print_END
D;JEQ
@SP
A=M
M=0
@SP
M=M+1
D=D-1
@Memory.print_LOOP
0;JMP
(Memory.print_END)

@Memory.1   //push static
D=M
@SP
A=M
M=D
@SP
M=M+1
@LCL //pop local
D=M
@0
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
(Memory.print$while2)
@1  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //neg
A=M-1
M=-M
@SP  //not
A=M-1
M=!M
@SP
AM=M-1
D=M
@Memory.print$whileend2
D;JNE
@64  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@Output.printChar
D=A
@R13
M=D
@return246
D=A
@CALL
0;JMP
(return246)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@LCL //push local
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@Output.printInt
D=A
@R13
M=D
@return247
D=A
@CALL
0;JMP
(return247)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@58  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@Output.printChar
D=A
@R13
M=D
@return248
D=A
@CALL
0;JMP
(return248)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@LCL //push local
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@SP  //pop pointer
AM=M-1
D=M
@THAT
M=D
@THAT    //push that
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@Output.printInt
D=A
@R13
M=D
@return249
D=A
@CALL
0;JMP
(return249)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@LCL //push local
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@SP  //pop pointer
AM=M-1
D=M
@THAT
M=D
@THAT    //push that
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
D=D-M
M=-1
@eq55
D;JEQ
@SP
A=M-1
M=0
(eq55)
@SP
AM=M-1
D=M
@Memory.print$if11
D;JNE
@Memory.print$ifelse11
0;JMP
(Memory.print$if11)
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@RETURN
0;JMP

(Memory.print$ifelse11)
@LCL //push local
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@SP  //pop pointer
AM=M-1
D=M
@THAT
M=D
@THAT    //push that
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@LCL //pop local
D=M
@0
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@Memory.print$while2
0;JMP
(Memory.print$whileend2)
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@RETURN
0;JMP

(Memory.peek)
@0
D=A
(Memory.peek_LOOP)
@Memory.peek_END
D;JEQ
@SP
A=M
M=0
@SP
M=M+1
D=D-1
@Memory.peek_LOOP
0;JMP
(Memory.peek_END)

@Memory.0   //push static
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG //push argument
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@SP  //pop pointer
AM=M-1
D=M
@THAT
M=D
@THAT    //push that
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@RETURN
0;JMP

(Memory.poke)
@0
D=A
(Memory.poke_LOOP)
@Memory.poke_END
D;JEQ
@SP
A=M
M=0
@SP
M=M+1
D=D-1
@Memory.poke_LOOP
0;JMP
(Memory.poke_END)

@ARG //push argument
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@Memory.0   //push static
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@ARG //push argument
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@SP  //pop pointer
AM=M-1
D=M
@THAT
M=D
@R5 //push temp
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT    //pop that
D=M
@0
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@RETURN
0;JMP

(Memory.alloc)
@2
D=A
(Memory.alloc_LOOP)
@Memory.alloc_END
D;JEQ
@SP
A=M
M=0
@SP
M=M+1
D=D-1
@Memory.alloc_LOOP
0;JMP
(Memory.alloc_END)

@Memory.1   //push static
D=M
@SP
A=M
M=D
@SP
M=M+1
@LCL //pop local
D=M
@0
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@LCL //push local
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@SP  //pop pointer
AM=M-1
D=M
@THAT
M=D
@THAT    //push that
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@LCL //pop local
D=M
@1
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
(Memory.alloc$while2)
@LCL //push local
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@SP  //pop pointer
AM=M-1
D=M
@THAT
M=D
@THAT    //push that
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG //push argument
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@SP
AM=M-1
D=M
A=A-1
D=M-D
M=-1
@lt56
D;JLT
@SP
A=M-1
M=0
(lt56)
@SP  //not
A=M-1
M=!M
@SP
AM=M-1
D=M
@Memory.alloc$whileend2
D;JNE
@LCL //push local
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@LCL //pop local
D=M
@0
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@LCL //push local
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@SP  //pop pointer
AM=M-1
D=M
@THAT
M=D
@THAT    //push that
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@LCL //pop local
D=M
@1
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@LCL //push local
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
D=D-M
M=-1
@eq57
D;JEQ
@SP
A=M-1
M=0
(eq57)
@SP
AM=M-1
D=M
@Memory.alloc$if3
D;JNE
@Memory.alloc$ifelse3
0;JMP
(Memory.alloc$if3)
@6  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@Sys.error
D=A
@R13
M=D
@return250
D=A
@CALL
0;JMP
(return250)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
(Memory.alloc$ifelse3)
@Memory.alloc$while2
0;JMP
(Memory.alloc$whileend2)
@LCL //push local
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@SP  //pop pointer
AM=M-1
D=M
@THAT
M=D
@THAT    //push that
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG //push argument
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@3  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@SP
AM=M-1
D=M
A=A-1
D=M-D
M=-1
@lt58
D;JLT
@SP
A=M-1
M=0
(lt58)
@SP
AM=M-1
D=M
@Memory.alloc$if10
D;JNE
@Memory.alloc$ifelse10
0;JMP
(Memory.alloc$if10)
@1  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL //push local
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@LCL //push local
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@SP  //pop pointer
AM=M-1
D=M
@THAT
M=D
@THAT    //push that
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@SP  //pop pointer
AM=M-1
D=M
@THAT
M=D
@R5 //push temp
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT    //pop that
D=M
@0
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@LCL //push local
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@RETURN
0;JMP

@Memory.alloc$ifend10
0;JMP
(Memory.alloc$ifelse10)
@ARG //push argument
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@LCL //push local
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@LCL //push local
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@SP  //pop pointer
AM=M-1
D=M
@THAT
M=D
@THAT    //push that
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG //push argument
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@SP  //sub
AM=M-1
D=M
A=A-1
M=M-D
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@SP  //pop pointer
AM=M-1
D=M
@THAT
M=D
@R5 //push temp
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT    //pop that
D=M
@0
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL //push local
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@ARG //push argument
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@SP  //pop pointer
AM=M-1
D=M
@THAT
M=D
@R5 //push temp
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT    //pop that
D=M
@0
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@ARG //push argument
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@2  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@LCL //push local
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@LCL //push local
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@SP  //pop pointer
AM=M-1
D=M
@THAT
M=D
@THAT    //push that
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@SP  //pop pointer
AM=M-1
D=M
@THAT
M=D
@R5 //push temp
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT    //pop that
D=M
@0
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@1  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL //push local
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@LCL //push local
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG //push argument
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@1  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@SP  //pop pointer
AM=M-1
D=M
@THAT
M=D
@R5 //push temp
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT    //pop that
D=M
@0
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@LCL //push local
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@RETURN
0;JMP

(Memory.alloc$ifend10)
(Memory.deAlloc)
@2
D=A
(Memory.deAlloc_LOOP)
@Memory.deAlloc_END
D;JEQ
@SP
A=M
M=0
@SP
M=M+1
D=D-1
@Memory.deAlloc_LOOP
0;JMP
(Memory.deAlloc_END)

@ARG //push argument
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //sub
AM=M-1
D=M
A=A-1
M=M-D
@ARG //pop argument
D=M
@0
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@Memory.1   //push static
D=M
@SP
A=M
M=D
@SP
M=M+1
@LCL //pop local
D=M
@0
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@LCL //push local
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@SP  //pop pointer
AM=M-1
D=M
@THAT
M=D
@THAT    //push that
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@LCL //pop local
D=M
@1
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
(Memory.deAlloc$while2)
@LCL //push local
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG //push argument
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
D=M-D
M=-1
@lt59
D;JLT
@SP
A=M-1
M=0
(lt59)
@SP  //not
A=M-1
M=!M
@SP
AM=M-1
D=M
@Memory.deAlloc$whileend2
D;JNE
@LCL //push local
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@LCL //pop local
D=M
@0
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@LCL //push local
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@SP  //pop pointer
AM=M-1
D=M
@THAT
M=D
@THAT    //push that
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@LCL //pop local
D=M
@1
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@Memory.deAlloc$while2
0;JMP
(Memory.deAlloc$whileend2)
@ARG //push argument
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG //push argument
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@SP  //pop pointer
AM=M-1
D=M
@THAT
M=D
@THAT    //push that
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@LCL //push local
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
D=D-M
M=-1
@eq60
D;JEQ
@SP
A=M-1
M=0
(eq60)
@SP
AM=M-1
D=M
@Memory.deAlloc$if5
D;JNE
@Memory.deAlloc$ifelse5
0;JMP
(Memory.deAlloc$if5)
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@ARG //push argument
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@ARG //push argument
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@SP  //pop pointer
AM=M-1
D=M
@THAT
M=D
@THAT    //push that
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@LCL //push local
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@SP  //pop pointer
AM=M-1
D=M
@THAT
M=D
@THAT    //push that
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@SP  //pop pointer
AM=M-1
D=M
@THAT
M=D
@R5 //push temp
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT    //pop that
D=M
@0
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@1  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@ARG //push argument
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@LCL //push local
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@SP  //pop pointer
AM=M-1
D=M
@THAT
M=D
@THAT    //push that
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@SP  //pop pointer
AM=M-1
D=M
@THAT
M=D
@R5 //push temp
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT    //pop that
D=M
@0
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@1  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL //push local
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@ARG //push argument
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@SP  //pop pointer
AM=M-1
D=M
@THAT
M=D
@R5 //push temp
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT    //pop that
D=M
@0
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@Memory.deAlloc$ifend5
0;JMP
(Memory.deAlloc$ifelse5)
@1  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@ARG //push argument
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@LCL //push local
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@SP  //pop pointer
AM=M-1
D=M
@THAT
M=D
@R5 //push temp
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT    //pop that
D=M
@0
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
(Memory.deAlloc$ifend5)
@LCL //push local
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@Memory.1   //push static
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
D=M-D
M=-1
@gt61
D;JGT
@SP
A=M-1
M=0
(gt61)
@LCL //push local
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@LCL //push local
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@SP  //pop pointer
AM=M-1
D=M
@THAT
M=D
@THAT    //push that
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@ARG //push argument
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
D=D-M
M=-1
@eq62
D;JEQ
@SP
A=M-1
M=0
(eq62)
@SP  //and
AM=M-1
D=M
A=A-1
M=D&M
@SP
AM=M-1
D=M
@Memory.deAlloc$if10
D;JNE
@Memory.deAlloc$ifelse10
0;JMP
(Memory.deAlloc$if10)
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL //push local
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@LCL //push local
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@SP  //pop pointer
AM=M-1
D=M
@THAT
M=D
@THAT    //push that
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG //push argument
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@SP  //pop pointer
AM=M-1
D=M
@THAT
M=D
@THAT    //push that
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@SP  //pop pointer
AM=M-1
D=M
@THAT
M=D
@R5 //push temp
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT    //pop that
D=M
@0
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@1  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL //push local
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@ARG //push argument
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@SP  //pop pointer
AM=M-1
D=M
@THAT
M=D
@THAT    //push that
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@SP  //pop pointer
AM=M-1
D=M
@THAT
M=D
@R5 //push temp
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT    //pop that
D=M
@0
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@Memory.deAlloc$ifend10
0;JMP
(Memory.deAlloc$ifelse10)
@1  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL //push local
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@ARG //push argument
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@SP  //pop pointer
AM=M-1
D=M
@THAT
M=D
@R5 //push temp
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT    //pop that
D=M
@0
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
(Memory.deAlloc$ifend10)
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@RETURN
0;JMP

(ENC28J60.readControlRegister)
@1
D=A
(ENC28J60.readControlRegister_LOOP)
@ENC28J60.readControlRegister_END
D;JEQ
@SP
A=M
M=0
@SP
M=M+1
D=D-1
@ENC28J60.readControlRegister_LOOP
0;JMP
(ENC28J60.readControlRegister_END)

@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@ENC28J60.0   //push static
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@512  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@ARG //push argument
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //or
AM=M-1
D=M
A=A-1
M=D|M
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@SP  //pop pointer
AM=M-1
D=M
@THAT
M=D
@R5 //push temp
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT    //pop that
D=M
@0
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@ENC28J60.0   //push static
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@512  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@SP  //pop pointer
AM=M-1
D=M
@THAT
M=D
@R5 //push temp
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT    //pop that
D=M
@0
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@ENC28J60.0   //push static
D=M
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@SP  //pop pointer
AM=M-1
D=M
@THAT
M=D
@THAT    //push that
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@LCL //pop local
D=M
@0
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@ENC28J60.0   //push static
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@256  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@SP  //pop pointer
AM=M-1
D=M
@THAT
M=D
@R5 //push temp
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT    //pop that
D=M
@0
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@LCL //push local
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@RETURN
0;JMP

(ENC28J60.readBufferMemory)
@1
D=A
(ENC28J60.readBufferMemory_LOOP)
@ENC28J60.readBufferMemory_END
D;JEQ
@SP
A=M
M=0
@SP
M=M+1
D=D-1
@ENC28J60.readBufferMemory_LOOP
0;JMP
(ENC28J60.readBufferMemory_END)

@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@ENC28J60.0   //push static
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@512  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@58  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //or
AM=M-1
D=M
A=A-1
M=D|M
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@SP  //pop pointer
AM=M-1
D=M
@THAT
M=D
@R5 //push temp
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT    //pop that
D=M
@0
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL //pop local
D=M
@0
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
(ENC28J60.readBufferMemory$while2)
@LCL //push local
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG //push argument
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
D=M-D
M=-1
@lt63
D;JLT
@SP
A=M-1
M=0
(lt63)
@SP  //not
A=M-1
M=!M
@SP
AM=M-1
D=M
@ENC28J60.readBufferMemory$whileend2
D;JNE
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@ENC28J60.0   //push static
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@512  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@SP  //pop pointer
AM=M-1
D=M
@THAT
M=D
@R5 //push temp
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT    //pop that
D=M
@0
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@LCL //push local
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG //push argument
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@ENC28J60.0   //push static
D=M
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@SP  //pop pointer
AM=M-1
D=M
@THAT
M=D
@THAT    //push that
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@SP  //pop pointer
AM=M-1
D=M
@THAT
M=D
@R5 //push temp
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT    //pop that
D=M
@0
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@LCL //push local
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@LCL //pop local
D=M
@0
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@ENC28J60.readBufferMemory$while2
0;JMP
(ENC28J60.readBufferMemory$whileend2)
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@ENC28J60.0   //push static
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@256  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@SP  //pop pointer
AM=M-1
D=M
@THAT
M=D
@R5 //push temp
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT    //pop that
D=M
@0
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@RETURN
0;JMP

(ENC28J60.writeControlRegister)
@0
D=A
(ENC28J60.writeControlRegister_LOOP)
@ENC28J60.writeControlRegister_END
D;JEQ
@SP
A=M
M=0
@SP
M=M+1
D=D-1
@ENC28J60.writeControlRegister_LOOP
0;JMP
(ENC28J60.writeControlRegister_END)

@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@ENC28J60.0   //push static
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@512  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@64  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@ARG //push argument
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //or
AM=M-1
D=M
A=A-1
M=D|M
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@SP  //pop pointer
AM=M-1
D=M
@THAT
M=D
@R5 //push temp
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT    //pop that
D=M
@0
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@ENC28J60.0   //push static
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@512  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@ARG //push argument
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //or
AM=M-1
D=M
A=A-1
M=D|M
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@SP  //pop pointer
AM=M-1
D=M
@THAT
M=D
@R5 //push temp
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT    //pop that
D=M
@0
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@ENC28J60.0   //push static
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@256  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@SP  //pop pointer
AM=M-1
D=M
@THAT
M=D
@R5 //push temp
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT    //pop that
D=M
@0
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@RETURN
0;JMP

(ENC28J60.writeBufferMemory)
@2
D=A
(ENC28J60.writeBufferMemory_LOOP)
@ENC28J60.writeBufferMemory_END
D;JEQ
@SP
A=M
M=0
@SP
M=M+1
D=D-1
@ENC28J60.writeBufferMemory_LOOP
0;JMP
(ENC28J60.writeBufferMemory_END)

@ARG //push argument
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@String.length
D=A
@R13
M=D
@return251
D=A
@CALL
0;JMP
(return251)
@LCL //pop local
D=M
@1
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@ENC28J60.0   //push static
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@512  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@122  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //or
AM=M-1
D=M
A=A-1
M=D|M
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@SP  //pop pointer
AM=M-1
D=M
@THAT
M=D
@R5 //push temp
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT    //pop that
D=M
@0
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL //pop local
D=M
@0
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
(ENC28J60.writeBufferMemory$while2)
@LCL //push local
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@LCL //push local
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
D=M-D
M=-1
@lt64
D;JLT
@SP
A=M-1
M=0
(lt64)
@SP  //not
A=M-1
M=!M
@SP
AM=M-1
D=M
@ENC28J60.writeBufferMemory$whileend2
D;JNE
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@ENC28J60.0   //push static
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@512  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@ARG //push argument
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@LCL //push local
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.charAt
D=A
@R13
M=D
@return252
D=A
@CALL
0;JMP
(return252)
@SP  //or
AM=M-1
D=M
A=A-1
M=D|M
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@SP  //pop pointer
AM=M-1
D=M
@THAT
M=D
@R5 //push temp
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT    //pop that
D=M
@0
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@LCL //push local
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@LCL //pop local
D=M
@0
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@ENC28J60.writeBufferMemory$while2
0;JMP
(ENC28J60.writeBufferMemory$whileend2)
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@ENC28J60.0   //push static
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@256  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@SP  //pop pointer
AM=M-1
D=M
@THAT
M=D
@R5 //push temp
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT    //pop that
D=M
@0
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@RETURN
0;JMP

(ENC28J60.bitFieldSet)
@0
D=A
(ENC28J60.bitFieldSet_LOOP)
@ENC28J60.bitFieldSet_END
D;JEQ
@SP
A=M
M=0
@SP
M=M+1
D=D-1
@ENC28J60.bitFieldSet_LOOP
0;JMP
(ENC28J60.bitFieldSet_END)

@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@ENC28J60.0   //push static
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@512  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@128  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //or
AM=M-1
D=M
A=A-1
M=D|M
@ARG //push argument
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //or
AM=M-1
D=M
A=A-1
M=D|M
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@SP  //pop pointer
AM=M-1
D=M
@THAT
M=D
@R5 //push temp
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT    //pop that
D=M
@0
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@ENC28J60.0   //push static
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@512  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@ARG //push argument
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //or
AM=M-1
D=M
A=A-1
M=D|M
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@SP  //pop pointer
AM=M-1
D=M
@THAT
M=D
@R5 //push temp
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT    //pop that
D=M
@0
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@ENC28J60.0   //push static
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@256  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@SP  //pop pointer
AM=M-1
D=M
@THAT
M=D
@R5 //push temp
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT    //pop that
D=M
@0
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@RETURN
0;JMP

(ENC28J60.bitFieldClear)
@0
D=A
(ENC28J60.bitFieldClear_LOOP)
@ENC28J60.bitFieldClear_END
D;JEQ
@SP
A=M
M=0
@SP
M=M+1
D=D-1
@ENC28J60.bitFieldClear_LOOP
0;JMP
(ENC28J60.bitFieldClear_END)

@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@ENC28J60.0   //push static
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@512  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@160  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //or
AM=M-1
D=M
A=A-1
M=D|M
@ARG //push argument
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //or
AM=M-1
D=M
A=A-1
M=D|M
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@SP  //pop pointer
AM=M-1
D=M
@THAT
M=D
@R5 //push temp
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT    //pop that
D=M
@0
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@ENC28J60.0   //push static
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@512  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@ARG //push argument
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //or
AM=M-1
D=M
A=A-1
M=D|M
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@SP  //pop pointer
AM=M-1
D=M
@THAT
M=D
@R5 //push temp
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT    //pop that
D=M
@0
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@ENC28J60.0   //push static
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@256  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@SP  //pop pointer
AM=M-1
D=M
@THAT
M=D
@R5 //push temp
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT    //pop that
D=M
@0
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@RETURN
0;JMP

(ENC28J60.systemResetCommand)
@0
D=A
(ENC28J60.systemResetCommand_LOOP)
@ENC28J60.systemResetCommand_END
D;JEQ
@SP
A=M
M=0
@SP
M=M+1
D=D-1
@ENC28J60.systemResetCommand_LOOP
0;JMP
(ENC28J60.systemResetCommand_END)

@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@ENC28J60.0   //push static
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@512  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@255  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //or
AM=M-1
D=M
A=A-1
M=D|M
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@SP  //pop pointer
AM=M-1
D=M
@THAT
M=D
@R5 //push temp
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT    //pop that
D=M
@0
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@ENC28J60.0   //push static
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@256  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@SP  //pop pointer
AM=M-1
D=M
@THAT
M=D
@R5 //push temp
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT    //pop that
D=M
@0
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@RETURN
0;JMP

(ENC28J60.init)
@0
D=A
(ENC28J60.init_LOOP)
@ENC28J60.init_END
D;JEQ
@SP
A=M
M=0
@SP
M=M+1
D=D-1
@ENC28J60.init_LOOP
0;JMP
(ENC28J60.init_END)

@ARG //push argument
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //pop static
AM=M-1
D=M
@ENC28J60.0
M=D
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@ENC28J60.0   //push static
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@256  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@SP  //pop pointer
AM=M-1
D=M
@THAT
M=D
@R5 //push temp
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT    //pop that
D=M
@0
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@0
D=A
@R14
M=D
@ENC28J60.systemResetCommand
D=A
@R13
M=D
@return253
D=A
@CALL
0;JMP
(return253)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@2  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@Sys.wait
D=A
@R13
M=D
@return254
D=A
@CALL
0;JMP
(return254)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@8  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@ENC28J60.writeControlRegister
D=A
@R13
M=D
@return255
D=A
@CALL
0;JMP
(return255)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@9  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@ENC28J60.writeControlRegister
D=A
@R13
M=D
@return256
D=A
@CALL
0;JMP
(return256)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@10  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@255  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@ENC28J60.writeControlRegister
D=A
@R13
M=D
@return257
D=A
@CALL
0;JMP
(return257)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@11  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@15  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@ENC28J60.writeControlRegister
D=A
@R13
M=D
@return258
D=A
@CALL
0;JMP
(return258)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@12  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@255  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@ENC28J60.writeControlRegister
D=A
@R13
M=D
@return259
D=A
@CALL
0;JMP
(return259)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@13  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@15  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@ENC28J60.writeControlRegister
D=A
@R13
M=D
@return260
D=A
@CALL
0;JMP
(return260)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //pop static
AM=M-1
D=M
@ENC28J60.1
M=D
@31  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@ENC28J60.bitFieldSet
D=A
@R13
M=D
@return261
D=A
@CALL
0;JMP
(return261)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@13  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@ENC28J60.writeControlRegister
D=A
@R13
M=D
@return262
D=A
@CALL
0;JMP
(return262)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@2  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@50  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@ENC28J60.writeControlRegister
D=A
@R13
M=D
@return263
D=A
@CALL
0;JMP
(return263)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@3  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@128  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@ENC28J60.writeControlRegister
D=A
@R13
M=D
@return264
D=A
@CALL
0;JMP
(return264)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@4  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@18  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@ENC28J60.writeControlRegister
D=A
@R13
M=D
@return265
D=A
@CALL
0;JMP
(return265)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@6  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@18  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@ENC28J60.writeControlRegister
D=A
@R13
M=D
@return266
D=A
@CALL
0;JMP
(return266)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@7  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@12  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@ENC28J60.writeControlRegister
D=A
@R13
M=D
@return267
D=A
@CALL
0;JMP
(return267)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@31  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@3  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@ENC28J60.bitFieldSet
D=A
@R13
M=D
@return268
D=A
@CALL
0;JMP
(return268)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@4  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@ARG //push argument
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@SP  //pop pointer
AM=M-1
D=M
@THAT
M=D
@THAT    //push that
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@ENC28J60.writeControlRegister
D=A
@R13
M=D
@return269
D=A
@CALL
0;JMP
(return269)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@5  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@ARG //push argument
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@SP  //pop pointer
AM=M-1
D=M
@THAT
M=D
@THAT    //push that
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@ENC28J60.writeControlRegister
D=A
@R13
M=D
@return270
D=A
@CALL
0;JMP
(return270)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@2  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@ARG //push argument
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@2  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@SP  //pop pointer
AM=M-1
D=M
@THAT
M=D
@THAT    //push that
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@ENC28J60.writeControlRegister
D=A
@R13
M=D
@return271
D=A
@CALL
0;JMP
(return271)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@3  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@ARG //push argument
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@3  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@SP  //pop pointer
AM=M-1
D=M
@THAT
M=D
@THAT    //push that
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@ENC28J60.writeControlRegister
D=A
@R13
M=D
@return272
D=A
@CALL
0;JMP
(return272)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@ARG //push argument
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@4  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@SP  //pop pointer
AM=M-1
D=M
@THAT
M=D
@THAT    //push that
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@ENC28J60.writeControlRegister
D=A
@R13
M=D
@return273
D=A
@CALL
0;JMP
(return273)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@1  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@ARG //push argument
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@5  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@SP  //pop pointer
AM=M-1
D=M
@THAT
M=D
@THAT    //push that
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@ENC28J60.writeControlRegister
D=A
@R13
M=D
@return274
D=A
@CALL
0;JMP
(return274)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@31  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@1  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@ENC28J60.bitFieldClear
D=A
@R13
M=D
@return275
D=A
@CALL
0;JMP
(return275)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@20  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@16  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@ENC28J60.writeControlRegister
D=A
@R13
M=D
@return276
D=A
@CALL
0;JMP
(return276)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@22  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@ENC28J60.writeControlRegister
D=A
@R13
M=D
@return277
D=A
@CALL
0;JMP
(return277)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@23  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@1  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@ENC28J60.writeControlRegister
D=A
@R13
M=D
@return278
D=A
@CALL
0;JMP
(return278)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@1  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@Sys.wait
D=A
@R13
M=D
@return279
D=A
@CALL
0;JMP
(return279)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@31  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@3  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@ENC28J60.bitFieldClear
D=A
@R13
M=D
@return280
D=A
@CALL
0;JMP
(return280)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@31  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@4  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@ENC28J60.bitFieldSet
D=A
@R13
M=D
@return281
D=A
@CALL
0;JMP
(return281)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@RETURN
0;JMP

(ENC28J60.transmitPacket)
@4
D=A
(ENC28J60.transmitPacket_LOOP)
@ENC28J60.transmitPacket_END
D;JEQ
@SP
A=M
M=0
@SP
M=M+1
D=D-1
@ENC28J60.transmitPacket_LOOP
0;JMP
(ENC28J60.transmitPacket_END)

@2  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@ENC28J60.writeControlRegister
D=A
@R13
M=D
@return282
D=A
@CALL
0;JMP
(return282)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@3  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@16  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@ENC28J60.writeControlRegister
D=A
@R13
M=D
@return283
D=A
@CALL
0;JMP
(return283)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@1  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@String.new
D=A
@R13
M=D
@return284
D=A
@CALL
0;JMP
(return284)
@LCL //pop local
D=M
@1
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@LCL //push local
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return285
D=A
@CALL
0;JMP
(return285)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@LCL //push local
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG //push argument
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@List.new
D=A
@R13
M=D
@return286
D=A
@CALL
0;JMP
(return286)
@LCL //pop local
D=M
@2
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@16  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@256  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@Math.multiply
D=A
@R13
M=D
@return287
D=A
@CALL
0;JMP
(return287)
@LCL //pop local
D=M
@0
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@LCL //push local
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG //pop argument
D=M
@0
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
(ENC28J60.transmitPacket$while8)
@ARG //push argument
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
D=D-M
M=-1
@eq65
D;JEQ
@SP
A=M-1
M=0
(eq65)
@SP  //not
A=M-1
M=!M
@SP  //not
A=M-1
M=!M
@SP
AM=M-1
D=M
@ENC28J60.transmitPacket$whileend8
D;JNE
@ARG //push argument
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@List.getData
D=A
@R13
M=D
@return288
D=A
@CALL
0;JMP
(return288)
@LCL //pop local
D=M
@3
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@LCL //push local
D=M
@3
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@ENC28J60.writeBufferMemory
D=A
@R13
M=D
@return289
D=A
@CALL
0;JMP
(return289)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@LCL //push local
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@LCL //push local
D=M
@3
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@String.length
D=A
@R13
M=D
@return290
D=A
@CALL
0;JMP
(return290)
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@LCL //pop local
D=M
@0
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@ARG //push argument
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@List.getNext
D=A
@R13
M=D
@return291
D=A
@CALL
0;JMP
(return291)
@ARG //pop argument
D=M
@0
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@ENC28J60.transmitPacket$while8
0;JMP
(ENC28J60.transmitPacket$whileend8)
@LCL //push local
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //sub
AM=M-1
D=M
A=A-1
M=M-D
@LCL //pop local
D=M
@0
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@LCL //push local
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@List.pop
D=A
@R13
M=D
@return292
D=A
@CALL
0;JMP
(return292)
@LCL //pop local
D=M
@2
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@4  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@ENC28J60.writeControlRegister
D=A
@R13
M=D
@return293
D=A
@CALL
0;JMP
(return293)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@5  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@16  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@ENC28J60.writeControlRegister
D=A
@R13
M=D
@return294
D=A
@CALL
0;JMP
(return294)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@6  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL //push local
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@255  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //and
AM=M-1
D=M
A=A-1
M=D&M
@2
D=A
@R14
M=D
@ENC28J60.writeControlRegister
D=A
@R13
M=D
@return295
D=A
@CALL
0;JMP
(return295)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@7  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL //push local
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@256  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@Math.divide
D=A
@R13
M=D
@return296
D=A
@CALL
0;JMP
(return296)
@2
D=A
@R14
M=D
@ENC28J60.writeControlRegister
D=A
@R13
M=D
@return297
D=A
@CALL
0;JMP
(return297)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@31  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@128  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@ENC28J60.bitFieldSet
D=A
@R13
M=D
@return298
D=A
@CALL
0;JMP
(return298)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@31  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@128  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@ENC28J60.bitFieldClear
D=A
@R13
M=D
@return299
D=A
@CALL
0;JMP
(return299)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@31  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@8  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@ENC28J60.bitFieldSet
D=A
@R13
M=D
@return300
D=A
@CALL
0;JMP
(return300)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
(ENC28J60.transmitPacket$while28)
@31  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@ENC28J60.readControlRegister
D=A
@R13
M=D
@return301
D=A
@CALL
0;JMP
(return301)
@8  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //and
AM=M-1
D=M
A=A-1
M=D&M
@8  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
D=D-M
M=-1
@eq66
D;JEQ
@SP
A=M-1
M=0
(eq66)
@SP  //not
A=M-1
M=!M
@SP
AM=M-1
D=M
@ENC28J60.transmitPacket$whileend28
D;JNE
@ENC28J60.transmitPacket$while28
0;JMP
(ENC28J60.transmitPacket$whileend28)
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@RETURN
0;JMP

(ENC28J60.receivePacket)
@4
D=A
(ENC28J60.receivePacket_LOOP)
@ENC28J60.receivePacket_END
D;JEQ
@SP
A=M
M=0
@SP
M=M+1
D=D-1
@ENC28J60.receivePacket_LOOP
0;JMP
(ENC28J60.receivePacket_END)

@31  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@1  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@ENC28J60.bitFieldSet
D=A
@R13
M=D
@return302
D=A
@CALL
0;JMP
(return302)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@25  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@ENC28J60.readControlRegister
D=A
@R13
M=D
@return303
D=A
@CALL
0;JMP
(return303)
@LCL //pop local
D=M
@3
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@31  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@3  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@ENC28J60.bitFieldClear
D=A
@R13
M=D
@return304
D=A
@CALL
0;JMP
(return304)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@LCL //push local
D=M
@3
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
D=M-D
M=-1
@gt67
D;JGT
@SP
A=M-1
M=0
(gt67)
@SP
AM=M-1
D=M
@ENC28J60.receivePacket$if5
D;JNE
@ENC28J60.receivePacket$ifelse5
0;JMP
(ENC28J60.receivePacket$if5)
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@ENC28J60.1   //push static
D=M
@SP
A=M
M=D
@SP
M=M+1
@255  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //and
AM=M-1
D=M
A=A-1
M=D&M
@2
D=A
@R14
M=D
@ENC28J60.writeControlRegister
D=A
@R13
M=D
@return305
D=A
@CALL
0;JMP
(return305)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@1  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@ENC28J60.1   //push static
D=M
@SP
A=M
M=D
@SP
M=M+1
@256  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@Math.divide
D=A
@R13
M=D
@return306
D=A
@CALL
0;JMP
(return306)
@2
D=A
@R14
M=D
@ENC28J60.writeControlRegister
D=A
@R13
M=D
@return307
D=A
@CALL
0;JMP
(return307)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@6  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@Array.new
D=A
@R13
M=D
@return308
D=A
@CALL
0;JMP
(return308)
@LCL //pop local
D=M
@0
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@LCL //push local
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@6  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@ENC28J60.readBufferMemory
D=A
@R13
M=D
@return309
D=A
@CALL
0;JMP
(return309)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@LCL //push local
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@2  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@SP  //pop pointer
AM=M-1
D=M
@THAT
M=D
@THAT    //push that
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@LCL //push local
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@3  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@SP  //pop pointer
AM=M-1
D=M
@THAT
M=D
@THAT    //push that
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@256  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@Math.multiply
D=A
@R13
M=D
@return310
D=A
@CALL
0;JMP
(return310)
@SP  //or
AM=M-1
D=M
A=A-1
M=D|M
@4  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //sub
AM=M-1
D=M
A=A-1
M=M-D
@LCL //pop local
D=M
@1
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@LCL //push local
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@SP  //pop pointer
AM=M-1
D=M
@THAT
M=D
@THAT    //push that
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@LCL //push local
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@SP  //pop pointer
AM=M-1
D=M
@THAT
M=D
@THAT    //push that
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@256  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@Math.multiply
D=A
@R13
M=D
@return311
D=A
@CALL
0;JMP
(return311)
@SP  //or
AM=M-1
D=M
A=A-1
M=D|M
@SP  //pop static
AM=M-1
D=M
@ENC28J60.1
M=D
@LCL //push local
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@Array.dispose
D=A
@R13
M=D
@return312
D=A
@CALL
0;JMP
(return312)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@LCL //push local
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@Array.new
D=A
@R13
M=D
@return313
D=A
@CALL
0;JMP
(return313)
@LCL //pop local
D=M
@0
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@LCL //push local
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@LCL //push local
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@ENC28J60.readBufferMemory
D=A
@R13
M=D
@return314
D=A
@CALL
0;JMP
(return314)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@ENC28J60.1   //push static
D=M
@SP
A=M
M=D
@SP
M=M+1
@LCL //pop local
D=M
@2
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@LCL //push local
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
D=D-M
M=-1
@eq68
D;JEQ
@SP
A=M-1
M=0
(eq68)
@SP
AM=M-1
D=M
@ENC28J60.receivePacket$if16
D;JNE
@ENC28J60.receivePacket$ifelse16
0;JMP
(ENC28J60.receivePacket$if16)
@15  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@256  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@Math.multiply
D=A
@R13
M=D
@return315
D=A
@CALL
0;JMP
(return315)
@255  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@LCL //pop local
D=M
@2
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@ENC28J60.receivePacket$ifend16
0;JMP
(ENC28J60.receivePacket$ifelse16)
@LCL //push local
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //sub
AM=M-1
D=M
A=A-1
M=M-D
@LCL //pop local
D=M
@2
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
(ENC28J60.receivePacket$ifend16)
@12  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL //push local
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@255  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //and
AM=M-1
D=M
A=A-1
M=D&M
@2
D=A
@R14
M=D
@ENC28J60.writeControlRegister
D=A
@R13
M=D
@return316
D=A
@CALL
0;JMP
(return316)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@13  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL //push local
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@256  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@Math.divide
D=A
@R13
M=D
@return317
D=A
@CALL
0;JMP
(return317)
@2
D=A
@R14
M=D
@ENC28J60.writeControlRegister
D=A
@R13
M=D
@return318
D=A
@CALL
0;JMP
(return318)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@30  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@64  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@ENC28J60.bitFieldSet
D=A
@R13
M=D
@return319
D=A
@CALL
0;JMP
(return319)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@LCL //push local
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@LCL //push local
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@Ethernet.read
D=A
@R13
M=D
@return320
D=A
@CALL
0;JMP
(return320)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@LCL //push local
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@Array.dispose
D=A
@R13
M=D
@return321
D=A
@CALL
0;JMP
(return321)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
(ENC28J60.receivePacket$ifelse5)
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@RETURN
0;JMP

(Network.init)
@0
D=A
(Network.init_LOOP)
@Network.init_END
D;JEQ
@SP
A=M
M=0
@SP
M=M+1
D=D-1
@Network.init_LOOP
0;JMP
(Network.init_END)

@4  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@Array.new
D=A
@R13
M=D
@return322
D=A
@CALL
0;JMP
(return322)
@SP  //pop static
AM=M-1
D=M
@Network.0
M=D
@6  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@Array.new
D=A
@R13
M=D
@return323
D=A
@CALL
0;JMP
(return323)
@SP  //pop static
AM=M-1
D=M
@Network.1
M=D
@4  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@Array.new
D=A
@R13
M=D
@return324
D=A
@CALL
0;JMP
(return324)
@SP  //pop static
AM=M-1
D=M
@Network.2
M=D
@6  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@Array.new
D=A
@R13
M=D
@return325
D=A
@CALL
0;JMP
(return325)
@SP  //pop static
AM=M-1
D=M
@Network.3
M=D
@4  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@Array.new
D=A
@R13
M=D
@return326
D=A
@CALL
0;JMP
(return326)
@SP  //pop static
AM=M-1
D=M
@Network.4
M=D
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@Network.4   //push static
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@255  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@SP  //pop pointer
AM=M-1
D=M
@THAT
M=D
@R5 //push temp
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT    //pop that
D=M
@0
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@1  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@Network.4   //push static
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@255  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@SP  //pop pointer
AM=M-1
D=M
@THAT
M=D
@R5 //push temp
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT    //pop that
D=M
@0
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@2  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@Network.4   //push static
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@255  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@SP  //pop pointer
AM=M-1
D=M
@THAT
M=D
@R5 //push temp
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT    //pop that
D=M
@0
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@3  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@Network.4   //push static
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@SP  //pop pointer
AM=M-1
D=M
@THAT
M=D
@R5 //push temp
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT    //pop that
D=M
@0
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@Network.3   //push static
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@255  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@SP  //pop pointer
AM=M-1
D=M
@THAT
M=D
@R5 //push temp
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT    //pop that
D=M
@0
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@1  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@Network.3   //push static
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@255  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@SP  //pop pointer
AM=M-1
D=M
@THAT
M=D
@R5 //push temp
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT    //pop that
D=M
@0
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@2  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@Network.3   //push static
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@255  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@SP  //pop pointer
AM=M-1
D=M
@THAT
M=D
@R5 //push temp
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT    //pop that
D=M
@0
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@3  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@Network.3   //push static
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@255  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@SP  //pop pointer
AM=M-1
D=M
@THAT
M=D
@R5 //push temp
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT    //pop that
D=M
@0
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@4  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@Network.3   //push static
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@255  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@SP  //pop pointer
AM=M-1
D=M
@THAT
M=D
@R5 //push temp
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT    //pop that
D=M
@0
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@5  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@Network.3   //push static
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@255  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@SP  //pop pointer
AM=M-1
D=M
@THAT
M=D
@R5 //push temp
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT    //pop that
D=M
@0
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@Network.0   //push static
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@192  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@SP  //pop pointer
AM=M-1
D=M
@THAT
M=D
@R5 //push temp
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT    //pop that
D=M
@0
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@1  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@Network.0   //push static
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@168  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@SP  //pop pointer
AM=M-1
D=M
@THAT
M=D
@R5 //push temp
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT    //pop that
D=M
@0
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@2  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@Network.0   //push static
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@1  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@SP  //pop pointer
AM=M-1
D=M
@THAT
M=D
@R5 //push temp
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT    //pop that
D=M
@0
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@3  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@Network.0   //push static
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@42  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@SP  //pop pointer
AM=M-1
D=M
@THAT
M=D
@R5 //push temp
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT    //pop that
D=M
@0
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@Network.2   //push static
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@192  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@SP  //pop pointer
AM=M-1
D=M
@THAT
M=D
@R5 //push temp
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT    //pop that
D=M
@0
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@1  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@Network.2   //push static
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@168  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@SP  //pop pointer
AM=M-1
D=M
@THAT
M=D
@R5 //push temp
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT    //pop that
D=M
@0
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@2  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@Network.2   //push static
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@1  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@SP  //pop pointer
AM=M-1
D=M
@THAT
M=D
@R5 //push temp
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT    //pop that
D=M
@0
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@3  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@Network.2   //push static
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@1  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@SP  //pop pointer
AM=M-1
D=M
@THAT
M=D
@R5 //push temp
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT    //pop that
D=M
@0
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@Network.1   //push static
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@222  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@SP  //pop pointer
AM=M-1
D=M
@THAT
M=D
@R5 //push temp
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT    //pop that
D=M
@0
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@1  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@Network.1   //push static
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@173  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@SP  //pop pointer
AM=M-1
D=M
@THAT
M=D
@R5 //push temp
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT    //pop that
D=M
@0
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@2  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@Network.1   //push static
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@190  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@SP  //pop pointer
AM=M-1
D=M
@THAT
M=D
@R5 //push temp
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT    //pop that
D=M
@0
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@3  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@Network.1   //push static
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@239  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@SP  //pop pointer
AM=M-1
D=M
@THAT
M=D
@R5 //push temp
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT    //pop that
D=M
@0
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@4  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@Network.1   //push static
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@254  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@SP  //pop pointer
AM=M-1
D=M
@THAT
M=D
@R5 //push temp
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT    //pop that
D=M
@0
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@5  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@Network.1   //push static
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@237  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@SP  //pop pointer
AM=M-1
D=M
@THAT
M=D
@R5 //push temp
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT    //pop that
D=M
@0
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@ARG //push argument
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@Network.1   //push static
D=M
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@ENC28J60.init
D=A
@R13
M=D
@return327
D=A
@CALL
0;JMP
(return327)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@0
D=A
@R14
M=D
@ARP.init
D=A
@R13
M=D
@return328
D=A
@CALL
0;JMP
(return328)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@0
D=A
@R14
M=D
@TCP.init
D=A
@R13
M=D
@return329
D=A
@CALL
0;JMP
(return329)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@RETURN
0;JMP

(Network.getMyMAC)
@0
D=A
(Network.getMyMAC_LOOP)
@Network.getMyMAC_END
D;JEQ
@SP
A=M
M=0
@SP
M=M+1
D=D-1
@Network.getMyMAC_LOOP
0;JMP
(Network.getMyMAC_END)

@Network.1   //push static
D=M
@SP
A=M
M=D
@SP
M=M+1
@RETURN
0;JMP

(Network.getBroadcast)
@0
D=A
(Network.getBroadcast_LOOP)
@Network.getBroadcast_END
D;JEQ
@SP
A=M
M=0
@SP
M=M+1
D=D-1
@Network.getBroadcast_LOOP
0;JMP
(Network.getBroadcast_END)

@Network.3   //push static
D=M
@SP
A=M
M=D
@SP
M=M+1
@RETURN
0;JMP

(Network.getMyIP)
@0
D=A
(Network.getMyIP_LOOP)
@Network.getMyIP_END
D;JEQ
@SP
A=M
M=0
@SP
M=M+1
D=D-1
@Network.getMyIP_LOOP
0;JMP
(Network.getMyIP_END)

@Network.0   //push static
D=M
@SP
A=M
M=D
@SP
M=M+1
@RETURN
0;JMP

(Network.getMyGateway)
@0
D=A
(Network.getMyGateway_LOOP)
@Network.getMyGateway_END
D;JEQ
@SP
A=M
M=0
@SP
M=M+1
D=D-1
@Network.getMyGateway_LOOP
0;JMP
(Network.getMyGateway_END)

@Network.2   //push static
D=M
@SP
A=M
M=D
@SP
M=M+1
@RETURN
0;JMP

(Network.isMyIP)
@0
D=A
(Network.isMyIP_LOOP)
@Network.isMyIP_END
D;JEQ
@SP
A=M
M=0
@SP
M=M+1
D=D-1
@Network.isMyIP_LOOP
0;JMP
(Network.isMyIP_END)

@ARG //push argument
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@Network.0   //push static
D=M
@SP
A=M
M=D
@SP
M=M+1
@4  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@3
D=A
@R14
M=D
@Array.isEqual
D=A
@R13
M=D
@return330
D=A
@CALL
0;JMP
(return330)
@RETURN
0;JMP

(Network.isMyMAC)
@0
D=A
(Network.isMyMAC_LOOP)
@Network.isMyMAC_END
D;JEQ
@SP
A=M
M=0
@SP
M=M+1
D=D-1
@Network.isMyMAC_LOOP
0;JMP
(Network.isMyMAC_END)

@ARG //push argument
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@Network.1   //push static
D=M
@SP
A=M
M=D
@SP
M=M+1
@6  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@3
D=A
@R14
M=D
@Array.isEqual
D=A
@R13
M=D
@return331
D=A
@CALL
0;JMP
(return331)
@RETURN
0;JMP

(Network.isBroadcastMAC)
@0
D=A
(Network.isBroadcastMAC_LOOP)
@Network.isBroadcastMAC_END
D;JEQ
@SP
A=M
M=0
@SP
M=M+1
D=D-1
@Network.isBroadcastMAC_LOOP
0;JMP
(Network.isBroadcastMAC_END)

@ARG //push argument
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@Network.3   //push static
D=M
@SP
A=M
M=D
@SP
M=M+1
@6  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@3
D=A
@R14
M=D
@Array.isEqual
D=A
@R13
M=D
@return332
D=A
@CALL
0;JMP
(return332)
@RETURN
0;JMP

(Network.isBroadcastIP)
@0
D=A
(Network.isBroadcastIP_LOOP)
@Network.isBroadcastIP_END
D;JEQ
@SP
A=M
M=0
@SP
M=M+1
D=D-1
@Network.isBroadcastIP_LOOP
0;JMP
(Network.isBroadcastIP_END)

@ARG //push argument
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@Network.3   //push static
D=M
@SP
A=M
M=D
@SP
M=M+1
@4  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@3
D=A
@R14
M=D
@Array.isEqual
D=A
@R13
M=D
@return333
D=A
@CALL
0;JMP
(return333)
@RETURN
0;JMP

(Network.isMyLAN)
@1
D=A
(Network.isMyLAN_LOOP)
@Network.isMyLAN_END
D;JEQ
@SP
A=M
M=0
@SP
M=M+1
D=D-1
@Network.isMyLAN_LOOP
0;JMP
(Network.isMyLAN_END)

@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL //pop local
D=M
@0
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
(Network.isMyLAN$while2)
@LCL //push local
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@4  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
D=M-D
M=-1
@lt69
D;JLT
@SP
A=M-1
M=0
(lt69)
@SP  //not
A=M-1
M=!M
@SP
AM=M-1
D=M
@Network.isMyLAN$whileend2
D;JNE
@ARG //push argument
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@LCL //push local
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@SP  //pop pointer
AM=M-1
D=M
@THAT
M=D
@THAT    //push that
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@Network.4   //push static
D=M
@SP
A=M
M=D
@SP
M=M+1
@LCL //push local
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@SP  //pop pointer
AM=M-1
D=M
@THAT
M=D
@THAT    //push that
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //and
AM=M-1
D=M
A=A-1
M=D&M
@Network.0   //push static
D=M
@SP
A=M
M=D
@SP
M=M+1
@LCL //push local
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@SP  //pop pointer
AM=M-1
D=M
@THAT
M=D
@THAT    //push that
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@Network.4   //push static
D=M
@SP
A=M
M=D
@SP
M=M+1
@LCL //push local
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@SP  //pop pointer
AM=M-1
D=M
@THAT
M=D
@THAT    //push that
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //and
AM=M-1
D=M
A=A-1
M=D&M
@SP
AM=M-1
D=M
A=A-1
D=D-M
M=-1
@eq70
D;JEQ
@SP
A=M-1
M=0
(eq70)
@SP  //not
A=M-1
M=!M
@SP
AM=M-1
D=M
@Network.isMyLAN$if3
D;JNE
@Network.isMyLAN$ifelse3
0;JMP
(Network.isMyLAN$if3)
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@RETURN
0;JMP

(Network.isMyLAN$ifelse3)
@LCL //push local
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@LCL //pop local
D=M
@0
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@Network.isMyLAN$while2
0;JMP
(Network.isMyLAN$whileend2)
@1  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //neg
A=M-1
M=-M
@RETURN
0;JMP

(Network.print)
@0
D=A
(Network.print_LOOP)
@Network.print_END
D;JEQ
@SP
A=M
M=0
@SP
M=M+1
D=D-1
@Network.print_LOOP
0;JMP
(Network.print_END)

@8  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@String.new
D=A
@R13
M=D
@return334
D=A
@CALL
0;JMP
(return334)
@78  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return335
D=A
@CALL
0;JMP
(return335)
@101  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return336
D=A
@CALL
0;JMP
(return336)
@116  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return337
D=A
@CALL
0;JMP
(return337)
@119  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return338
D=A
@CALL
0;JMP
(return338)
@111  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return339
D=A
@CALL
0;JMP
(return339)
@114  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return340
D=A
@CALL
0;JMP
(return340)
@107  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return341
D=A
@CALL
0;JMP
(return341)
@58  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return342
D=A
@CALL
0;JMP
(return342)
@1
D=A
@R14
M=D
@Output.printString
D=A
@R13
M=D
@return343
D=A
@CALL
0;JMP
(return343)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@0
D=A
@R14
M=D
@Output.println
D=A
@R13
M=D
@return344
D=A
@CALL
0;JMP
(return344)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@5  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@String.new
D=A
@R13
M=D
@return345
D=A
@CALL
0;JMP
(return345)
@77  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return346
D=A
@CALL
0;JMP
(return346)
@65  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return347
D=A
@CALL
0;JMP
(return347)
@67  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return348
D=A
@CALL
0;JMP
(return348)
@58  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return349
D=A
@CALL
0;JMP
(return349)
@32  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return350
D=A
@CALL
0;JMP
(return350)
@1
D=A
@R14
M=D
@Output.printString
D=A
@R13
M=D
@return351
D=A
@CALL
0;JMP
(return351)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@Network.1   //push static
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@Address.printMAC
D=A
@R13
M=D
@return352
D=A
@CALL
0;JMP
(return352)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@0
D=A
@R14
M=D
@Output.println
D=A
@R13
M=D
@return353
D=A
@CALL
0;JMP
(return353)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@4  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@String.new
D=A
@R13
M=D
@return354
D=A
@CALL
0;JMP
(return354)
@73  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return355
D=A
@CALL
0;JMP
(return355)
@80  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return356
D=A
@CALL
0;JMP
(return356)
@58  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return357
D=A
@CALL
0;JMP
(return357)
@32  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return358
D=A
@CALL
0;JMP
(return358)
@1
D=A
@R14
M=D
@Output.printString
D=A
@R13
M=D
@return359
D=A
@CALL
0;JMP
(return359)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@Network.0   //push static
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@Address.printIP
D=A
@R13
M=D
@return360
D=A
@CALL
0;JMP
(return360)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@0
D=A
@R14
M=D
@Output.println
D=A
@R13
M=D
@return361
D=A
@CALL
0;JMP
(return361)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@9  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@String.new
D=A
@R13
M=D
@return362
D=A
@CALL
0;JMP
(return362)
@103  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return363
D=A
@CALL
0;JMP
(return363)
@97  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return364
D=A
@CALL
0;JMP
(return364)
@116  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return365
D=A
@CALL
0;JMP
(return365)
@101  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return366
D=A
@CALL
0;JMP
(return366)
@119  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return367
D=A
@CALL
0;JMP
(return367)
@97  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return368
D=A
@CALL
0;JMP
(return368)
@121  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return369
D=A
@CALL
0;JMP
(return369)
@58  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return370
D=A
@CALL
0;JMP
(return370)
@32  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return371
D=A
@CALL
0;JMP
(return371)
@1
D=A
@R14
M=D
@Output.printString
D=A
@R13
M=D
@return372
D=A
@CALL
0;JMP
(return372)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@Network.2   //push static
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@Address.printIP
D=A
@R13
M=D
@return373
D=A
@CALL
0;JMP
(return373)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@0
D=A
@R14
M=D
@Output.println
D=A
@R13
M=D
@return374
D=A
@CALL
0;JMP
(return374)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@9  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@String.new
D=A
@R13
M=D
@return375
D=A
@CALL
0;JMP
(return375)
@110  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return376
D=A
@CALL
0;JMP
(return376)
@101  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return377
D=A
@CALL
0;JMP
(return377)
@116  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return378
D=A
@CALL
0;JMP
(return378)
@109  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return379
D=A
@CALL
0;JMP
(return379)
@97  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return380
D=A
@CALL
0;JMP
(return380)
@115  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return381
D=A
@CALL
0;JMP
(return381)
@107  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return382
D=A
@CALL
0;JMP
(return382)
@58  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return383
D=A
@CALL
0;JMP
(return383)
@32  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return384
D=A
@CALL
0;JMP
(return384)
@1
D=A
@R14
M=D
@Output.printString
D=A
@R13
M=D
@return385
D=A
@CALL
0;JMP
(return385)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@Network.4   //push static
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@Address.printIP
D=A
@R13
M=D
@return386
D=A
@CALL
0;JMP
(return386)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@0
D=A
@R14
M=D
@Output.println
D=A
@R13
M=D
@return387
D=A
@CALL
0;JMP
(return387)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@RETURN
0;JMP

(Socket.new)
@0
D=A
(Socket.new_LOOP)
@Socket.new_END
D;JEQ
@SP
A=M
M=0
@SP
M=M+1
D=D-1
@Socket.new_LOOP
0;JMP
(Socket.new_END)

@10  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@Memory.alloc
D=A
@R13
M=D
@return388
D=A
@CALL
0;JMP
(return388)
@SP  //pop pointer
AM=M-1
D=M
@THIS
M=D
@ARG //push argument
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS    //pop this
D=M
@9
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@4  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@Array.new
D=A
@R13
M=D
@return389
D=A
@CALL
0;JMP
(return389)
@THIS    //pop this
D=M
@0
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@THIS    //push this
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@ARG //push argument
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@SP  //pop pointer
AM=M-1
D=M
@THAT
M=D
@THAT    //push that
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@SP  //pop pointer
AM=M-1
D=M
@THAT
M=D
@R5 //push temp
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT    //pop that
D=M
@0
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@1  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@THIS    //push this
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@ARG //push argument
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@SP  //pop pointer
AM=M-1
D=M
@THAT
M=D
@THAT    //push that
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@SP  //pop pointer
AM=M-1
D=M
@THAT
M=D
@R5 //push temp
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT    //pop that
D=M
@0
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@2  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@THIS    //push this
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@ARG //push argument
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@2  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@SP  //pop pointer
AM=M-1
D=M
@THAT
M=D
@THAT    //push that
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@SP  //pop pointer
AM=M-1
D=M
@THAT
M=D
@R5 //push temp
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT    //pop that
D=M
@0
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@3  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@THIS    //push this
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@ARG //push argument
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@3  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@SP  //pop pointer
AM=M-1
D=M
@THAT
M=D
@THAT    //push that
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@SP  //pop pointer
AM=M-1
D=M
@THAT
M=D
@R5 //push temp
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT    //pop that
D=M
@0
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@ARG //push argument
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS    //pop this
D=M
@1
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@THIS    //pop this
D=M
@4
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@THIS    //pop this
D=M
@5
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@THIS    //pop this
D=M
@6
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@THIS    //pop this
D=M
@7
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@THIS    //pop this
D=M
@8
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@THIS    //pop this
D=M
@2
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@THIS    //pop this
D=M
@3
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@R3 //push pointer
D=M
@SP
A=M
M=D
@SP
M=M+1
@RETURN
0;JMP

(Socket.dispose)
@0
D=A
(Socket.dispose_LOOP)
@Socket.dispose_END
D;JEQ
@SP
A=M
M=0
@SP
M=M+1
D=D-1
@Socket.dispose_LOOP
0;JMP
(Socket.dispose_END)

@ARG //push argument
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //pop pointer
AM=M-1
D=M
@THIS
M=D
@THIS    //push this
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@Array.dispose
D=A
@R13
M=D
@return390
D=A
@CALL
0;JMP
(return390)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@R3 //push pointer
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@Socket.clearWindow
D=A
@R13
M=D
@return391
D=A
@CALL
0;JMP
(return391)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@THIS    //push this
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
D=D-M
M=-1
@eq71
D;JEQ
@SP
A=M-1
M=0
(eq71)
@SP  //not
A=M-1
M=!M
@SP
AM=M-1
D=M
@Socket.dispose$if5
D;JNE
@Socket.dispose$ifelse5
0;JMP
(Socket.dispose$if5)
@THIS    //push this
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@Int32.dispose
D=A
@R13
M=D
@return392
D=A
@CALL
0;JMP
(return392)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
(Socket.dispose$ifelse5)
@THIS    //push this
D=M
@3
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
D=D-M
M=-1
@eq72
D;JEQ
@SP
A=M-1
M=0
(eq72)
@SP  //not
A=M-1
M=!M
@SP
AM=M-1
D=M
@Socket.dispose$if10
D;JNE
@Socket.dispose$ifelse10
0;JMP
(Socket.dispose$if10)
@THIS    //push this
D=M
@3
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@Int32.dispose
D=A
@R13
M=D
@return393
D=A
@CALL
0;JMP
(return393)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
(Socket.dispose$ifelse10)
@R3 //push pointer
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@Memory.deAlloc
D=A
@R13
M=D
@return394
D=A
@CALL
0;JMP
(return394)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@RETURN
0;JMP

(Socket.getService)
@0
D=A
(Socket.getService_LOOP)
@Socket.getService_END
D;JEQ
@SP
A=M
M=0
@SP
M=M+1
D=D-1
@Socket.getService_LOOP
0;JMP
(Socket.getService_END)

@ARG //push argument
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //pop pointer
AM=M-1
D=M
@THIS
M=D
@THIS    //push this
D=M
@9
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@RETURN
0;JMP

(Socket.clearWindow)
@1
D=A
(Socket.clearWindow_LOOP)
@Socket.clearWindow_END
D;JEQ
@SP
A=M
M=0
@SP
M=M+1
D=D-1
@Socket.clearWindow_LOOP
0;JMP
(Socket.clearWindow_END)

@ARG //push argument
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //pop pointer
AM=M-1
D=M
@THIS
M=D
(Socket.clearWindow$while2)
@THIS    //push this
D=M
@4
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
D=D-M
M=-1
@eq73
D;JEQ
@SP
A=M-1
M=0
(eq73)
@SP  //not
A=M-1
M=!M
@SP  //not
A=M-1
M=!M
@SP
AM=M-1
D=M
@Socket.clearWindow$whileend2
D;JNE
@THIS    //push this
D=M
@4
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@List.pop
D=A
@R13
M=D
@return395
D=A
@CALL
0;JMP
(return395)
@THIS    //pop this
D=M
@4
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@Socket.clearWindow$while2
0;JMP
(Socket.clearWindow$whileend2)
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@RETURN
0;JMP

(Socket.isClient)
@0
D=A
(Socket.isClient_LOOP)
@Socket.isClient_END
D;JEQ
@SP
A=M
M=0
@SP
M=M+1
D=D-1
@Socket.isClient_LOOP
0;JMP
(Socket.isClient_END)

@ARG //push argument
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //pop pointer
AM=M-1
D=M
@THIS
M=D
@ARG //push argument
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS    //push this
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@4  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@3
D=A
@R14
M=D
@Array.isEqual
D=A
@R13
M=D
@return396
D=A
@CALL
0;JMP
(return396)
@SP  //not
A=M-1
M=!M
@SP
AM=M-1
D=M
@Socket.isClient$if1
D;JNE
@Socket.isClient$ifelse1
0;JMP
(Socket.isClient$if1)
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@RETURN
0;JMP

(Socket.isClient$ifelse1)
@THIS    //push this
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG //push argument
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
D=D-M
M=-1
@eq74
D;JEQ
@SP
A=M-1
M=0
(eq74)
@SP
AM=M-1
D=M
@Socket.isClient$if4
D;JNE
@Socket.isClient$ifelse4
0;JMP
(Socket.isClient$if4)
@1  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //neg
A=M-1
M=-M
@RETURN
0;JMP

(Socket.isClient$ifelse4)
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@RETURN
0;JMP

(Socket.syn)
@0
D=A
(Socket.syn_LOOP)
@Socket.syn_END
D;JEQ
@SP
A=M
M=0
@SP
M=M+1
D=D-1
@Socket.syn_LOOP
0;JMP
(Socket.syn_END)

@ARG //push argument
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //pop pointer
AM=M-1
D=M
@THIS
M=D
@ARG //push argument
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@Int32.getHigh
D=A
@R13
M=D
@return397
D=A
@CALL
0;JMP
(return397)
@ARG //push argument
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@Int32.getLow
D=A
@R13
M=D
@return398
D=A
@CALL
0;JMP
(return398)
@2
D=A
@R14
M=D
@Int32.new
D=A
@R13
M=D
@return399
D=A
@CALL
0;JMP
(return399)
@THIS    //pop this
D=M
@2
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@ARG //push argument
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@Int32.getLow
D=A
@R13
M=D
@return400
D=A
@CALL
0;JMP
(return400)
@ARG //push argument
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@Int32.getHigh
D=A
@R13
M=D
@return401
D=A
@CALL
0;JMP
(return401)
@2
D=A
@R14
M=D
@Int32.new
D=A
@R13
M=D
@return402
D=A
@CALL
0;JMP
(return402)
@THIS    //pop this
D=M
@3
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@THIS    //push this
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@Int32.add
D=A
@R13
M=D
@return403
D=A
@CALL
0;JMP
(return403)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@R3 //push pointer
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@Socket.clearWindow
D=A
@R13
M=D
@return404
D=A
@CALL
0;JMP
(return404)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@1  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //neg
A=M-1
M=-M
@THIS    //pop this
D=M
@6
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@THIS    //pop this
D=M
@7
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@18  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@THIS    //pop this
D=M
@8
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@RETURN
0;JMP

(Socket.isClosed)
@0
D=A
(Socket.isClosed_LOOP)
@Socket.isClosed_END
D;JEQ
@SP
A=M
M=0
@SP
M=M+1
D=D-1
@Socket.isClosed_LOOP
0;JMP
(Socket.isClosed_END)

@ARG //push argument
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //pop pointer
AM=M-1
D=M
@THIS
M=D
@THIS    //push this
D=M
@5
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@RETURN
0;JMP

(Socket.psh)
@0
D=A
(Socket.psh_LOOP)
@Socket.psh_END
D;JEQ
@SP
A=M
M=0
@SP
M=M+1
D=D-1
@Socket.psh_LOOP
0;JMP
(Socket.psh_END)

@ARG //push argument
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //pop pointer
AM=M-1
D=M
@THIS
M=D
@ARG //push argument
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS    //push this
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@Int32.diff
D=A
@R13
M=D
@return405
D=A
@CALL
0;JMP
(return405)
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
D=D-M
M=-1
@eq75
D;JEQ
@SP
A=M-1
M=0
(eq75)
@SP
AM=M-1
D=M
@Socket.psh$if1
D;JNE
@Socket.psh$ifelse1
0;JMP
(Socket.psh$if1)
@THIS    //push this
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG //push argument
D=M
@3
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@Int32.add
D=A
@R13
M=D
@return406
D=A
@CALL
0;JMP
(return406)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@R3 //push pointer
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG //push argument
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG //push argument
D=M
@3
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@3
D=A
@R14
M=D
@Application.processMessage
D=A
@R13
M=D
@return407
D=A
@CALL
0;JMP
(return407)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@THIS    //push this
D=M
@8
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@16  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //or
AM=M-1
D=M
A=A-1
M=D|M
@THIS    //pop this
D=M
@8
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
(Socket.psh$ifelse1)
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@RETURN
0;JMP

(Socket.fin)
@0
D=A
(Socket.fin_LOOP)
@Socket.fin_END
D;JEQ
@SP
A=M
M=0
@SP
M=M+1
D=D-1
@Socket.fin_LOOP
0;JMP
(Socket.fin_END)

@ARG //push argument
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //pop pointer
AM=M-1
D=M
@THIS
M=D
@ARG //push argument
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS    //push this
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@Int32.diff
D=A
@R13
M=D
@return408
D=A
@CALL
0;JMP
(return408)
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
D=D-M
M=-1
@eq76
D;JEQ
@SP
A=M-1
M=0
(eq76)
@SP
AM=M-1
D=M
@Socket.fin$if1
D;JNE
@Socket.fin$ifelse1
0;JMP
(Socket.fin$if1)
@THIS    //push this
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@Int32.add
D=A
@R13
M=D
@return409
D=A
@CALL
0;JMP
(return409)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@THIS    //push this
D=M
@7
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
@Socket.fin$if4
D;JNE
@Socket.fin$ifelse4
0;JMP
(Socket.fin$if4)
@16  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@THIS    //pop this
D=M
@8
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@Socket.fin$ifend4
0;JMP
(Socket.fin$ifelse4)
@1  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //neg
A=M-1
M=-M
@THIS    //pop this
D=M
@7
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@THIS    //push this
D=M
@8
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@17  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //or
AM=M-1
D=M
A=A-1
M=D|M
@THIS    //pop this
D=M
@8
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
(Socket.fin$ifend4)
(Socket.fin$ifelse1)
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@RETURN
0;JMP

(Socket.ack)
@1
D=A
(Socket.ack_LOOP)
@Socket.ack_END
D;JEQ
@SP
A=M
M=0
@SP
M=M+1
D=D-1
@Socket.ack_LOOP
0;JMP
(Socket.ack_END)

@ARG //push argument
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //pop pointer
AM=M-1
D=M
@THIS
M=D
@THIS    //push this
D=M
@4
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
D=D-M
M=-1
@eq77
D;JEQ
@SP
A=M-1
M=0
(eq77)
@SP  //not
A=M-1
M=!M
@SP
AM=M-1
D=M
@Socket.ack$if1
D;JNE
@Socket.ack$ifelse1
0;JMP
(Socket.ack$if1)
@THIS    //push this
D=M
@4
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@List.getData
D=A
@R13
M=D
@return410
D=A
@CALL
0;JMP
(return410)
@LCL //pop local
D=M
@0
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@THIS    //push this
D=M
@3
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG //push argument
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@Int32.diff
D=A
@R13
M=D
@return411
D=A
@CALL
0;JMP
(return411)
@LCL //push local
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@String.length
D=A
@R13
M=D
@return412
D=A
@CALL
0;JMP
(return412)
@SP
AM=M-1
D=M
A=A-1
D=M-D
M=-1
@gt78
D;JGT
@SP
A=M-1
M=0
(gt78)
@1  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //sub
AM=M-1
D=M
A=A-1
M=M-D
@SP
AM=M-1
D=M
@Socket.ack$if2
D;JNE
@Socket.ack$ifelse2
0;JMP
(Socket.ack$if2)
@THIS    //push this
D=M
@3
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@LCL //push local
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@String.length
D=A
@R13
M=D
@return413
D=A
@CALL
0;JMP
(return413)
@2
D=A
@R14
M=D
@Int32.add
D=A
@R13
M=D
@return414
D=A
@CALL
0;JMP
(return414)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@THIS    //push this
D=M
@4
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@List.pop
D=A
@R13
M=D
@return415
D=A
@CALL
0;JMP
(return415)
@THIS    //pop this
D=M
@4
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
(Socket.ack$ifelse2)
(Socket.ack$ifelse1)
@THIS    //push this
D=M
@6
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS    //push this
D=M
@3
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG //push argument
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@Int32.diff
D=A
@R13
M=D
@return416
D=A
@CALL
0;JMP
(return416)
@SP  //and
AM=M-1
D=M
A=A-1
M=D&M
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
D=M-D
M=-1
@gt79
D;JGT
@SP
A=M-1
M=0
(gt79)
@SP
AM=M-1
D=M
@Socket.ack$if9
D;JNE
@Socket.ack$ifelse9
0;JMP
(Socket.ack$if9)
@THIS    //push this
D=M
@3
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@Int32.add
D=A
@R13
M=D
@return417
D=A
@CALL
0;JMP
(return417)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@R3 //push pointer
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@Application.processNewConnection
D=A
@R13
M=D
@return418
D=A
@CALL
0;JMP
(return418)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@THIS    //pop this
D=M
@6
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
(Socket.ack$ifelse9)
@THIS    //push this
D=M
@7
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS    //push this
D=M
@3
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG //push argument
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@Int32.diff
D=A
@R13
M=D
@return419
D=A
@CALL
0;JMP
(return419)
@SP  //and
AM=M-1
D=M
A=A-1
M=D&M
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
D=M-D
M=-1
@gt80
D;JGT
@SP
A=M-1
M=0
(gt80)
@SP
AM=M-1
D=M
@Socket.ack$if16
D;JNE
@Socket.ack$ifelse16
0;JMP
(Socket.ack$if16)
@THIS    //push this
D=M
@3
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@Int32.add
D=A
@R13
M=D
@return420
D=A
@CALL
0;JMP
(return420)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@R3 //push pointer
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@Socket.clearWindow
D=A
@R13
M=D
@return421
D=A
@CALL
0;JMP
(return421)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@1  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //neg
A=M-1
M=-M
@THIS    //pop this
D=M
@5
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@R3 //push pointer
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@Application.processClosedConnection
D=A
@R13
M=D
@return422
D=A
@CALL
0;JMP
(return422)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
(Socket.ack$ifelse16)
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@RETURN
0;JMP

(Socket.close)
@0
D=A
(Socket.close_LOOP)
@Socket.close_END
D;JEQ
@SP
A=M
M=0
@SP
M=M+1
D=D-1
@Socket.close_LOOP
0;JMP
(Socket.close_END)

@ARG //push argument
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //pop pointer
AM=M-1
D=M
@THIS
M=D
@1  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //neg
A=M-1
M=-M
@THIS    //pop this
D=M
@7
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@THIS    //push this
D=M
@8
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@17  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //or
AM=M-1
D=M
A=A-1
M=D|M
@THIS    //pop this
D=M
@8
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@RETURN
0;JMP

(Socket.print)
@0
D=A
(Socket.print_LOOP)
@Socket.print_END
D;JEQ
@SP
A=M
M=0
@SP
M=M+1
D=D-1
@Socket.print_LOOP
0;JMP
(Socket.print_END)

@ARG //push argument
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //pop pointer
AM=M-1
D=M
@THIS
M=D
@THIS    //push this
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@Address.printIP
D=A
@R13
M=D
@return423
D=A
@CALL
0;JMP
(return423)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@58  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@Output.printChar
D=A
@R13
M=D
@return424
D=A
@CALL
0;JMP
(return424)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@THIS    //push this
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@Output.printInt
D=A
@R13
M=D
@return425
D=A
@CALL
0;JMP
(return425)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@RETURN
0;JMP

(Socket.write)
@0
D=A
(Socket.write_LOOP)
@Socket.write_END
D;JEQ
@SP
A=M
M=0
@SP
M=M+1
D=D-1
@Socket.write_LOOP
0;JMP
(Socket.write_END)

@ARG //push argument
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //pop pointer
AM=M-1
D=M
@THIS
M=D
@THIS    //push this
D=M
@4
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
D=D-M
M=-1
@eq81
D;JEQ
@SP
A=M-1
M=0
(eq81)
@SP
AM=M-1
D=M
@Socket.write$if1
D;JNE
@Socket.write$ifelse1
0;JMP
(Socket.write$if1)
@ARG //push argument
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@List.new
D=A
@R13
M=D
@return426
D=A
@CALL
0;JMP
(return426)
@THIS    //pop this
D=M
@4
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@Socket.write$ifend1
0;JMP
(Socket.write$ifelse1)
@THIS    //push this
D=M
@4
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG //push argument
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@List.append
D=A
@R13
M=D
@return427
D=A
@CALL
0;JMP
(return427)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
(Socket.write$ifend1)
@THIS    //push this
D=M
@8
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@24  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //or
AM=M-1
D=M
A=A-1
M=D|M
@THIS    //pop this
D=M
@8
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@RETURN
0;JMP

(Socket.send)
@0
D=A
(Socket.send_LOOP)
@Socket.send_END
D;JEQ
@SP
A=M
M=0
@SP
M=M+1
D=D-1
@Socket.send_LOOP
0;JMP
(Socket.send_END)

@ARG //push argument
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //pop pointer
AM=M-1
D=M
@THIS
M=D
@THIS    //push this
D=M
@8
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
D=M-D
M=-1
@gt82
D;JGT
@SP
A=M-1
M=0
(gt82)
@SP
AM=M-1
D=M
@Socket.send$if1
D;JNE
@Socket.send$ifelse1
0;JMP
(Socket.send$if1)
@THIS    //push this
D=M
@9
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS    //push this
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS    //push this
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS    //push this
D=M
@3
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS    //push this
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS    //push this
D=M
@8
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS    //push this
D=M
@4
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@7
D=A
@R14
M=D
@TCP.write
D=A
@R13
M=D
@return428
D=A
@CALL
0;JMP
(return428)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
(Socket.send$ifelse1)
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@THIS    //pop this
D=M
@8
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@RETURN
0;JMP

(Sys.init)
@0
D=A
(Sys.init_LOOP)
@Sys.init_END
D;JEQ
@SP
A=M
M=0
@SP
M=M+1
D=D-1
@Sys.init_LOOP
0;JMP
(Sys.init_END)

@8192  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@GPIO.init
D=A
@R13
M=D
@return429
D=A
@CALL
0;JMP
(return429)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@0
D=A
@R14
M=D
@Memory.init
D=A
@R13
M=D
@return430
D=A
@CALL
0;JMP
(return430)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@0
D=A
@R14
M=D
@Math.init
D=A
@R13
M=D
@return431
D=A
@CALL
0;JMP
(return431)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@8193  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@UART.init
D=A
@R13
M=D
@return432
D=A
@CALL
0;JMP
(return432)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@8200  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@Screen.init
D=A
@R13
M=D
@return433
D=A
@CALL
0;JMP
(return433)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@0
D=A
@R14
M=D
@Output.init
D=A
@R13
M=D
@return434
D=A
@CALL
0;JMP
(return434)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@8207  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@Network.init
D=A
@R13
M=D
@return435
D=A
@CALL
0;JMP
(return435)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@0
D=A
@R14
M=D
@Main.main
D=A
@R13
M=D
@return436
D=A
@CALL
0;JMP
(return436)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@0
D=A
@R14
M=D
@Sys.halt
D=A
@R13
M=D
@return437
D=A
@CALL
0;JMP
(return437)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@RETURN
0;JMP

(Sys.halt)
@0
D=A
(Sys.halt_LOOP)
@Sys.halt_END
D;JEQ
@SP
A=M
M=0
@SP
M=M+1
D=D-1
@Sys.halt_LOOP
0;JMP
(Sys.halt_END)

@0
D=A
@R14
M=D
@GPIO.getLed
D=A
@R13
M=D
@return438
D=A
@CALL
0;JMP
(return438)
@10  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@1
D=A
@R14
M=D
@GPIO.setLed
D=A
@R13
M=D
@return439
D=A
@CALL
0;JMP
(return439)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
(Sys.halt$while4)
@1  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //neg
A=M-1
M=-M
@SP  //not
A=M-1
M=!M
@SP
AM=M-1
D=M
@Sys.halt$whileend4
D;JNE
@Sys.halt$while4
0;JMP
(Sys.halt$whileend4)
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@RETURN
0;JMP

(Sys.wait)
@1
D=A
(Sys.wait_LOOP)
@Sys.wait_END
D;JEQ
@SP
A=M
M=0
@SP
M=M+1
D=D-1
@Sys.wait_LOOP
0;JMP
(Sys.wait_END)

@ARG //push argument
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
D=M-D
M=-1
@lt83
D;JLT
@SP
A=M-1
M=0
(lt83)
@SP
AM=M-1
D=M
@Sys.wait$if1
D;JNE
@Sys.wait$ifelse1
0;JMP
(Sys.wait$if1)
@1  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@Sys.error
D=A
@R13
M=D
@return440
D=A
@CALL
0;JMP
(return440)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
(Sys.wait$ifelse1)
(Sys.wait$while7)
@ARG //push argument
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
D=M-D
M=-1
@gt84
D;JGT
@SP
A=M-1
M=0
(gt84)
@SP  //not
A=M-1
M=!M
@SP
AM=M-1
D=M
@Sys.wait$whileend7
D;JNE
@500  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL //pop local
D=M
@0
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
(Sys.wait$while9)
@LCL //push local
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
D=M-D
M=-1
@gt85
D;JGT
@SP
A=M-1
M=0
(gt85)
@SP  //not
A=M-1
M=!M
@SP
AM=M-1
D=M
@Sys.wait$whileend9
D;JNE
@LCL //push local
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //sub
AM=M-1
D=M
A=A-1
M=M-D
@LCL //pop local
D=M
@0
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@Sys.wait$while9
0;JMP
(Sys.wait$whileend9)
@ARG //push argument
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //sub
AM=M-1
D=M
A=A-1
M=M-D
@ARG //pop argument
D=M
@0
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@Sys.wait$while7
0;JMP
(Sys.wait$whileend7)
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@RETURN
0;JMP

(Sys.error)
@0
D=A
(Sys.error_LOOP)
@Sys.error_END
D;JEQ
@SP
A=M
M=0
@SP
M=M+1
D=D-1
@Sys.error_LOOP
0;JMP
(Sys.error_END)

@5  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@GPIO.setLed
D=A
@R13
M=D
@return441
D=A
@CALL
0;JMP
(return441)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@3  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@String.new
D=A
@R13
M=D
@return442
D=A
@CALL
0;JMP
(return442)
@69  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return443
D=A
@CALL
0;JMP
(return443)
@82  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return444
D=A
@CALL
0;JMP
(return444)
@82  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return445
D=A
@CALL
0;JMP
(return445)
@1
D=A
@R14
M=D
@Output.printString
D=A
@R13
M=D
@return446
D=A
@CALL
0;JMP
(return446)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@ARG //push argument
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@Output.printInt
D=A
@R13
M=D
@return447
D=A
@CALL
0;JMP
(return447)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@0
D=A
@R14
M=D
@Sys.halt
D=A
@R13
M=D
@return448
D=A
@CALL
0;JMP
(return448)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@RETURN
0;JMP

(UDP.read)
@5
D=A
(UDP.read_LOOP)
@UDP.read_END
D;JEQ
@SP
A=M
M=0
@SP
M=M+1
D=D-1
@UDP.read_LOOP
0;JMP
(UDP.read_END)

@ARG //push argument
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@7  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
D=M-D
M=-1
@gt86
D;JGT
@SP
A=M-1
M=0
(gt86)
@SP
AM=M-1
D=M
@UDP.read$if1
D;JNE
@UDP.read$ifelse1
0;JMP
(UDP.read$if1)
@ARG //push argument
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@SP  //pop pointer
AM=M-1
D=M
@THAT
M=D
@THAT    //push that
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@256  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@Math.multiply
D=A
@R13
M=D
@return449
D=A
@CALL
0;JMP
(return449)
@ARG //push argument
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@SP  //pop pointer
AM=M-1
D=M
@THAT
M=D
@THAT    //push that
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //or
AM=M-1
D=M
A=A-1
M=D|M
@LCL //pop local
D=M
@0
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@ARG //push argument
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@2  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@SP  //pop pointer
AM=M-1
D=M
@THAT
M=D
@THAT    //push that
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@256  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@Math.multiply
D=A
@R13
M=D
@return450
D=A
@CALL
0;JMP
(return450)
@ARG //push argument
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@3  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@SP  //pop pointer
AM=M-1
D=M
@THAT
M=D
@THAT    //push that
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //or
AM=M-1
D=M
A=A-1
M=D|M
@LCL //pop local
D=M
@1
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@ARG //push argument
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@4  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@SP  //pop pointer
AM=M-1
D=M
@THAT
M=D
@THAT    //push that
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@256  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@Math.multiply
D=A
@R13
M=D
@return451
D=A
@CALL
0;JMP
(return451)
@ARG //push argument
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@5  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@SP  //pop pointer
AM=M-1
D=M
@THAT
M=D
@THAT    //push that
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //or
AM=M-1
D=M
A=A-1
M=D|M
@LCL //pop local
D=M
@2
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@ARG //push argument
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@6  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@SP  //pop pointer
AM=M-1
D=M
@THAT
M=D
@THAT    //push that
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@256  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@Math.multiply
D=A
@R13
M=D
@return452
D=A
@CALL
0;JMP
(return452)
@ARG //push argument
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@7  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@SP  //pop pointer
AM=M-1
D=M
@THAT
M=D
@THAT    //push that
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //or
AM=M-1
D=M
A=A-1
M=D|M
@LCL //pop local
D=M
@3
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@ARG //push argument
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@8  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@LCL //pop local
D=M
@4
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@LCL //push local
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@67  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
D=D-M
M=-1
@eq87
D;JEQ
@SP
A=M-1
M=0
(eq87)
@SP
AM=M-1
D=M
@UDP.read$if2
D;JNE
@UDP.read$ifelse2
0;JMP
(UDP.read$if2)
@LCL //push local
D=M
@4
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG //push argument
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@8  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //sub
AM=M-1
D=M
A=A-1
M=M-D
@2
D=A
@R14
M=D
@DHCP.read
D=A
@R13
M=D
@return453
D=A
@CALL
0;JMP
(return453)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
(UDP.read$ifelse2)
(UDP.read$ifelse1)
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@RETURN
0;JMP

(UDP.write)
@4
D=A
(UDP.write_LOOP)
@UDP.write_END
D;JEQ
@SP
A=M
M=0
@SP
M=M+1
D=D-1
@UDP.write_LOOP
0;JMP
(UDP.write_END)

@8  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@String.new
D=A
@R13
M=D
@return454
D=A
@CALL
0;JMP
(return454)
@LCL //pop local
D=M
@0
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@LCL //push local
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG //push argument
D=M
@3
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@List.new
D=A
@R13
M=D
@return455
D=A
@CALL
0;JMP
(return455)
@ARG //pop argument
D=M
@3
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@ARG //push argument
D=M
@3
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@List.getLength
D=A
@R13
M=D
@return456
D=A
@CALL
0;JMP
(return456)
@LCL //pop local
D=M
@2
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@LCL //push local
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG //push argument
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@Math.getHigh
D=A
@R13
M=D
@return457
D=A
@CALL
0;JMP
(return457)
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return458
D=A
@CALL
0;JMP
(return458)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@LCL //push local
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG //push argument
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@Math.getLow
D=A
@R13
M=D
@return459
D=A
@CALL
0;JMP
(return459)
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return460
D=A
@CALL
0;JMP
(return460)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@LCL //push local
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG //push argument
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@Math.getHigh
D=A
@R13
M=D
@return461
D=A
@CALL
0;JMP
(return461)
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return462
D=A
@CALL
0;JMP
(return462)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@LCL //push local
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG //push argument
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@Math.getLow
D=A
@R13
M=D
@return463
D=A
@CALL
0;JMP
(return463)
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return464
D=A
@CALL
0;JMP
(return464)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@LCL //push local
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@LCL //push local
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@Math.getHigh
D=A
@R13
M=D
@return465
D=A
@CALL
0;JMP
(return465)
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return466
D=A
@CALL
0;JMP
(return466)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@LCL //push local
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@LCL //push local
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@Math.getLow
D=A
@R13
M=D
@return467
D=A
@CALL
0;JMP
(return467)
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return468
D=A
@CALL
0;JMP
(return468)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@LCL //push local
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return469
D=A
@CALL
0;JMP
(return469)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@LCL //push local
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return470
D=A
@CALL
0;JMP
(return470)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@12  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@String.new
D=A
@R13
M=D
@return471
D=A
@CALL
0;JMP
(return471)
@LCL //pop local
D=M
@1
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@ARG //push argument
D=M
@3
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@List.getLength
D=A
@R13
M=D
@return472
D=A
@CALL
0;JMP
(return472)
@12  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@LCL //pop local
D=M
@2
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@LCL //push local
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG //push argument
D=M
@3
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@List.new
D=A
@R13
M=D
@return473
D=A
@CALL
0;JMP
(return473)
@ARG //pop argument
D=M
@3
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@LCL //push local
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG //push argument
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@4  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@3
D=A
@R14
M=D
@String.appendArray
D=A
@R13
M=D
@return474
D=A
@CALL
0;JMP
(return474)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@LCL //push local
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@0
D=A
@R14
M=D
@Network.getMyIP
D=A
@R13
M=D
@return475
D=A
@CALL
0;JMP
(return475)
@4  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@3
D=A
@R14
M=D
@String.appendArray
D=A
@R13
M=D
@return476
D=A
@CALL
0;JMP
(return476)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@LCL //push local
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return477
D=A
@CALL
0;JMP
(return477)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@LCL //push local
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@17  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return478
D=A
@CALL
0;JMP
(return478)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@LCL //push local
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@LCL //push local
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@Math.getHigh
D=A
@R13
M=D
@return479
D=A
@CALL
0;JMP
(return479)
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return480
D=A
@CALL
0;JMP
(return480)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@LCL //push local
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@LCL //push local
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@Math.getLow
D=A
@R13
M=D
@return481
D=A
@CALL
0;JMP
(return481)
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return482
D=A
@CALL
0;JMP
(return482)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@ARG //push argument
D=M
@3
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@Checksum.sumList
D=A
@R13
M=D
@return483
D=A
@CALL
0;JMP
(return483)
@SP  //not
A=M-1
M=!M
@LCL //pop local
D=M
@3
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@LCL //push local
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@16  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL //push local
D=M
@3
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@Math.getHigh
D=A
@R13
M=D
@return484
D=A
@CALL
0;JMP
(return484)
@3
D=A
@R14
M=D
@String.setCharAt
D=A
@R13
M=D
@return485
D=A
@CALL
0;JMP
(return485)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@LCL //push local
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@17  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL //push local
D=M
@3
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@Math.getLow
D=A
@R13
M=D
@return486
D=A
@CALL
0;JMP
(return486)
@3
D=A
@R14
M=D
@String.setCharAt
D=A
@R13
M=D
@return487
D=A
@CALL
0;JMP
(return487)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@ARG //push argument
D=M
@3
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@List.pop
D=A
@R13
M=D
@return488
D=A
@CALL
0;JMP
(return488)
@ARG //pop argument
D=M
@3
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@LCL //push local
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@String.dispose
D=A
@R13
M=D
@return489
D=A
@CALL
0;JMP
(return489)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@ARG //push argument
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@17  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@ARG //push argument
D=M
@3
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@3
D=A
@R14
M=D
@IP.write
D=A
@R13
M=D
@return490
D=A
@CALL
0;JMP
(return490)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@ARG //push argument
D=M
@3
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@List.pop
D=A
@R13
M=D
@return491
D=A
@CALL
0;JMP
(return491)
@ARG //pop argument
D=M
@3
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@LCL //push local
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@String.dispose
D=A
@R13
M=D
@return492
D=A
@CALL
0;JMP
(return492)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@RETURN
0;JMP

(Application.processNewConnection)
@0
D=A
(Application.processNewConnection_LOOP)
@Application.processNewConnection_END
D;JEQ
@SP
A=M
M=0
@SP
M=M+1
D=D-1
@Application.processNewConnection_LOOP
0;JMP
(Application.processNewConnection_END)

@0
D=A
@R14
M=D
@Screen.BLUE
D=A
@R13
M=D
@return493
D=A
@CALL
0;JMP
(return493)
@1
D=A
@R14
M=D
@Screen.setColor
D=A
@R13
M=D
@return494
D=A
@CALL
0;JMP
(return494)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@4  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@String.new
D=A
@R13
M=D
@return495
D=A
@CALL
0;JMP
(return495)
@84  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return496
D=A
@CALL
0;JMP
(return496)
@67  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return497
D=A
@CALL
0;JMP
(return497)
@80  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return498
D=A
@CALL
0;JMP
(return498)
@32  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return499
D=A
@CALL
0;JMP
(return499)
@1
D=A
@R14
M=D
@Output.printString
D=A
@R13
M=D
@return500
D=A
@CALL
0;JMP
(return500)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@ARG //push argument
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@Socket.print
D=A
@R13
M=D
@return501
D=A
@CALL
0;JMP
(return501)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@6  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@String.new
D=A
@R13
M=D
@return502
D=A
@CALL
0;JMP
(return502)
@32  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return503
D=A
@CALL
0;JMP
(return503)
@83  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return504
D=A
@CALL
0;JMP
(return504)
@116  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return505
D=A
@CALL
0;JMP
(return505)
@97  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return506
D=A
@CALL
0;JMP
(return506)
@114  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return507
D=A
@CALL
0;JMP
(return507)
@116  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return508
D=A
@CALL
0;JMP
(return508)
@1
D=A
@R14
M=D
@Output.printString
D=A
@R13
M=D
@return509
D=A
@CALL
0;JMP
(return509)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@0
D=A
@R14
M=D
@Output.println
D=A
@R13
M=D
@return510
D=A
@CALL
0;JMP
(return510)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@0
D=A
@R14
M=D
@Screen.WHITE
D=A
@R13
M=D
@return511
D=A
@CALL
0;JMP
(return511)
@1
D=A
@R14
M=D
@Screen.setColor
D=A
@R13
M=D
@return512
D=A
@CALL
0;JMP
(return512)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@RETURN
0;JMP

(Application.processMessage)
@1
D=A
(Application.processMessage_LOOP)
@Application.processMessage_END
D;JEQ
@SP
A=M
M=0
@SP
M=M+1
D=D-1
@Application.processMessage_LOOP
0;JMP
(Application.processMessage_END)

@0
D=A
@R14
M=D
@Screen.BLUE
D=A
@R13
M=D
@return513
D=A
@CALL
0;JMP
(return513)
@1
D=A
@R14
M=D
@Screen.setColor
D=A
@R13
M=D
@return514
D=A
@CALL
0;JMP
(return514)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@4  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@String.new
D=A
@R13
M=D
@return515
D=A
@CALL
0;JMP
(return515)
@84  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return516
D=A
@CALL
0;JMP
(return516)
@67  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return517
D=A
@CALL
0;JMP
(return517)
@80  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return518
D=A
@CALL
0;JMP
(return518)
@32  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return519
D=A
@CALL
0;JMP
(return519)
@1
D=A
@R14
M=D
@Output.printString
D=A
@R13
M=D
@return520
D=A
@CALL
0;JMP
(return520)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@ARG //push argument
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@Socket.print
D=A
@R13
M=D
@return521
D=A
@CALL
0;JMP
(return521)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@10  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@String.new
D=A
@R13
M=D
@return522
D=A
@CALL
0;JMP
(return522)
@32  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return523
D=A
@CALL
0;JMP
(return523)
@77  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return524
D=A
@CALL
0;JMP
(return524)
@101  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return525
D=A
@CALL
0;JMP
(return525)
@115  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return526
D=A
@CALL
0;JMP
(return526)
@115  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return527
D=A
@CALL
0;JMP
(return527)
@97  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return528
D=A
@CALL
0;JMP
(return528)
@103  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return529
D=A
@CALL
0;JMP
(return529)
@101  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return530
D=A
@CALL
0;JMP
(return530)
@58  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return531
D=A
@CALL
0;JMP
(return531)
@32  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return532
D=A
@CALL
0;JMP
(return532)
@1
D=A
@R14
M=D
@Output.printString
D=A
@R13
M=D
@return533
D=A
@CALL
0;JMP
(return533)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL //pop local
D=M
@0
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
(Application.processMessage$while10)
@LCL //push local
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@4  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
D=M-D
M=-1
@lt88
D;JLT
@SP
A=M-1
M=0
(lt88)
@SP  //not
A=M-1
M=!M
@SP
AM=M-1
D=M
@Application.processMessage$whileend10
D;JNE
@LCL //push local
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG //push argument
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
D=M-D
M=-1
@lt89
D;JLT
@SP
A=M-1
M=0
(lt89)
@ARG //push argument
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@LCL //push local
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@SP  //pop pointer
AM=M-1
D=M
@THAT
M=D
@THAT    //push that
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@31  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
D=M-D
M=-1
@gt90
D;JGT
@SP
A=M-1
M=0
(gt90)
@SP  //and
AM=M-1
D=M
A=A-1
M=D&M
@SP
AM=M-1
D=M
@Application.processMessage$if11
D;JNE
@Application.processMessage$ifelse11
0;JMP
(Application.processMessage$if11)
@ARG //push argument
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@LCL //push local
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@SP  //pop pointer
AM=M-1
D=M
@THAT
M=D
@THAT    //push that
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@Output.printChar
D=A
@R13
M=D
@return534
D=A
@CALL
0;JMP
(return534)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
(Application.processMessage$ifelse11)
@LCL //push local
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@LCL //pop local
D=M
@0
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@Application.processMessage$while10
0;JMP
(Application.processMessage$whileend10)
@0
D=A
@R14
M=D
@Output.println
D=A
@R13
M=D
@return535
D=A
@CALL
0;JMP
(return535)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@0
D=A
@R14
M=D
@Screen.WHITE
D=A
@R13
M=D
@return536
D=A
@CALL
0;JMP
(return536)
@1
D=A
@R14
M=D
@Screen.setColor
D=A
@R13
M=D
@return537
D=A
@CALL
0;JMP
(return537)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@ARG //push argument
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@Socket.getService
D=A
@R13
M=D
@return538
D=A
@CALL
0;JMP
(return538)
@6000  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
D=D-M
M=-1
@eq91
D;JEQ
@SP
A=M-1
M=0
(eq91)
@SP
AM=M-1
D=M
@Application.processMessage$if22
D;JNE
@Application.processMessage$ifelse22
0;JMP
(Application.processMessage$if22)
@ARG //push argument
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG //push argument
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG //push argument
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@3
D=A
@R14
M=D
@Echo.processMessage
D=A
@R13
M=D
@return539
D=A
@CALL
0;JMP
(return539)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
(Application.processMessage$ifelse22)
@ARG //push argument
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@Socket.getService
D=A
@R13
M=D
@return540
D=A
@CALL
0;JMP
(return540)
@80  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
D=D-M
M=-1
@eq92
D;JEQ
@SP
A=M-1
M=0
(eq92)
@SP
AM=M-1
D=M
@Application.processMessage$if27
D;JNE
@Application.processMessage$ifelse27
0;JMP
(Application.processMessage$if27)
@ARG //push argument
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG //push argument
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG //push argument
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@3
D=A
@R14
M=D
@HTTP.processMessage
D=A
@R13
M=D
@return541
D=A
@CALL
0;JMP
(return541)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
(Application.processMessage$ifelse27)
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@RETURN
0;JMP

(Application.processClosedConnection)
@0
D=A
(Application.processClosedConnection_LOOP)
@Application.processClosedConnection_END
D;JEQ
@SP
A=M
M=0
@SP
M=M+1
D=D-1
@Application.processClosedConnection_LOOP
0;JMP
(Application.processClosedConnection_END)

@0
D=A
@R14
M=D
@Screen.BLUE
D=A
@R13
M=D
@return542
D=A
@CALL
0;JMP
(return542)
@1
D=A
@R14
M=D
@Screen.setColor
D=A
@R13
M=D
@return543
D=A
@CALL
0;JMP
(return543)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@4  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@String.new
D=A
@R13
M=D
@return544
D=A
@CALL
0;JMP
(return544)
@84  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return545
D=A
@CALL
0;JMP
(return545)
@67  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return546
D=A
@CALL
0;JMP
(return546)
@80  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return547
D=A
@CALL
0;JMP
(return547)
@32  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return548
D=A
@CALL
0;JMP
(return548)
@1
D=A
@R14
M=D
@Output.printString
D=A
@R13
M=D
@return549
D=A
@CALL
0;JMP
(return549)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@ARG //push argument
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@Socket.print
D=A
@R13
M=D
@return550
D=A
@CALL
0;JMP
(return550)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@5  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@String.new
D=A
@R13
M=D
@return551
D=A
@CALL
0;JMP
(return551)
@32  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return552
D=A
@CALL
0;JMP
(return552)
@83  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return553
D=A
@CALL
0;JMP
(return553)
@116  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return554
D=A
@CALL
0;JMP
(return554)
@111  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return555
D=A
@CALL
0;JMP
(return555)
@112  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return556
D=A
@CALL
0;JMP
(return556)
@1
D=A
@R14
M=D
@Output.printString
D=A
@R13
M=D
@return557
D=A
@CALL
0;JMP
(return557)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@0
D=A
@R14
M=D
@Output.println
D=A
@R13
M=D
@return558
D=A
@CALL
0;JMP
(return558)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@0
D=A
@R14
M=D
@Screen.WHITE
D=A
@R13
M=D
@return559
D=A
@CALL
0;JMP
(return559)
@1
D=A
@R14
M=D
@Screen.setColor
D=A
@R13
M=D
@return560
D=A
@CALL
0;JMP
(return560)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@RETURN
0;JMP

(DHCP.read)
@11
D=A
(DHCP.read_LOOP)
@DHCP.read_END
D;JEQ
@SP
A=M
M=0
@SP
M=M+1
D=D-1
@DHCP.read_LOOP
0;JMP
(DHCP.read_END)

@ARG //push argument
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@13  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
D=M-D
M=-1
@gt93
D;JGT
@SP
A=M-1
M=0
(gt93)
@SP
AM=M-1
D=M
@DHCP.read$if1
D;JNE
@DHCP.read$ifelse1
0;JMP
(DHCP.read$if1)
@ARG //push argument
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@SP  //pop pointer
AM=M-1
D=M
@THAT
M=D
@THAT    //push that
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@Math.getHigh
D=A
@R13
M=D
@return561
D=A
@CALL
0;JMP
(return561)
@LCL //pop local
D=M
@0
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@ARG //push argument
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@SP  //pop pointer
AM=M-1
D=M
@THAT
M=D
@THAT    //push that
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@Math.getLow
D=A
@R13
M=D
@return562
D=A
@CALL
0;JMP
(return562)
@LCL //pop local
D=M
@1
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@ARG //push argument
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@SP  //pop pointer
AM=M-1
D=M
@THAT
M=D
@THAT    //push that
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@Math.getHigh
D=A
@R13
M=D
@return563
D=A
@CALL
0;JMP
(return563)
@LCL //pop local
D=M
@2
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@ARG //push argument
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@SP  //pop pointer
AM=M-1
D=M
@THAT
M=D
@THAT    //push that
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@Math.getLow
D=A
@R13
M=D
@return564
D=A
@CALL
0;JMP
(return564)
@LCL //pop local
D=M
@3
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@ARG //push argument
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@2  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@SP  //pop pointer
AM=M-1
D=M
@THAT
M=D
@THAT    //push that
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG //push argument
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@3  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@SP  //pop pointer
AM=M-1
D=M
@THAT
M=D
@THAT    //push that
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@Int32.new
D=A
@R13
M=D
@return565
D=A
@CALL
0;JMP
(return565)
@LCL //pop local
D=M
@4
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@ARG //push argument
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@4  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@SP  //pop pointer
AM=M-1
D=M
@THAT
M=D
@THAT    //push that
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@Math.getHigh
D=A
@R13
M=D
@return566
D=A
@CALL
0;JMP
(return566)
@LCL //pop local
D=M
@5
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@ARG //push argument
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@5  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@SP  //pop pointer
AM=M-1
D=M
@THAT
M=D
@THAT    //push that
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@Math.getLow
D=A
@R13
M=D
@return567
D=A
@CALL
0;JMP
(return567)
@LCL //pop local
D=M
@6
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@ARG //push argument
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@6  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@SP  //pop pointer
AM=M-1
D=M
@THAT
M=D
@THAT    //push that
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG //push argument
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@7  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@SP  //pop pointer
AM=M-1
D=M
@THAT
M=D
@THAT    //push that
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@Int32.new
D=A
@R13
M=D
@return568
D=A
@CALL
0;JMP
(return568)
@LCL //pop local
D=M
@7
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@ARG //push argument
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@8  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@SP  //pop pointer
AM=M-1
D=M
@THAT
M=D
@THAT    //push that
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG //push argument
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@9  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@SP  //pop pointer
AM=M-1
D=M
@THAT
M=D
@THAT    //push that
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@Int32.new
D=A
@R13
M=D
@return569
D=A
@CALL
0;JMP
(return569)
@LCL //pop local
D=M
@8
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@ARG //push argument
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@10  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@SP  //pop pointer
AM=M-1
D=M
@THAT
M=D
@THAT    //push that
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG //push argument
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@11  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@SP  //pop pointer
AM=M-1
D=M
@THAT
M=D
@THAT    //push that
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@Int32.new
D=A
@R13
M=D
@return570
D=A
@CALL
0;JMP
(return570)
@LCL //pop local
D=M
@9
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@ARG //push argument
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@12  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@SP  //pop pointer
AM=M-1
D=M
@THAT
M=D
@THAT    //push that
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG //push argument
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@13  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@SP  //pop pointer
AM=M-1
D=M
@THAT
M=D
@THAT    //push that
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@Int32.new
D=A
@R13
M=D
@return571
D=A
@CALL
0;JMP
(return571)
@LCL //pop local
D=M
@10
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@4  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@String.new
D=A
@R13
M=D
@return572
D=A
@CALL
0;JMP
(return572)
@68  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return573
D=A
@CALL
0;JMP
(return573)
@72  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return574
D=A
@CALL
0;JMP
(return574)
@67  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return575
D=A
@CALL
0;JMP
(return575)
@80  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return576
D=A
@CALL
0;JMP
(return576)
@1
D=A
@R14
M=D
@Output.printString
D=A
@R13
M=D
@return577
D=A
@CALL
0;JMP
(return577)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@0
D=A
@R14
M=D
@Output.println
D=A
@R13
M=D
@return578
D=A
@CALL
0;JMP
(return578)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@0
D=A
@R14
M=D
@x.print
D=A
@R13
M=D
@return579
D=A
@CALL
0;JMP
(return579)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@0
D=A
@R14
M=D
@Output.println
D=A
@R13
M=D
@return580
D=A
@CALL
0;JMP
(return580)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@LCL //push local
D=M
@7
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@Int32.print
D=A
@R13
M=D
@return581
D=A
@CALL
0;JMP
(return581)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@0
D=A
@R14
M=D
@Output.println
D=A
@R13
M=D
@return582
D=A
@CALL
0;JMP
(return582)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@LCL //push local
D=M
@8
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@Int32.print
D=A
@R13
M=D
@return583
D=A
@CALL
0;JMP
(return583)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@0
D=A
@R14
M=D
@Output.println
D=A
@R13
M=D
@return584
D=A
@CALL
0;JMP
(return584)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@LCL //push local
D=M
@9
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@Int32.print
D=A
@R13
M=D
@return585
D=A
@CALL
0;JMP
(return585)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@0
D=A
@R14
M=D
@Output.println
D=A
@R13
M=D
@return586
D=A
@CALL
0;JMP
(return586)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@0
D=A
@R14
M=D
@giadddr.print
D=A
@R13
M=D
@return587
D=A
@CALL
0;JMP
(return587)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@0
D=A
@R14
M=D
@Output.println
D=A
@R13
M=D
@return588
D=A
@CALL
0;JMP
(return588)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@LCL //push local
D=M
@4
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@Int32.dispose
D=A
@R13
M=D
@return589
D=A
@CALL
0;JMP
(return589)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@LCL //push local
D=M
@7
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@Int32.dispose
D=A
@R13
M=D
@return590
D=A
@CALL
0;JMP
(return590)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@LCL //push local
D=M
@8
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@Int32.dispose
D=A
@R13
M=D
@return591
D=A
@CALL
0;JMP
(return591)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@LCL //push local
D=M
@9
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@Int32.dispose
D=A
@R13
M=D
@return592
D=A
@CALL
0;JMP
(return592)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@LCL //push local
D=M
@10
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@Int32.dispose
D=A
@R13
M=D
@return593
D=A
@CALL
0;JMP
(return593)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
(DHCP.read$ifelse1)
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@RETURN
0;JMP

(DHCP.write)
@0
D=A
(DHCP.write_LOOP)
@DHCP.write_END
D;JEQ
@SP
A=M
M=0
@SP
M=M+1
D=D-1
@DHCP.write_LOOP
0;JMP
(DHCP.write_END)

@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@RETURN
0;JMP

(HTTP.processMessage)
@0
D=A
(HTTP.processMessage_LOOP)
@HTTP.processMessage_END
D;JEQ
@SP
A=M
M=0
@SP
M=M+1
D=D-1
@HTTP.processMessage_LOOP
0;JMP
(HTTP.processMessage_END)

@0
D=A
@R14
M=D
@Screen.MAGENTA
D=A
@R13
M=D
@return594
D=A
@CALL
0;JMP
(return594)
@1
D=A
@R14
M=D
@Screen.setColor
D=A
@R13
M=D
@return595
D=A
@CALL
0;JMP
(return595)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@12  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@String.new
D=A
@R13
M=D
@return596
D=A
@CALL
0;JMP
(return596)
@72  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return597
D=A
@CALL
0;JMP
(return597)
@84  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return598
D=A
@CALL
0;JMP
(return598)
@84  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return599
D=A
@CALL
0;JMP
(return599)
@80  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return600
D=A
@CALL
0;JMP
(return600)
@32  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return601
D=A
@CALL
0;JMP
(return601)
@82  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return602
D=A
@CALL
0;JMP
(return602)
@101  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return603
D=A
@CALL
0;JMP
(return603)
@113  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return604
D=A
@CALL
0;JMP
(return604)
@117  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return605
D=A
@CALL
0;JMP
(return605)
@101  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return606
D=A
@CALL
0;JMP
(return606)
@115  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return607
D=A
@CALL
0;JMP
(return607)
@116  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return608
D=A
@CALL
0;JMP
(return608)
@1
D=A
@R14
M=D
@Output.printString
D=A
@R13
M=D
@return609
D=A
@CALL
0;JMP
(return609)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@0
D=A
@R14
M=D
@Output.println
D=A
@R13
M=D
@return610
D=A
@CALL
0;JMP
(return610)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@0
D=A
@R14
M=D
@Screen.WHITE
D=A
@R13
M=D
@return611
D=A
@CALL
0;JMP
(return611)
@1
D=A
@R14
M=D
@Screen.setColor
D=A
@R13
M=D
@return612
D=A
@CALL
0;JMP
(return612)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@ARG //push argument
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@5  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@String.new
D=A
@R13
M=D
@return613
D=A
@CALL
0;JMP
(return613)
@71  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return614
D=A
@CALL
0;JMP
(return614)
@69  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return615
D=A
@CALL
0;JMP
(return615)
@84  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return616
D=A
@CALL
0;JMP
(return616)
@32  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return617
D=A
@CALL
0;JMP
(return617)
@47  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return618
D=A
@CALL
0;JMP
(return618)
@2
D=A
@R14
M=D
@Array.startsWith
D=A
@R13
M=D
@return619
D=A
@CALL
0;JMP
(return619)
@SP
AM=M-1
D=M
@HTTP.processMessage$if9
D;JNE
@HTTP.processMessage$ifelse9
0;JMP
(HTTP.processMessage$if9)
@ARG //push argument
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@13  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@String.new
D=A
@R13
M=D
@return620
D=A
@CALL
0;JMP
(return620)
@60  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return621
D=A
@CALL
0;JMP
(return621)
@72  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return622
D=A
@CALL
0;JMP
(return622)
@49  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return623
D=A
@CALL
0;JMP
(return623)
@62  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return624
D=A
@CALL
0;JMP
(return624)
@72  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return625
D=A
@CALL
0;JMP
(return625)
@65  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return626
D=A
@CALL
0;JMP
(return626)
@67  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return627
D=A
@CALL
0;JMP
(return627)
@75  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return628
D=A
@CALL
0;JMP
(return628)
@60  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return629
D=A
@CALL
0;JMP
(return629)
@47  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return630
D=A
@CALL
0;JMP
(return630)
@72  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return631
D=A
@CALL
0;JMP
(return631)
@49  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return632
D=A
@CALL
0;JMP
(return632)
@62  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return633
D=A
@CALL
0;JMP
(return633)
@2
D=A
@R14
M=D
@Socket.write
D=A
@R13
M=D
@return634
D=A
@CALL
0;JMP
(return634)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@ARG //push argument
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@Socket.close
D=A
@R13
M=D
@return635
D=A
@CALL
0;JMP
(return635)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@HTTP.processMessage$ifend9
0;JMP
(HTTP.processMessage$ifelse9)
@ARG //push argument
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@5  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@String.new
D=A
@R13
M=D
@return636
D=A
@CALL
0;JMP
(return636)
@70  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return637
D=A
@CALL
0;JMP
(return637)
@117  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return638
D=A
@CALL
0;JMP
(return638)
@99  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return639
D=A
@CALL
0;JMP
(return639)
@107  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return640
D=A
@CALL
0;JMP
(return640)
@33  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return641
D=A
@CALL
0;JMP
(return641)
@2
D=A
@R14
M=D
@Socket.write
D=A
@R13
M=D
@return642
D=A
@CALL
0;JMP
(return642)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@ARG //push argument
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@Socket.close
D=A
@R13
M=D
@return643
D=A
@CALL
0;JMP
(return643)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
(HTTP.processMessage$ifend9)
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@RETURN
0;JMP

(Array.new)
@0
D=A
(Array.new_LOOP)
@Array.new_END
D;JEQ
@SP
A=M
M=0
@SP
M=M+1
D=D-1
@Array.new_LOOP
0;JMP
(Array.new_END)

@ARG //push argument
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
D=M-D
M=-1
@gt94
D;JGT
@SP
A=M-1
M=0
(gt94)
@SP  //not
A=M-1
M=!M
@SP
AM=M-1
D=M
@Array.new$if1
D;JNE
@Array.new$ifelse1
0;JMP
(Array.new$if1)
@2  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@Sys.error
D=A
@R13
M=D
@return644
D=A
@CALL
0;JMP
(return644)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
(Array.new$ifelse1)
@ARG //push argument
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@Memory.alloc
D=A
@R13
M=D
@return645
D=A
@CALL
0;JMP
(return645)
@RETURN
0;JMP

(Array.dispose)
@0
D=A
(Array.dispose_LOOP)
@Array.dispose_END
D;JEQ
@SP
A=M
M=0
@SP
M=M+1
D=D-1
@Array.dispose_LOOP
0;JMP
(Array.dispose_END)

@ARG //push argument
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //pop pointer
AM=M-1
D=M
@THIS
M=D
@R3 //push pointer
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@Memory.deAlloc
D=A
@R13
M=D
@return646
D=A
@CALL
0;JMP
(return646)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@RETURN
0;JMP

(Array.startsWith)
@3
D=A
(Array.startsWith_LOOP)
@Array.startsWith_END
D;JEQ
@SP
A=M
M=0
@SP
M=M+1
D=D-1
@Array.startsWith_LOOP
0;JMP
(Array.startsWith_END)

@ARG //push argument
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //pop pointer
AM=M-1
D=M
@THIS
M=D
@R3 //push pointer
D=M
@SP
A=M
M=D
@SP
M=M+1
@LCL //pop local
D=M
@2
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@ARG //push argument
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@String.length
D=A
@R13
M=D
@return647
D=A
@CALL
0;JMP
(return647)
@LCL //pop local
D=M
@1
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL //pop local
D=M
@0
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
(Array.startsWith$while2)
@LCL //push local
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@LCL //push local
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
D=M-D
M=-1
@lt95
D;JLT
@SP
A=M-1
M=0
(lt95)
@SP  //not
A=M-1
M=!M
@SP
AM=M-1
D=M
@Array.startsWith$whileend2
D;JNE
@LCL //push local
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@LCL //push local
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@SP  //pop pointer
AM=M-1
D=M
@THAT
M=D
@THAT    //push that
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG //push argument
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@LCL //push local
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.charAt
D=A
@R13
M=D
@return648
D=A
@CALL
0;JMP
(return648)
@SP
AM=M-1
D=M
A=A-1
D=D-M
M=-1
@eq96
D;JEQ
@SP
A=M-1
M=0
(eq96)
@SP  //not
A=M-1
M=!M
@SP
AM=M-1
D=M
@Array.startsWith$if3
D;JNE
@Array.startsWith$ifelse3
0;JMP
(Array.startsWith$if3)
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@RETURN
0;JMP

(Array.startsWith$ifelse3)
@LCL //push local
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@LCL //pop local
D=M
@0
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@Array.startsWith$while2
0;JMP
(Array.startsWith$whileend2)
@ARG //push argument
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@String.dispose
D=A
@R13
M=D
@return649
D=A
@CALL
0;JMP
(return649)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@1  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //neg
A=M-1
M=-M
@RETURN
0;JMP

(Array.isEqual)
@2
D=A
(Array.isEqual_LOOP)
@Array.isEqual_END
D;JEQ
@SP
A=M
M=0
@SP
M=M+1
D=D-1
@Array.isEqual_LOOP
0;JMP
(Array.isEqual_END)

@ARG //push argument
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //pop pointer
AM=M-1
D=M
@THIS
M=D
@R3 //push pointer
D=M
@SP
A=M
M=D
@SP
M=M+1
@LCL //pop local
D=M
@0
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL //pop local
D=M
@1
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
(Array.isEqual$while2)
@LCL //push local
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG //push argument
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
D=M-D
M=-1
@lt97
D;JLT
@SP
A=M-1
M=0
(lt97)
@SP  //not
A=M-1
M=!M
@SP
AM=M-1
D=M
@Array.isEqual$whileend2
D;JNE
@LCL //push local
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@LCL //push local
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@SP  //pop pointer
AM=M-1
D=M
@THAT
M=D
@THAT    //push that
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG //push argument
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@LCL //push local
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@SP  //pop pointer
AM=M-1
D=M
@THAT
M=D
@THAT    //push that
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
D=D-M
M=-1
@eq98
D;JEQ
@SP
A=M-1
M=0
(eq98)
@SP  //not
A=M-1
M=!M
@SP
AM=M-1
D=M
@Array.isEqual$if3
D;JNE
@Array.isEqual$ifelse3
0;JMP
(Array.isEqual$if3)
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@RETURN
0;JMP

(Array.isEqual$ifelse3)
@LCL //push local
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@LCL //pop local
D=M
@1
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@Array.isEqual$while2
0;JMP
(Array.isEqual$whileend2)
@1  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //neg
A=M-1
M=-M
@RETURN
0;JMP

(String.new)
@0
D=A
(String.new_LOOP)
@String.new_END
D;JEQ
@SP
A=M
M=0
@SP
M=M+1
D=D-1
@String.new_LOOP
0;JMP
(String.new_END)

@3  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@Memory.alloc
D=A
@R13
M=D
@return650
D=A
@CALL
0;JMP
(return650)
@SP  //pop pointer
AM=M-1
D=M
@THIS
M=D
@ARG //push argument
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
D=M-D
M=-1
@lt99
D;JLT
@SP
A=M-1
M=0
(lt99)
@SP
AM=M-1
D=M
@String.new$if1
D;JNE
@String.new$ifelse1
0;JMP
(String.new$if1)
@14  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@Sys.error
D=A
@R13
M=D
@return651
D=A
@CALL
0;JMP
(return651)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
(String.new$ifelse1)
@ARG //push argument
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
D=M-D
M=-1
@gt100
D;JGT
@SP
A=M-1
M=0
(gt100)
@SP
AM=M-1
D=M
@String.new$if6
D;JNE
@String.new$ifelse6
0;JMP
(String.new$if6)
@ARG //push argument
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@Array.new
D=A
@R13
M=D
@return652
D=A
@CALL
0;JMP
(return652)
@THIS    //pop this
D=M
@1
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
(String.new$ifelse6)
@ARG //push argument
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS    //pop this
D=M
@0
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@THIS    //pop this
D=M
@2
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@R3 //push pointer
D=M
@SP
A=M
M=D
@SP
M=M+1
@RETURN
0;JMP

(String.dispose)
@0
D=A
(String.dispose_LOOP)
@String.dispose_END
D;JEQ
@SP
A=M
M=0
@SP
M=M+1
D=D-1
@String.dispose_LOOP
0;JMP
(String.dispose_END)

@ARG //push argument
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //pop pointer
AM=M-1
D=M
@THIS
M=D
@THIS    //push this
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
D=M-D
M=-1
@gt101
D;JGT
@SP
A=M-1
M=0
(gt101)
@SP
AM=M-1
D=M
@String.dispose$if1
D;JNE
@String.dispose$ifelse1
0;JMP
(String.dispose$if1)
@THIS    //push this
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@Array.dispose
D=A
@R13
M=D
@return653
D=A
@CALL
0;JMP
(return653)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
(String.dispose$ifelse1)
@R3 //push pointer
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@Memory.deAlloc
D=A
@R13
M=D
@return654
D=A
@CALL
0;JMP
(return654)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@RETURN
0;JMP

(String.length)
@0
D=A
(String.length_LOOP)
@String.length_END
D;JEQ
@SP
A=M
M=0
@SP
M=M+1
D=D-1
@String.length_LOOP
0;JMP
(String.length_END)

@ARG //push argument
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //pop pointer
AM=M-1
D=M
@THIS
M=D
@THIS    //push this
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@RETURN
0;JMP

(String.charAt)
@0
D=A
(String.charAt_LOOP)
@String.charAt_END
D;JEQ
@SP
A=M
M=0
@SP
M=M+1
D=D-1
@String.charAt_LOOP
0;JMP
(String.charAt_END)

@ARG //push argument
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //pop pointer
AM=M-1
D=M
@THIS
M=D
@ARG //push argument
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
D=M-D
M=-1
@lt102
D;JLT
@SP
A=M-1
M=0
(lt102)
@ARG //push argument
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS    //push this
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
D=M-D
M=-1
@gt103
D;JGT
@SP
A=M-1
M=0
(gt103)
@SP  //or
AM=M-1
D=M
A=A-1
M=D|M
@ARG //push argument
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS    //push this
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
D=D-M
M=-1
@eq104
D;JEQ
@SP
A=M-1
M=0
(eq104)
@SP  //or
AM=M-1
D=M
A=A-1
M=D|M
@SP
AM=M-1
D=M
@String.charAt$if1
D;JNE
@String.charAt$ifelse1
0;JMP
(String.charAt$if1)
@15  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@Sys.error
D=A
@R13
M=D
@return655
D=A
@CALL
0;JMP
(return655)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
(String.charAt$ifelse1)
@THIS    //push this
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG //push argument
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@SP  //pop pointer
AM=M-1
D=M
@THAT
M=D
@THAT    //push that
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@RETURN
0;JMP

(String.setCharAt)
@0
D=A
(String.setCharAt_LOOP)
@String.setCharAt_END
D;JEQ
@SP
A=M
M=0
@SP
M=M+1
D=D-1
@String.setCharAt_LOOP
0;JMP
(String.setCharAt_END)

@ARG //push argument
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //pop pointer
AM=M-1
D=M
@THIS
M=D
@ARG //push argument
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
D=M-D
M=-1
@lt105
D;JLT
@SP
A=M-1
M=0
(lt105)
@ARG //push argument
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS    //push this
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
D=M-D
M=-1
@gt106
D;JGT
@SP
A=M-1
M=0
(gt106)
@SP  //or
AM=M-1
D=M
A=A-1
M=D|M
@ARG //push argument
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS    //push this
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
D=D-M
M=-1
@eq107
D;JEQ
@SP
A=M-1
M=0
(eq107)
@SP  //or
AM=M-1
D=M
A=A-1
M=D|M
@SP
AM=M-1
D=M
@String.setCharAt$if1
D;JNE
@String.setCharAt$ifelse1
0;JMP
(String.setCharAt$if1)
@16  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@Sys.error
D=A
@R13
M=D
@return656
D=A
@CALL
0;JMP
(return656)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
(String.setCharAt$ifelse1)
@ARG //push argument
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS    //push this
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@ARG //push argument
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@SP  //pop pointer
AM=M-1
D=M
@THAT
M=D
@R5 //push temp
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT    //pop that
D=M
@0
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@RETURN
0;JMP

(String.appendChar)
@0
D=A
(String.appendChar_LOOP)
@String.appendChar_END
D;JEQ
@SP
A=M
M=0
@SP
M=M+1
D=D-1
@String.appendChar_LOOP
0;JMP
(String.appendChar_END)

@ARG //push argument
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //pop pointer
AM=M-1
D=M
@THIS
M=D
@THIS    //push this
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS    //push this
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
D=D-M
M=-1
@eq108
D;JEQ
@SP
A=M-1
M=0
(eq108)
@SP
AM=M-1
D=M
@String.appendChar$if1
D;JNE
@String.appendChar$ifelse1
0;JMP
(String.appendChar$if1)
@17  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@Sys.error
D=A
@R13
M=D
@return657
D=A
@CALL
0;JMP
(return657)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
(String.appendChar$ifelse1)
@THIS    //push this
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS    //push this
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@ARG //push argument
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@SP  //pop pointer
AM=M-1
D=M
@THAT
M=D
@R5 //push temp
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT    //pop that
D=M
@0
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@THIS    //push this
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@THIS    //pop this
D=M
@2
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@R3 //push pointer
D=M
@SP
A=M
M=D
@SP
M=M+1
@RETURN
0;JMP

(String.appendArray)
@1
D=A
(String.appendArray_LOOP)
@String.appendArray_END
D;JEQ
@SP
A=M
M=0
@SP
M=M+1
D=D-1
@String.appendArray_LOOP
0;JMP
(String.appendArray_END)

@ARG //push argument
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //pop pointer
AM=M-1
D=M
@THIS
M=D
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL //pop local
D=M
@0
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
(String.appendArray$while2)
@LCL //push local
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG //push argument
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
D=M-D
M=-1
@lt109
D;JLT
@SP
A=M-1
M=0
(lt109)
@SP  //not
A=M-1
M=!M
@SP
AM=M-1
D=M
@String.appendArray$whileend2
D;JNE
@R3 //push pointer
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG //push argument
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@LCL //push local
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@SP  //pop pointer
AM=M-1
D=M
@THAT
M=D
@THAT    //push that
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return658
D=A
@CALL
0;JMP
(return658)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@LCL //push local
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@LCL //pop local
D=M
@0
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@String.appendArray$while2
0;JMP
(String.appendArray$whileend2)
@R3 //push pointer
D=M
@SP
A=M
M=D
@SP
M=M+1
@RETURN
0;JMP

(String.eraseLastChar)
@0
D=A
(String.eraseLastChar_LOOP)
@String.eraseLastChar_END
D;JEQ
@SP
A=M
M=0
@SP
M=M+1
D=D-1
@String.eraseLastChar_LOOP
0;JMP
(String.eraseLastChar_END)

@ARG //push argument
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //pop pointer
AM=M-1
D=M
@THIS
M=D
@THIS    //push this
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
D=D-M
M=-1
@eq110
D;JEQ
@SP
A=M-1
M=0
(eq110)
@SP
AM=M-1
D=M
@String.eraseLastChar$if1
D;JNE
@String.eraseLastChar$ifelse1
0;JMP
(String.eraseLastChar$if1)
@18  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@Sys.error
D=A
@R13
M=D
@return659
D=A
@CALL
0;JMP
(return659)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
(String.eraseLastChar$ifelse1)
@THIS    //push this
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //sub
AM=M-1
D=M
A=A-1
M=M-D
@THIS    //pop this
D=M
@2
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@RETURN
0;JMP

(String.intValue)
@5
D=A
(String.intValue_LOOP)
@String.intValue_END
D;JEQ
@SP
A=M
M=0
@SP
M=M+1
D=D-1
@String.intValue_LOOP
0;JMP
(String.intValue_END)

@ARG //push argument
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //pop pointer
AM=M-1
D=M
@THIS
M=D
@THIS    //push this
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
D=D-M
M=-1
@eq111
D;JEQ
@SP
A=M-1
M=0
(eq111)
@SP
AM=M-1
D=M
@String.intValue$if1
D;JNE
@String.intValue$ifelse1
0;JMP
(String.intValue$if1)
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@RETURN
0;JMP

(String.intValue$ifelse1)
@1  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //neg
A=M-1
M=-M
@LCL //pop local
D=M
@3
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@THIS    //push this
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@SP  //pop pointer
AM=M-1
D=M
@THAT
M=D
@THAT    //push that
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@45  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
D=D-M
M=-1
@eq112
D;JEQ
@SP
A=M-1
M=0
(eq112)
@SP
AM=M-1
D=M
@String.intValue$if4
D;JNE
@String.intValue$ifelse4
0;JMP
(String.intValue$if4)
@1  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //neg
A=M-1
M=-M
@LCL //pop local
D=M
@4
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@1  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL //pop local
D=M
@0
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
(String.intValue$ifelse4)
(String.intValue$while8)
@LCL //push local
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS    //push this
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
D=M-D
M=-1
@lt113
D;JLT
@SP
A=M-1
M=0
(lt113)
@LCL //push local
D=M
@3
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //and
AM=M-1
D=M
A=A-1
M=D&M
@SP  //not
A=M-1
M=!M
@SP
AM=M-1
D=M
@String.intValue$whileend8
D;JNE
@THIS    //push this
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@LCL //push local
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@SP  //pop pointer
AM=M-1
D=M
@THAT
M=D
@THAT    //push that
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@48  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //sub
AM=M-1
D=M
A=A-1
M=M-D
@LCL //pop local
D=M
@2
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@LCL //push local
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
D=M-D
M=-1
@lt114
D;JLT
@SP
A=M-1
M=0
(lt114)
@LCL //push local
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@9  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
D=M-D
M=-1
@gt115
D;JGT
@SP
A=M-1
M=0
(gt115)
@SP  //or
AM=M-1
D=M
A=A-1
M=D|M
@SP  //not
A=M-1
M=!M
@LCL //pop local
D=M
@3
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@LCL //push local
D=M
@3
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
@String.intValue$if9
D;JNE
@String.intValue$ifelse9
0;JMP
(String.intValue$if9)
@LCL //push local
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@10  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@Math.multiply
D=A
@R13
M=D
@return660
D=A
@CALL
0;JMP
(return660)
@LCL //push local
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@LCL //pop local
D=M
@1
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@LCL //push local
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@LCL //pop local
D=M
@0
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
(String.intValue$ifelse9)
@String.intValue$while8
0;JMP
(String.intValue$whileend8)
@LCL //push local
D=M
@4
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
@String.intValue$if14
D;JNE
@String.intValue$ifelse14
0;JMP
(String.intValue$if14)
@LCL //push local
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //neg
A=M-1
M=-M
@LCL //pop local
D=M
@1
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
(String.intValue$ifelse14)
@LCL //push local
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@RETURN
0;JMP

(String.setInt)
@4
D=A
(String.setInt_LOOP)
@String.setInt_END
D;JEQ
@SP
A=M
M=0
@SP
M=M+1
D=D-1
@String.setInt_LOOP
0;JMP
(String.setInt_END)

@ARG //push argument
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //pop pointer
AM=M-1
D=M
@THIS
M=D
@THIS    //push this
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
D=D-M
M=-1
@eq116
D;JEQ
@SP
A=M-1
M=0
(eq116)
@SP
AM=M-1
D=M
@String.setInt$if1
D;JNE
@String.setInt$ifelse1
0;JMP
(String.setInt$if1)
@19  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@Sys.error
D=A
@R13
M=D
@return661
D=A
@CALL
0;JMP
(return661)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
(String.setInt$ifelse1)
@6  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@Array.new
D=A
@R13
M=D
@return662
D=A
@CALL
0;JMP
(return662)
@LCL //pop local
D=M
@2
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@ARG //push argument
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
D=M-D
M=-1
@lt117
D;JLT
@SP
A=M-1
M=0
(lt117)
@SP
AM=M-1
D=M
@String.setInt$if6
D;JNE
@String.setInt$ifelse6
0;JMP
(String.setInt$if6)
@1  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //neg
A=M-1
M=-M
@LCL //pop local
D=M
@3
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@ARG //push argument
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //neg
A=M-1
M=-M
@ARG //pop argument
D=M
@1
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
(String.setInt$ifelse6)
@ARG //push argument
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@LCL //pop local
D=M
@1
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
(String.setInt$while10)
@LCL //push local
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
D=M-D
M=-1
@gt118
D;JGT
@SP
A=M-1
M=0
(gt118)
@SP  //not
A=M-1
M=!M
@SP
AM=M-1
D=M
@String.setInt$whileend10
D;JNE
@ARG //push argument
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@10  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@Math.divide
D=A
@R13
M=D
@return663
D=A
@CALL
0;JMP
(return663)
@LCL //pop local
D=M
@1
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@LCL //push local
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@LCL //push local
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@48  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@ARG //push argument
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@LCL //push local
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@10  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@Math.multiply
D=A
@R13
M=D
@return664
D=A
@CALL
0;JMP
(return664)
@SP  //sub
AM=M-1
D=M
A=A-1
M=M-D
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@SP  //pop pointer
AM=M-1
D=M
@THAT
M=D
@R5 //push temp
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT    //pop that
D=M
@0
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@LCL //push local
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@LCL //pop local
D=M
@0
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@LCL //push local
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG //pop argument
D=M
@1
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@String.setInt$while10
0;JMP
(String.setInt$whileend10)
@LCL //push local
D=M
@3
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
@String.setInt$if13
D;JNE
@String.setInt$ifelse13
0;JMP
(String.setInt$if13)
@LCL //push local
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@LCL //push local
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@45  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@SP  //pop pointer
AM=M-1
D=M
@THAT
M=D
@R5 //push temp
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT    //pop that
D=M
@0
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@LCL //push local
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@LCL //pop local
D=M
@0
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
(String.setInt$ifelse13)
@THIS    //push this
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@LCL //push local
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
D=M-D
M=-1
@lt119
D;JLT
@SP
A=M-1
M=0
(lt119)
@SP
AM=M-1
D=M
@String.setInt$if16
D;JNE
@String.setInt$ifelse16
0;JMP
(String.setInt$if16)
@19  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@Sys.error
D=A
@R13
M=D
@return665
D=A
@CALL
0;JMP
(return665)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
(String.setInt$ifelse16)
@LCL //push local
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
D=D-M
M=-1
@eq120
D;JEQ
@SP
A=M-1
M=0
(eq120)
@SP
AM=M-1
D=M
@String.setInt$if21
D;JNE
@String.setInt$ifelse21
0;JMP
(String.setInt$if21)
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@THIS    //push this
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@48  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@SP  //pop pointer
AM=M-1
D=M
@THAT
M=D
@R5 //push temp
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT    //pop that
D=M
@0
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@1  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@THIS    //pop this
D=M
@2
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@String.setInt$ifend21
0;JMP
(String.setInt$ifelse21)
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@THIS    //pop this
D=M
@2
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
(String.setInt$while25)
@THIS    //push this
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@LCL //push local
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
D=M-D
M=-1
@lt121
D;JLT
@SP
A=M-1
M=0
(lt121)
@SP  //not
A=M-1
M=!M
@SP
AM=M-1
D=M
@String.setInt$whileend25
D;JNE
@THIS    //push this
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS    //push this
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@LCL //push local
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@LCL //push local
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS    //push this
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@SP  //sub
AM=M-1
D=M
A=A-1
M=M-D
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@SP  //pop pointer
AM=M-1
D=M
@THAT
M=D
@THAT    //push that
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@SP  //pop pointer
AM=M-1
D=M
@THAT
M=D
@R5 //push temp
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT    //pop that
D=M
@0
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@THIS    //push this
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@THIS    //pop this
D=M
@2
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@String.setInt$while25
0;JMP
(String.setInt$whileend25)
(String.setInt$ifend21)
@LCL //push local
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@Array.dispose
D=A
@R13
M=D
@return666
D=A
@CALL
0;JMP
(return666)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@RETURN
0;JMP

(String.newLine)
@0
D=A
(String.newLine_LOOP)
@String.newLine_END
D;JEQ
@SP
A=M
M=0
@SP
M=M+1
D=D-1
@String.newLine_LOOP
0;JMP
(String.newLine_END)

@128  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@RETURN
0;JMP

(String.backSpace)
@0
D=A
(String.backSpace_LOOP)
@String.backSpace_END
D;JEQ
@SP
A=M
M=0
@SP
M=M+1
D=D-1
@String.backSpace_LOOP
0;JMP
(String.backSpace_END)

@129  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@RETURN
0;JMP

(String.doubleQuote)
@0
D=A
(String.doubleQuote_LOOP)
@String.doubleQuote_END
D;JEQ
@SP
A=M
M=0
@SP
M=M+1
D=D-1
@String.doubleQuote_LOOP
0;JMP
(String.doubleQuote_END)

@34  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@RETURN
0;JMP

(Ethernet.read)
@4
D=A
(Ethernet.read_LOOP)
@Ethernet.read_END
D;JEQ
@SP
A=M
M=0
@SP
M=M+1
D=D-1
@Ethernet.read_LOOP
0;JMP
(Ethernet.read_END)

@0
D=A
@R14
M=D
@GPIO.getLed
D=A
@R13
M=D
@return667
D=A
@CALL
0;JMP
(return667)
@8  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //or
AM=M-1
D=M
A=A-1
M=D|M
@1
D=A
@R14
M=D
@GPIO.setLed
D=A
@R13
M=D
@return668
D=A
@CALL
0;JMP
(return668)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@ARG //push argument
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@13  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
D=M-D
M=-1
@gt122
D;JGT
@SP
A=M-1
M=0
(gt122)
@SP
AM=M-1
D=M
@Ethernet.read$if3
D;JNE
@Ethernet.read$ifelse3
0;JMP
(Ethernet.read$if3)
@ARG //push argument
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@LCL //pop local
D=M
@0
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@ARG //push argument
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@6  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@LCL //pop local
D=M
@1
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@ARG //push argument
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@12  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@SP  //pop pointer
AM=M-1
D=M
@THAT
M=D
@THAT    //push that
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@256  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@Math.multiply
D=A
@R13
M=D
@return669
D=A
@CALL
0;JMP
(return669)
@ARG //push argument
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@13  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@SP  //pop pointer
AM=M-1
D=M
@THAT
M=D
@THAT    //push that
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@LCL //pop local
D=M
@3
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@ARG //push argument
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@14  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@LCL //pop local
D=M
@2
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@LCL //push local
D=M
@3
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@2054  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
D=D-M
M=-1
@eq123
D;JEQ
@SP
A=M-1
M=0
(eq123)
@SP
AM=M-1
D=M
@Ethernet.read$if4
D;JNE
@Ethernet.read$ifelse4
0;JMP
(Ethernet.read$if4)
@LCL //push local
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG //push argument
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@14  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //sub
AM=M-1
D=M
A=A-1
M=M-D
@2
D=A
@R14
M=D
@ARP.read
D=A
@R13
M=D
@return670
D=A
@CALL
0;JMP
(return670)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
(Ethernet.read$ifelse4)
@LCL //push local
D=M
@3
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@2048  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
D=D-M
M=-1
@eq124
D;JEQ
@SP
A=M-1
M=0
(eq124)
@SP
AM=M-1
D=M
@Ethernet.read$if9
D;JNE
@Ethernet.read$ifelse9
0;JMP
(Ethernet.read$if9)
@LCL //push local
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG //push argument
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@14  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //sub
AM=M-1
D=M
A=A-1
M=M-D
@2
D=A
@R14
M=D
@IP.read
D=A
@R13
M=D
@return671
D=A
@CALL
0;JMP
(return671)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
(Ethernet.read$ifelse9)
(Ethernet.read$ifelse3)
@0
D=A
@R14
M=D
@GPIO.getLed
D=A
@R13
M=D
@return672
D=A
@CALL
0;JMP
(return672)
@247  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //and
AM=M-1
D=M
A=A-1
M=D&M
@1
D=A
@R14
M=D
@GPIO.setLed
D=A
@R13
M=D
@return673
D=A
@CALL
0;JMP
(return673)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@RETURN
0;JMP

(Ethernet.write)
@1
D=A
(Ethernet.write_LOOP)
@Ethernet.write_END
D;JEQ
@SP
A=M
M=0
@SP
M=M+1
D=D-1
@Ethernet.write_LOOP
0;JMP
(Ethernet.write_END)

@0
D=A
@R14
M=D
@GPIO.getLed
D=A
@R13
M=D
@return674
D=A
@CALL
0;JMP
(return674)
@4  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //or
AM=M-1
D=M
A=A-1
M=D|M
@1
D=A
@R14
M=D
@GPIO.setLed
D=A
@R13
M=D
@return675
D=A
@CALL
0;JMP
(return675)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@14  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@String.new
D=A
@R13
M=D
@return676
D=A
@CALL
0;JMP
(return676)
@LCL //pop local
D=M
@0
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@LCL //push local
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG //push argument
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@6  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@3
D=A
@R14
M=D
@String.appendArray
D=A
@R13
M=D
@return677
D=A
@CALL
0;JMP
(return677)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@LCL //push local
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@0
D=A
@R14
M=D
@Network.getMyMAC
D=A
@R13
M=D
@return678
D=A
@CALL
0;JMP
(return678)
@6  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@3
D=A
@R14
M=D
@String.appendArray
D=A
@R13
M=D
@return679
D=A
@CALL
0;JMP
(return679)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@LCL //push local
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG //push argument
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@Math.getHigh
D=A
@R13
M=D
@return680
D=A
@CALL
0;JMP
(return680)
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return681
D=A
@CALL
0;JMP
(return681)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@LCL //push local
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG //push argument
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@Math.getLow
D=A
@R13
M=D
@return682
D=A
@CALL
0;JMP
(return682)
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return683
D=A
@CALL
0;JMP
(return683)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@LCL //push local
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG //push argument
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@List.new
D=A
@R13
M=D
@return684
D=A
@CALL
0;JMP
(return684)
@ARG //pop argument
D=M
@2
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@ARG //push argument
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@ENC28J60.transmitPacket
D=A
@R13
M=D
@return685
D=A
@CALL
0;JMP
(return685)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@ARG //push argument
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@List.pop
D=A
@R13
M=D
@return686
D=A
@CALL
0;JMP
(return686)
@ARG //pop argument
D=M
@2
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@0
D=A
@R14
M=D
@GPIO.getLed
D=A
@R13
M=D
@return687
D=A
@CALL
0;JMP
(return687)
@251  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //and
AM=M-1
D=M
A=A-1
M=D&M
@1
D=A
@R14
M=D
@GPIO.setLed
D=A
@R13
M=D
@return688
D=A
@CALL
0;JMP
(return688)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@RETURN
0;JMP

(IP.read)
@6
D=A
(IP.read_LOOP)
@IP.read_END
D;JEQ
@SP
A=M
M=0
@SP
M=M+1
D=D-1
@IP.read_LOOP
0;JMP
(IP.read_END)

@0
D=A
@R14
M=D
@GPIO.getLed
D=A
@R13
M=D
@return689
D=A
@CALL
0;JMP
(return689)
@32  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //or
AM=M-1
D=M
A=A-1
M=D|M
@1
D=A
@R14
M=D
@GPIO.setLed
D=A
@R13
M=D
@return690
D=A
@CALL
0;JMP
(return690)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@ARG //push argument
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@SP  //pop pointer
AM=M-1
D=M
@THAT
M=D
@THAT    //push that
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@LCL //pop local
D=M
@0
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@ARG //push argument
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@2  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@SP  //pop pointer
AM=M-1
D=M
@THAT
M=D
@THAT    //push that
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@256  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@Math.multiply
D=A
@R13
M=D
@return691
D=A
@CALL
0;JMP
(return691)
@ARG //push argument
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@3  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@SP  //pop pointer
AM=M-1
D=M
@THAT
M=D
@THAT    //push that
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //or
AM=M-1
D=M
A=A-1
M=D|M
@LCL //pop local
D=M
@1
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@ARG //push argument
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@9  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@SP  //pop pointer
AM=M-1
D=M
@THAT
M=D
@THAT    //push that
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@LCL //pop local
D=M
@2
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@ARG //push argument
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@12  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@LCL //pop local
D=M
@3
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@ARG //push argument
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@16  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@LCL //pop local
D=M
@4
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@ARG //push argument
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@20  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@LCL //pop local
D=M
@5
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@LCL //push local
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@69  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
D=D-M
M=-1
@eq125
D;JEQ
@SP
A=M-1
M=0
(eq125)
@SP
AM=M-1
D=M
@IP.read$if3
D;JNE
@IP.read$ifelse3
0;JMP
(IP.read$if3)
@LCL //push local
D=M
@4
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@Network.isMyIP
D=A
@R13
M=D
@return692
D=A
@CALL
0;JMP
(return692)
@LCL //push local
D=M
@4
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@Network.isBroadcastIP
D=A
@R13
M=D
@return693
D=A
@CALL
0;JMP
(return693)
@SP  //or
AM=M-1
D=M
A=A-1
M=D|M
@SP
AM=M-1
D=M
@IP.read$if4
D;JNE
@IP.read$ifelse4
0;JMP
(IP.read$if4)
@LCL //push local
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
D=D-M
M=-1
@eq126
D;JEQ
@SP
A=M-1
M=0
(eq126)
@SP
AM=M-1
D=M
@IP.read$if5
D;JNE
@IP.read$ifelse5
0;JMP
(IP.read$if5)
@LCL //push local
D=M
@3
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@LCL //push local
D=M
@5
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@LCL //push local
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@20  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //sub
AM=M-1
D=M
A=A-1
M=M-D
@3
D=A
@R14
M=D
@IMCP.read
D=A
@R13
M=D
@return694
D=A
@CALL
0;JMP
(return694)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
(IP.read$ifelse5)
@LCL //push local
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@6  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
D=D-M
M=-1
@eq127
D;JEQ
@SP
A=M-1
M=0
(eq127)
@SP
AM=M-1
D=M
@IP.read$if10
D;JNE
@IP.read$ifelse10
0;JMP
(IP.read$if10)
@LCL //push local
D=M
@3
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@LCL //push local
D=M
@5
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@LCL //push local
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@20  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //sub
AM=M-1
D=M
A=A-1
M=M-D
@3
D=A
@R14
M=D
@TCP.read
D=A
@R13
M=D
@return695
D=A
@CALL
0;JMP
(return695)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
(IP.read$ifelse10)
(IP.read$ifelse4)
(IP.read$ifelse3)
@0
D=A
@R14
M=D
@GPIO.getLed
D=A
@R13
M=D
@return696
D=A
@CALL
0;JMP
(return696)
@223  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //and
AM=M-1
D=M
A=A-1
M=D&M
@1
D=A
@R14
M=D
@GPIO.setLed
D=A
@R13
M=D
@return697
D=A
@CALL
0;JMP
(return697)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@RETURN
0;JMP

(IP.write)
@5
D=A
(IP.write_LOOP)
@IP.write_END
D;JEQ
@SP
A=M
M=0
@SP
M=M+1
D=D-1
@IP.write_LOOP
0;JMP
(IP.write_END)

@0
D=A
@R14
M=D
@GPIO.getLed
D=A
@R13
M=D
@return698
D=A
@CALL
0;JMP
(return698)
@16  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //or
AM=M-1
D=M
A=A-1
M=D|M
@1
D=A
@R14
M=D
@GPIO.setLed
D=A
@R13
M=D
@return699
D=A
@CALL
0;JMP
(return699)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@20  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@String.new
D=A
@R13
M=D
@return700
D=A
@CALL
0;JMP
(return700)
@LCL //pop local
D=M
@0
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@LCL //push local
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG //push argument
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@List.new
D=A
@R13
M=D
@return701
D=A
@CALL
0;JMP
(return701)
@LCL //pop local
D=M
@4
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@ARG //push argument
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@List.getLength
D=A
@R13
M=D
@return702
D=A
@CALL
0;JMP
(return702)
@20  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@LCL //pop local
D=M
@1
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@LCL //push local
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@69  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return703
D=A
@CALL
0;JMP
(return703)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@LCL //push local
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return704
D=A
@CALL
0;JMP
(return704)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@LCL //push local
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@LCL //push local
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@Math.getHigh
D=A
@R13
M=D
@return705
D=A
@CALL
0;JMP
(return705)
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return706
D=A
@CALL
0;JMP
(return706)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@LCL //push local
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@LCL //push local
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@Math.getLow
D=A
@R13
M=D
@return707
D=A
@CALL
0;JMP
(return707)
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return708
D=A
@CALL
0;JMP
(return708)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@LCL //push local
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return709
D=A
@CALL
0;JMP
(return709)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@LCL //push local
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return710
D=A
@CALL
0;JMP
(return710)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@LCL //push local
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return711
D=A
@CALL
0;JMP
(return711)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@LCL //push local
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return712
D=A
@CALL
0;JMP
(return712)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@LCL //push local
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@64  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return713
D=A
@CALL
0;JMP
(return713)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@LCL //push local
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG //push argument
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return714
D=A
@CALL
0;JMP
(return714)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@LCL //push local
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return715
D=A
@CALL
0;JMP
(return715)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@LCL //push local
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return716
D=A
@CALL
0;JMP
(return716)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@LCL //push local
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@0
D=A
@R14
M=D
@Network.getMyIP
D=A
@R13
M=D
@return717
D=A
@CALL
0;JMP
(return717)
@4  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@3
D=A
@R14
M=D
@String.appendArray
D=A
@R13
M=D
@return718
D=A
@CALL
0;JMP
(return718)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@LCL //push local
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG //push argument
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@4  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@3
D=A
@R14
M=D
@String.appendArray
D=A
@R13
M=D
@return719
D=A
@CALL
0;JMP
(return719)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@LCL //push local
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@Checksum.sumString
D=A
@R13
M=D
@return720
D=A
@CALL
0;JMP
(return720)
@SP  //not
A=M-1
M=!M
@LCL //pop local
D=M
@2
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@LCL //push local
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@10  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL //push local
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@Math.getHigh
D=A
@R13
M=D
@return721
D=A
@CALL
0;JMP
(return721)
@3
D=A
@R14
M=D
@String.setCharAt
D=A
@R13
M=D
@return722
D=A
@CALL
0;JMP
(return722)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@LCL //push local
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@11  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL //push local
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@Math.getLow
D=A
@R13
M=D
@return723
D=A
@CALL
0;JMP
(return723)
@3
D=A
@R14
M=D
@String.setCharAt
D=A
@R13
M=D
@return724
D=A
@CALL
0;JMP
(return724)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@ARG //push argument
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@Network.isMyLAN
D=A
@R13
M=D
@return725
D=A
@CALL
0;JMP
(return725)
@SP  //not
A=M-1
M=!M
@SP
AM=M-1
D=M
@IP.write$if35
D;JNE
@IP.write$ifelse35
0;JMP
(IP.write$if35)
@0
D=A
@R14
M=D
@Network.getMyGateway
D=A
@R13
M=D
@return726
D=A
@CALL
0;JMP
(return726)
@ARG //pop argument
D=M
@0
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
(IP.write$ifelse35)
@ARG //push argument
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@ARP.getMAC
D=A
@R13
M=D
@return727
D=A
@CALL
0;JMP
(return727)
@LCL //pop local
D=M
@3
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@LCL //push local
D=M
@3
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
D=D-M
M=-1
@eq128
D;JEQ
@SP
A=M-1
M=0
(eq128)
@SP
AM=M-1
D=M
@IP.write$if38
D;JNE
@IP.write$ifelse38
0;JMP
(IP.write$if38)
@ARG //push argument
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@ARP.ping
D=A
@R13
M=D
@return728
D=A
@CALL
0;JMP
(return728)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@IP.write$ifend38
0;JMP
(IP.write$ifelse38)
@LCL //push local
D=M
@3
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@2048  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL //push local
D=M
@4
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@3
D=A
@R14
M=D
@Ethernet.write
D=A
@R13
M=D
@return729
D=A
@CALL
0;JMP
(return729)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
(IP.write$ifend38)
@LCL //push local
D=M
@4
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@List.pop
D=A
@R13
M=D
@return730
D=A
@CALL
0;JMP
(return730)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@0
D=A
@R14
M=D
@GPIO.getLed
D=A
@R13
M=D
@return731
D=A
@CALL
0;JMP
(return731)
@239  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //and
AM=M-1
D=M
A=A-1
M=D&M
@1
D=A
@R14
M=D
@GPIO.setLed
D=A
@R13
M=D
@return732
D=A
@CALL
0;JMP
(return732)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@RETURN
0;JMP

(Main.main)
@1
D=A
(Main.main_LOOP)
@Main.main_END
D;JEQ
@SP
A=M
M=0
@SP
M=M+1
D=D-1
@Main.main_LOOP
0;JMP
(Main.main_END)

(Main.main$while2)
@1  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //neg
A=M-1
M=-M
@SP  //not
A=M-1
M=!M
@SP
AM=M-1
D=M
@Main.main$whileend2
D;JNE
@0
D=A
@R14
M=D
@GPIO.getBut
D=A
@R13
M=D
@return733
D=A
@CALL
0;JMP
(return733)
@SP  //not
A=M-1
M=!M
@LCL //pop local
D=M
@0
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@LCL //push local
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@4  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //and
AM=M-1
D=M
A=A-1
M=D&M
@SP
AM=M-1
D=M
@Main.main$if3
D;JNE
@Main.main$ifelse3
0;JMP
(Main.main$if3)
@0
D=A
@R14
M=D
@ARP.printAddresses
D=A
@R13
M=D
@return734
D=A
@CALL
0;JMP
(return734)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
(Main.main$ifelse3)
@LCL //push local
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@8  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //and
AM=M-1
D=M
A=A-1
M=D&M
@SP
AM=M-1
D=M
@Main.main$if8
D;JNE
@Main.main$ifelse8
0;JMP
(Main.main$if8)
@0
D=A
@R14
M=D
@ARP.clearAddresses
D=A
@R13
M=D
@return735
D=A
@CALL
0;JMP
(return735)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
(Main.main$ifelse8)
@LCL //push local
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@16  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //and
AM=M-1
D=M
A=A-1
M=D&M
@SP
AM=M-1
D=M
@Main.main$if13
D;JNE
@Main.main$ifelse13
0;JMP
(Main.main$if13)
@0
D=A
@R14
M=D
@Network.print
D=A
@R13
M=D
@return736
D=A
@CALL
0;JMP
(return736)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
(Main.main$ifelse13)
@LCL //push local
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@32  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //and
AM=M-1
D=M
A=A-1
M=D&M
@SP
AM=M-1
D=M
@Main.main$if18
D;JNE
@Main.main$ifelse18
0;JMP
(Main.main$if18)
(Main.main$ifelse18)
@LCL //push local
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@64  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //and
AM=M-1
D=M
A=A-1
M=D&M
@SP
AM=M-1
D=M
@Main.main$if21
D;JNE
@Main.main$ifelse21
0;JMP
(Main.main$if21)
@0
D=A
@R14
M=D
@TCP.printSockets
D=A
@R13
M=D
@return737
D=A
@CALL
0;JMP
(return737)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
(Main.main$ifelse21)
@LCL //push local
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@128  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //and
AM=M-1
D=M
A=A-1
M=D&M
@SP
AM=M-1
D=M
@Main.main$if26
D;JNE
@Main.main$ifelse26
0;JMP
(Main.main$if26)
@0
D=A
@R14
M=D
@TCP.clearSockets
D=A
@R13
M=D
@return738
D=A
@CALL
0;JMP
(return738)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
(Main.main$ifelse26)
@0
D=A
@R14
M=D
@ENC28J60.receivePacket
D=A
@R13
M=D
@return739
D=A
@CALL
0;JMP
(return739)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@Main.main$while2
0;JMP
(Main.main$whileend2)
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@RETURN
0;JMP

(IMCP.read)
@7
D=A
(IMCP.read_LOOP)
@IMCP.read_END
D;JEQ
@SP
A=M
M=0
@SP
M=M+1
D=D-1
@IMCP.read_LOOP
0;JMP
(IMCP.read_END)

@ARG //push argument
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@7  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
D=M-D
M=-1
@gt129
D;JGT
@SP
A=M-1
M=0
(gt129)
@SP
AM=M-1
D=M
@IMCP.read$if1
D;JNE
@IMCP.read$ifelse1
0;JMP
(IMCP.read$if1)
@ARG //push argument
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@SP  //pop pointer
AM=M-1
D=M
@THAT
M=D
@THAT    //push that
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@LCL //pop local
D=M
@0
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@ARG //push argument
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@SP  //pop pointer
AM=M-1
D=M
@THAT
M=D
@THAT    //push that
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@LCL //pop local
D=M
@1
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@ARG //push argument
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@4  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@SP  //pop pointer
AM=M-1
D=M
@THAT
M=D
@THAT    //push that
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@256  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@Math.multiply
D=A
@R13
M=D
@return740
D=A
@CALL
0;JMP
(return740)
@ARG //push argument
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@5  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@SP  //pop pointer
AM=M-1
D=M
@THAT
M=D
@THAT    //push that
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //or
AM=M-1
D=M
A=A-1
M=D|M
@LCL //pop local
D=M
@2
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@ARG //push argument
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@6  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@SP  //pop pointer
AM=M-1
D=M
@THAT
M=D
@THAT    //push that
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@256  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@Math.multiply
D=A
@R13
M=D
@return741
D=A
@CALL
0;JMP
(return741)
@ARG //push argument
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@7  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@SP  //pop pointer
AM=M-1
D=M
@THAT
M=D
@THAT    //push that
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //or
AM=M-1
D=M
A=A-1
M=D|M
@LCL //pop local
D=M
@3
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@ARG //push argument
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@8  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@LCL //pop local
D=M
@4
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@ARG //push argument
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@8  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //sub
AM=M-1
D=M
A=A-1
M=M-D
@ARG //pop argument
D=M
@2
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@0
D=A
@R14
M=D
@Screen.GREEN
D=A
@R13
M=D
@return742
D=A
@CALL
0;JMP
(return742)
@1
D=A
@R14
M=D
@Screen.setColor
D=A
@R13
M=D
@return743
D=A
@CALL
0;JMP
(return743)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@5  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@String.new
D=A
@R13
M=D
@return744
D=A
@CALL
0;JMP
(return744)
@73  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return745
D=A
@CALL
0;JMP
(return745)
@77  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return746
D=A
@CALL
0;JMP
(return746)
@67  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return747
D=A
@CALL
0;JMP
(return747)
@80  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return748
D=A
@CALL
0;JMP
(return748)
@32  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return749
D=A
@CALL
0;JMP
(return749)
@1
D=A
@R14
M=D
@Output.printString
D=A
@R13
M=D
@return750
D=A
@CALL
0;JMP
(return750)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@ARG //push argument
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@Address.printIP
D=A
@R13
M=D
@return751
D=A
@CALL
0;JMP
(return751)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@12  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@String.new
D=A
@R13
M=D
@return752
D=A
@CALL
0;JMP
(return752)
@32  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return753
D=A
@CALL
0;JMP
(return753)
@105  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return754
D=A
@CALL
0;JMP
(return754)
@109  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return755
D=A
@CALL
0;JMP
(return755)
@99  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return756
D=A
@CALL
0;JMP
(return756)
@112  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return757
D=A
@CALL
0;JMP
(return757)
@95  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return758
D=A
@CALL
0;JMP
(return758)
@115  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return759
D=A
@CALL
0;JMP
(return759)
@101  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return760
D=A
@CALL
0;JMP
(return760)
@121  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return761
D=A
@CALL
0;JMP
(return761)
@32  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return762
D=A
@CALL
0;JMP
(return762)
@61  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return763
D=A
@CALL
0;JMP
(return763)
@32  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return764
D=A
@CALL
0;JMP
(return764)
@1
D=A
@R14
M=D
@Output.printString
D=A
@R13
M=D
@return765
D=A
@CALL
0;JMP
(return765)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@LCL //push local
D=M
@3
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@Output.printInt
D=A
@R13
M=D
@return766
D=A
@CALL
0;JMP
(return766)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@0
D=A
@R14
M=D
@Output.println
D=A
@R13
M=D
@return767
D=A
@CALL
0;JMP
(return767)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@0
D=A
@R14
M=D
@Screen.WHITE
D=A
@R13
M=D
@return768
D=A
@CALL
0;JMP
(return768)
@1
D=A
@R14
M=D
@Screen.setColor
D=A
@R13
M=D
@return769
D=A
@CALL
0;JMP
(return769)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@LCL //push local
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@8  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
D=D-M
M=-1
@eq130
D;JEQ
@SP
A=M-1
M=0
(eq130)
@SP
AM=M-1
D=M
@IMCP.read$if16
D;JNE
@IMCP.read$ifelse16
0;JMP
(IMCP.read$if16)
@ARG //push argument
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@String.new
D=A
@R13
M=D
@return770
D=A
@CALL
0;JMP
(return770)
@LCL //pop local
D=M
@5
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@LCL //push local
D=M
@5
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@LCL //push local
D=M
@4
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG //push argument
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@3
D=A
@R14
M=D
@String.appendArray
D=A
@R13
M=D
@return771
D=A
@CALL
0;JMP
(return771)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@LCL //push local
D=M
@5
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@List.new
D=A
@R13
M=D
@return772
D=A
@CALL
0;JMP
(return772)
@LCL //pop local
D=M
@6
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@ARG //push argument
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL //push local
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@LCL //push local
D=M
@3
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@LCL //push local
D=M
@6
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@6
D=A
@R14
M=D
@IMCP.write
D=A
@R13
M=D
@return773
D=A
@CALL
0;JMP
(return773)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@LCL //push local
D=M
@6
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@List.pop
D=A
@R13
M=D
@return774
D=A
@CALL
0;JMP
(return774)
@LCL //pop local
D=M
@6
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
(IMCP.read$ifelse16)
(IMCP.read$ifelse1)
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@RETURN
0;JMP

(IMCP.write)
@3
D=A
(IMCP.write_LOOP)
@IMCP.write_END
D;JEQ
@SP
A=M
M=0
@SP
M=M+1
D=D-1
@IMCP.write_LOOP
0;JMP
(IMCP.write_END)

@8  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@String.new
D=A
@R13
M=D
@return775
D=A
@CALL
0;JMP
(return775)
@LCL //pop local
D=M
@0
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@LCL //push local
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG //push argument
D=M
@5
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@List.new
D=A
@R13
M=D
@return776
D=A
@CALL
0;JMP
(return776)
@LCL //pop local
D=M
@1
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@LCL //push local
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG //push argument
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return777
D=A
@CALL
0;JMP
(return777)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@LCL //push local
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG //push argument
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return778
D=A
@CALL
0;JMP
(return778)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@LCL //push local
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return779
D=A
@CALL
0;JMP
(return779)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@LCL //push local
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return780
D=A
@CALL
0;JMP
(return780)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@LCL //push local
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG //push argument
D=M
@3
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@Math.getHigh
D=A
@R13
M=D
@return781
D=A
@CALL
0;JMP
(return781)
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return782
D=A
@CALL
0;JMP
(return782)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@LCL //push local
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG //push argument
D=M
@3
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@Math.getLow
D=A
@R13
M=D
@return783
D=A
@CALL
0;JMP
(return783)
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return784
D=A
@CALL
0;JMP
(return784)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@LCL //push local
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG //push argument
D=M
@4
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@Math.getHigh
D=A
@R13
M=D
@return785
D=A
@CALL
0;JMP
(return785)
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return786
D=A
@CALL
0;JMP
(return786)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@LCL //push local
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG //push argument
D=M
@4
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@Math.getLow
D=A
@R13
M=D
@return787
D=A
@CALL
0;JMP
(return787)
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return788
D=A
@CALL
0;JMP
(return788)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@LCL //push local
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@Checksum.sumList
D=A
@R13
M=D
@return789
D=A
@CALL
0;JMP
(return789)
@SP  //not
A=M-1
M=!M
@LCL //pop local
D=M
@2
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@LCL //push local
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@2  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL //push local
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@Math.getHigh
D=A
@R13
M=D
@return790
D=A
@CALL
0;JMP
(return790)
@3
D=A
@R14
M=D
@String.setCharAt
D=A
@R13
M=D
@return791
D=A
@CALL
0;JMP
(return791)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@LCL //push local
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@3  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL //push local
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@Math.getLow
D=A
@R13
M=D
@return792
D=A
@CALL
0;JMP
(return792)
@3
D=A
@R14
M=D
@String.setCharAt
D=A
@R13
M=D
@return793
D=A
@CALL
0;JMP
(return793)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@ARG //push argument
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL //push local
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@3
D=A
@R14
M=D
@IP.write
D=A
@R13
M=D
@return794
D=A
@CALL
0;JMP
(return794)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@LCL //push local
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@List.pop
D=A
@R13
M=D
@return795
D=A
@CALL
0;JMP
(return795)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@RETURN
0;JMP

(IMCP.ping)
@0
D=A
(IMCP.ping_LOOP)
@IMCP.ping_END
D;JEQ
@SP
A=M
M=0
@SP
M=M+1
D=D-1
@IMCP.ping_LOOP
0;JMP
(IMCP.ping_END)

@IMCP.0   //push static
D=M
@SP
A=M
M=D
@SP
M=M+1
@1  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@SP  //pop static
AM=M-1
D=M
@IMCP.0
M=D
@5  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@String.new
D=A
@R13
M=D
@return796
D=A
@CALL
0;JMP
(return796)
@80  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return797
D=A
@CALL
0;JMP
(return797)
@73  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return798
D=A
@CALL
0;JMP
(return798)
@78  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return799
D=A
@CALL
0;JMP
(return799)
@71  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return800
D=A
@CALL
0;JMP
(return800)
@32  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return801
D=A
@CALL
0;JMP
(return801)
@1
D=A
@R14
M=D
@Output.printString
D=A
@R13
M=D
@return802
D=A
@CALL
0;JMP
(return802)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@ARG //push argument
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@Address.printIP
D=A
@R13
M=D
@return803
D=A
@CALL
0;JMP
(return803)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@13  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@String.new
D=A
@R13
M=D
@return804
D=A
@CALL
0;JMP
(return804)
@58  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return805
D=A
@CALL
0;JMP
(return805)
@32  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return806
D=A
@CALL
0;JMP
(return806)
@105  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return807
D=A
@CALL
0;JMP
(return807)
@109  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return808
D=A
@CALL
0;JMP
(return808)
@99  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return809
D=A
@CALL
0;JMP
(return809)
@112  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return810
D=A
@CALL
0;JMP
(return810)
@95  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return811
D=A
@CALL
0;JMP
(return811)
@115  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return812
D=A
@CALL
0;JMP
(return812)
@101  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return813
D=A
@CALL
0;JMP
(return813)
@113  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return814
D=A
@CALL
0;JMP
(return814)
@32  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return815
D=A
@CALL
0;JMP
(return815)
@61  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return816
D=A
@CALL
0;JMP
(return816)
@32  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return817
D=A
@CALL
0;JMP
(return817)
@1
D=A
@R14
M=D
@Output.printString
D=A
@R13
M=D
@return818
D=A
@CALL
0;JMP
(return818)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@IMCP.0   //push static
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@Output.printInt
D=A
@R13
M=D
@return819
D=A
@CALL
0;JMP
(return819)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@0
D=A
@R14
M=D
@Output.println
D=A
@R13
M=D
@return820
D=A
@CALL
0;JMP
(return820)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@ARG //push argument
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@8  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@IMCP.0   //push static
D=M
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@6
D=A
@R14
M=D
@IMCP.write
D=A
@R13
M=D
@return821
D=A
@CALL
0;JMP
(return821)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@RETURN
0;JMP

(UART.init)
@0
D=A
(UART.init_LOOP)
@UART.init_END
D;JEQ
@SP
A=M
M=0
@SP
M=M+1
D=D-1
@UART.init_LOOP
0;JMP
(UART.init_END)

@ARG //push argument
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //pop static
AM=M-1
D=M
@UART.0
M=D
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@RETURN
0;JMP

(UART.readChar)
@1
D=A
(UART.readChar_LOOP)
@UART.readChar_END
D;JEQ
@SP
A=M
M=0
@SP
M=M+1
D=D-1
@UART.readChar_LOOP
0;JMP
(UART.readChar_END)

@1  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //neg
A=M-1
M=-M
@LCL //pop local
D=M
@0
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
(UART.readChar$while2)
@LCL //push local
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
D=M-D
M=-1
@lt131
D;JLT
@SP
A=M-1
M=0
(lt131)
@SP  //not
A=M-1
M=!M
@SP
AM=M-1
D=M
@UART.readChar$whileend2
D;JNE
@UART.0   //push static
D=M
@SP
A=M
M=D
@SP
M=M+1
@1  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@SP  //pop pointer
AM=M-1
D=M
@THAT
M=D
@THAT    //push that
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@LCL //pop local
D=M
@0
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@UART.readChar$while2
0;JMP
(UART.readChar$whileend2)
@1  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@UART.0   //push static
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@1  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //neg
A=M-1
M=-M
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@SP  //pop pointer
AM=M-1
D=M
@THAT
M=D
@R5 //push temp
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT    //pop that
D=M
@0
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@LCL //push local
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@RETURN
0;JMP

(UART.writeChar)
@1
D=A
(UART.writeChar_LOOP)
@UART.writeChar_END
D;JEQ
@SP
A=M
M=0
@SP
M=M+1
D=D-1
@UART.writeChar_LOOP
0;JMP
(UART.writeChar_END)

@1  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //neg
A=M-1
M=-M
@LCL //pop local
D=M
@0
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
(UART.writeChar$while2)
@LCL //push local
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //not
A=M-1
M=!M
@SP
AM=M-1
D=M
@UART.writeChar$whileend2
D;JNE
@UART.0   //push static
D=M
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@SP  //pop pointer
AM=M-1
D=M
@THAT
M=D
@THAT    //push that
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@LCL //pop local
D=M
@0
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@UART.writeChar$while2
0;JMP
(UART.writeChar$whileend2)
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@UART.0   //push static
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@ARG //push argument
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@SP  //pop pointer
AM=M-1
D=M
@THAT
M=D
@R5 //push temp
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT    //pop that
D=M
@0
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@RETURN
0;JMP

(UART.printString)
@1
D=A
(UART.printString_LOOP)
@UART.printString_END
D;JEQ
@SP
A=M
M=0
@SP
M=M+1
D=D-1
@UART.printString_LOOP
0;JMP
(UART.printString_END)

@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL //pop local
D=M
@0
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
(UART.printString$while2)
@LCL //push local
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG //push argument
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@String.length
D=A
@R13
M=D
@return822
D=A
@CALL
0;JMP
(return822)
@SP
AM=M-1
D=M
A=A-1
D=M-D
M=-1
@lt132
D;JLT
@SP
A=M-1
M=0
(lt132)
@SP  //not
A=M-1
M=!M
@SP
AM=M-1
D=M
@UART.printString$whileend2
D;JNE
@ARG //push argument
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@LCL //push local
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.charAt
D=A
@R13
M=D
@return823
D=A
@CALL
0;JMP
(return823)
@1
D=A
@R14
M=D
@UART.writeChar
D=A
@R13
M=D
@return824
D=A
@CALL
0;JMP
(return824)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@LCL //push local
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@LCL //pop local
D=M
@0
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@UART.printString$while2
0;JMP
(UART.printString$whileend2)
@ARG //push argument
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@String.dispose
D=A
@R13
M=D
@return825
D=A
@CALL
0;JMP
(return825)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@RETURN
0;JMP

(UART.printInt)
@1
D=A
(UART.printInt_LOOP)
@UART.printInt_END
D;JEQ
@SP
A=M
M=0
@SP
M=M+1
D=D-1
@UART.printInt_LOOP
0;JMP
(UART.printInt_END)

@6  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@String.new
D=A
@R13
M=D
@return826
D=A
@CALL
0;JMP
(return826)
@LCL //pop local
D=M
@0
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@LCL //push local
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG //push argument
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.setInt
D=A
@R13
M=D
@return827
D=A
@CALL
0;JMP
(return827)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@LCL //push local
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@UART.printString
D=A
@R13
M=D
@return828
D=A
@CALL
0;JMP
(return828)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@RETURN
0;JMP

(UART.println)
@0
D=A
(UART.println_LOOP)
@UART.println_END
D;JEQ
@SP
A=M
M=0
@SP
M=M+1
D=D-1
@UART.println_LOOP
0;JMP
(UART.println_END)

@13  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@UART.writeChar
D=A
@R13
M=D
@return829
D=A
@CALL
0;JMP
(return829)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@10  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@UART.writeChar
D=A
@R13
M=D
@return830
D=A
@CALL
0;JMP
(return830)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@RETURN
0;JMP

(UART.readInt)
@2
D=A
(UART.readInt_LOOP)
@UART.readInt_END
D;JEQ
@SP
A=M
M=0
@SP
M=M+1
D=D-1
@UART.readInt_LOOP
0;JMP
(UART.readInt_END)

@ARG //push argument
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@UART.readLine
D=A
@R13
M=D
@return831
D=A
@CALL
0;JMP
(return831)
@LCL //pop local
D=M
@0
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@LCL //push local
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@String.intValue
D=A
@R13
M=D
@return832
D=A
@CALL
0;JMP
(return832)
@LCL //pop local
D=M
@1
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@LCL //push local
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@String.dispose
D=A
@R13
M=D
@return833
D=A
@CALL
0;JMP
(return833)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@LCL //push local
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@RETURN
0;JMP

(UART.readLine)
@5
D=A
(UART.readLine_LOOP)
@UART.readLine_END
D;JEQ
@SP
A=M
M=0
@SP
M=M+1
D=D-1
@UART.readLine_LOOP
0;JMP
(UART.readLine_END)

@80  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@String.new
D=A
@R13
M=D
@return834
D=A
@CALL
0;JMP
(return834)
@LCL //pop local
D=M
@3
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@ARG //push argument
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@UART.printString
D=A
@R13
M=D
@return835
D=A
@CALL
0;JMP
(return835)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@0
D=A
@R14
M=D
@UART.readChar
D=A
@R13
M=D
@return836
D=A
@CALL
0;JMP
(return836)
@LCL //pop local
D=M
@0
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
(UART.readLine$while4)
@LCL //push local
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@13  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
D=D-M
M=-1
@eq133
D;JEQ
@SP
A=M-1
M=0
(eq133)
@SP  //not
A=M-1
M=!M
@SP  //not
A=M-1
M=!M
@SP
AM=M-1
D=M
@UART.readLine$whileend4
D;JNE
@LCL //push local
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@UART.writeChar
D=A
@R13
M=D
@return837
D=A
@CALL
0;JMP
(return837)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@LCL //push local
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@127  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
D=D-M
M=-1
@eq134
D;JEQ
@SP
A=M-1
M=0
(eq134)
@SP
AM=M-1
D=M
@UART.readLine$if7
D;JNE
@UART.readLine$ifelse7
0;JMP
(UART.readLine$if7)
@LCL //push local
D=M
@3
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@String.eraseLastChar
D=A
@R13
M=D
@return838
D=A
@CALL
0;JMP
(return838)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@UART.readLine$ifend7
0;JMP
(UART.readLine$ifelse7)
@LCL //push local
D=M
@3
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@LCL //push local
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return839
D=A
@CALL
0;JMP
(return839)
@LCL //pop local
D=M
@3
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
(UART.readLine$ifend7)
@0
D=A
@R14
M=D
@UART.readChar
D=A
@R13
M=D
@return840
D=A
@CALL
0;JMP
(return840)
@LCL //pop local
D=M
@0
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@UART.readLine$while4
0;JMP
(UART.readLine$whileend4)
@0
D=A
@R14
M=D
@UART.println
D=A
@R13
M=D
@return841
D=A
@CALL
0;JMP
(return841)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@LCL //push local
D=M
@3
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@RETURN
0;JMP

(ARP.init)
@0
D=A
(ARP.init_LOOP)
@ARP.init_END
D;JEQ
@SP
A=M
M=0
@SP
M=M+1
D=D-1
@ARP.init_LOOP
0;JMP
(ARP.init_END)

@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //pop static
AM=M-1
D=M
@ARP.0
M=D
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@RETURN
0;JMP

(ARP.read)
@11
D=A
(ARP.read_LOOP)
@ARP.read_END
D;JEQ
@SP
A=M
M=0
@SP
M=M+1
D=D-1
@ARP.read_LOOP
0;JMP
(ARP.read_END)

@ARG //push argument
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@27  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
D=M-D
M=-1
@gt135
D;JGT
@SP
A=M-1
M=0
(gt135)
@SP
AM=M-1
D=M
@ARP.read$if1
D;JNE
@ARP.read$ifelse1
0;JMP
(ARP.read$if1)
@ARG //push argument
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@SP  //pop pointer
AM=M-1
D=M
@THAT
M=D
@THAT    //push that
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@256  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@Math.multiply
D=A
@R13
M=D
@return842
D=A
@CALL
0;JMP
(return842)
@ARG //push argument
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@SP  //pop pointer
AM=M-1
D=M
@THAT
M=D
@THAT    //push that
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@LCL //pop local
D=M
@0
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@ARG //push argument
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@2  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@SP  //pop pointer
AM=M-1
D=M
@THAT
M=D
@THAT    //push that
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@256  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@Math.multiply
D=A
@R13
M=D
@return843
D=A
@CALL
0;JMP
(return843)
@ARG //push argument
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@3  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@SP  //pop pointer
AM=M-1
D=M
@THAT
M=D
@THAT    //push that
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@LCL //pop local
D=M
@1
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@ARG //push argument
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@4  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@SP  //pop pointer
AM=M-1
D=M
@THAT
M=D
@THAT    //push that
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@LCL //pop local
D=M
@2
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@ARG //push argument
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@5  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@SP  //pop pointer
AM=M-1
D=M
@THAT
M=D
@THAT    //push that
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@LCL //pop local
D=M
@3
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@ARG //push argument
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@6  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@SP  //pop pointer
AM=M-1
D=M
@THAT
M=D
@THAT    //push that
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@256  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@Math.multiply
D=A
@R13
M=D
@return844
D=A
@CALL
0;JMP
(return844)
@ARG //push argument
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@7  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@SP  //pop pointer
AM=M-1
D=M
@THAT
M=D
@THAT    //push that
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@LCL //pop local
D=M
@4
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@ARG //push argument
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@8  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@LCL //pop local
D=M
@5
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@ARG //push argument
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@14  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@LCL //pop local
D=M
@6
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@ARG //push argument
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@18  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@LCL //pop local
D=M
@7
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@ARG //push argument
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@24  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@LCL //pop local
D=M
@8
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@ARG //push argument
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@28  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@LCL //pop local
D=M
@9
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@0
D=A
@R14
M=D
@Screen.RED
D=A
@R13
M=D
@return845
D=A
@CALL
0;JMP
(return845)
@1
D=A
@R14
M=D
@Screen.setColor
D=A
@R13
M=D
@return846
D=A
@CALL
0;JMP
(return846)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@4  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@String.new
D=A
@R13
M=D
@return847
D=A
@CALL
0;JMP
(return847)
@65  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return848
D=A
@CALL
0;JMP
(return848)
@82  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return849
D=A
@CALL
0;JMP
(return849)
@80  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return850
D=A
@CALL
0;JMP
(return850)
@32  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return851
D=A
@CALL
0;JMP
(return851)
@1
D=A
@R14
M=D
@Output.printString
D=A
@R13
M=D
@return852
D=A
@CALL
0;JMP
(return852)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@LCL //push local
D=M
@6
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@Address.printIP
D=A
@R13
M=D
@return853
D=A
@CALL
0;JMP
(return853)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@LCL //push local
D=M
@4
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
D=D-M
M=-1
@eq136
D;JEQ
@SP
A=M-1
M=0
(eq136)
@SP
AM=M-1
D=M
@ARP.read$if8
D;JNE
@ARP.read$ifelse8
0;JMP
(ARP.read$if8)
@8  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@String.new
D=A
@R13
M=D
@return854
D=A
@CALL
0;JMP
(return854)
@32  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return855
D=A
@CALL
0;JMP
(return855)
@119  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return856
D=A
@CALL
0;JMP
(return856)
@104  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return857
D=A
@CALL
0;JMP
(return857)
@111  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return858
D=A
@CALL
0;JMP
(return858)
@32  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return859
D=A
@CALL
0;JMP
(return859)
@105  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return860
D=A
@CALL
0;JMP
(return860)
@115  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return861
D=A
@CALL
0;JMP
(return861)
@32  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return862
D=A
@CALL
0;JMP
(return862)
@1
D=A
@R14
M=D
@Output.printString
D=A
@R13
M=D
@return863
D=A
@CALL
0;JMP
(return863)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@LCL //push local
D=M
@8
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@Address.printIP
D=A
@R13
M=D
@return864
D=A
@CALL
0;JMP
(return864)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
(ARP.read$ifelse8)
@LCL //push local
D=M
@4
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@2  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
D=D-M
M=-1
@eq137
D;JEQ
@SP
A=M-1
M=0
(eq137)
@SP
AM=M-1
D=M
@ARP.read$if15
D;JNE
@ARP.read$ifelse15
0;JMP
(ARP.read$if15)
@4  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@String.new
D=A
@R13
M=D
@return865
D=A
@CALL
0;JMP
(return865)
@32  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return866
D=A
@CALL
0;JMP
(return866)
@105  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return867
D=A
@CALL
0;JMP
(return867)
@115  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return868
D=A
@CALL
0;JMP
(return868)
@32  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return869
D=A
@CALL
0;JMP
(return869)
@1
D=A
@R14
M=D
@Output.printString
D=A
@R13
M=D
@return870
D=A
@CALL
0;JMP
(return870)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@LCL //push local
D=M
@5
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@Address.printMAC
D=A
@R13
M=D
@return871
D=A
@CALL
0;JMP
(return871)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
(ARP.read$ifelse15)
@0
D=A
@R14
M=D
@Output.println
D=A
@R13
M=D
@return872
D=A
@CALL
0;JMP
(return872)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@0
D=A
@R14
M=D
@Screen.WHITE
D=A
@R13
M=D
@return873
D=A
@CALL
0;JMP
(return873)
@1
D=A
@R14
M=D
@Screen.setColor
D=A
@R13
M=D
@return874
D=A
@CALL
0;JMP
(return874)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@LCL //push local
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
D=D-M
M=-1
@eq138
D;JEQ
@SP
A=M-1
M=0
(eq138)
@LCL //push local
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@2048  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
D=D-M
M=-1
@eq139
D;JEQ
@SP
A=M-1
M=0
(eq139)
@SP  //and
AM=M-1
D=M
A=A-1
M=D&M
@LCL //push local
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@6  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
D=D-M
M=-1
@eq140
D;JEQ
@SP
A=M-1
M=0
(eq140)
@SP  //and
AM=M-1
D=M
A=A-1
M=D&M
@LCL //push local
D=M
@3
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@4  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
D=D-M
M=-1
@eq141
D;JEQ
@SP
A=M-1
M=0
(eq141)
@SP  //and
AM=M-1
D=M
A=A-1
M=D&M
@SP
AM=M-1
D=M
@ARP.read$if26
D;JNE
@ARP.read$ifelse26
0;JMP
(ARP.read$if26)
@LCL //push local
D=M
@6
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@LCL //push local
D=M
@5
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@ARP.setAddress
D=A
@R13
M=D
@return875
D=A
@CALL
0;JMP
(return875)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@LCL //push local
D=M
@4
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
D=D-M
M=-1
@eq142
D;JEQ
@SP
A=M-1
M=0
(eq142)
@SP
AM=M-1
D=M
@ARP.read$if29
D;JNE
@ARP.read$ifelse29
0;JMP
(ARP.read$if29)
@LCL //push local
D=M
@8
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@Network.isMyIP
D=A
@R13
M=D
@return876
D=A
@CALL
0;JMP
(return876)
@SP
AM=M-1
D=M
@ARP.read$if30
D;JNE
@ARP.read$ifelse30
0;JMP
(ARP.read$if30)
@2  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL //push local
D=M
@5
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@LCL //push local
D=M
@6
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@3
D=A
@R14
M=D
@ARP.write
D=A
@R13
M=D
@return877
D=A
@CALL
0;JMP
(return877)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
(ARP.read$ifelse30)
(ARP.read$ifelse29)
(ARP.read$ifelse26)
(ARP.read$ifelse1)
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@RETURN
0;JMP

(ARP.clearAddresses)
@2
D=A
(ARP.clearAddresses_LOOP)
@ARP.clearAddresses_END
D;JEQ
@SP
A=M
M=0
@SP
M=M+1
D=D-1
@ARP.clearAddresses_LOOP
0;JMP
(ARP.clearAddresses_END)

@ARP.0   //push static
D=M
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
D=D-M
M=-1
@eq143
D;JEQ
@SP
A=M-1
M=0
(eq143)
@SP  //not
A=M-1
M=!M
@SP
AM=M-1
D=M
@ARP.clearAddresses$if1
D;JNE
@ARP.clearAddresses$ifelse1
0;JMP
(ARP.clearAddresses$if1)
@15  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@String.new
D=A
@R13
M=D
@return878
D=A
@CALL
0;JMP
(return878)
@67  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return879
D=A
@CALL
0;JMP
(return879)
@108  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return880
D=A
@CALL
0;JMP
(return880)
@101  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return881
D=A
@CALL
0;JMP
(return881)
@97  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return882
D=A
@CALL
0;JMP
(return882)
@114  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return883
D=A
@CALL
0;JMP
(return883)
@32  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return884
D=A
@CALL
0;JMP
(return884)
@65  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return885
D=A
@CALL
0;JMP
(return885)
@82  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return886
D=A
@CALL
0;JMP
(return886)
@80  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return887
D=A
@CALL
0;JMP
(return887)
@45  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return888
D=A
@CALL
0;JMP
(return888)
@76  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return889
D=A
@CALL
0;JMP
(return889)
@105  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return890
D=A
@CALL
0;JMP
(return890)
@115  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return891
D=A
@CALL
0;JMP
(return891)
@116  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return892
D=A
@CALL
0;JMP
(return892)
@58  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return893
D=A
@CALL
0;JMP
(return893)
@1
D=A
@R14
M=D
@Output.printString
D=A
@R13
M=D
@return894
D=A
@CALL
0;JMP
(return894)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@0
D=A
@R14
M=D
@Output.println
D=A
@R13
M=D
@return895
D=A
@CALL
0;JMP
(return895)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@ARP.0   //push static
D=M
@SP
A=M
M=D
@SP
M=M+1
@LCL //pop local
D=M
@1
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
(ARP.clearAddresses$while7)
@LCL //push local
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
D=D-M
M=-1
@eq144
D;JEQ
@SP
A=M-1
M=0
(eq144)
@SP  //not
A=M-1
M=!M
@SP  //not
A=M-1
M=!M
@SP
AM=M-1
D=M
@ARP.clearAddresses$whileend7
D;JNE
@LCL //push local
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@List.getData
D=A
@R13
M=D
@return896
D=A
@CALL
0;JMP
(return896)
@LCL //pop local
D=M
@0
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@LCL //push local
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@Address.dispose
D=A
@R13
M=D
@return897
D=A
@CALL
0;JMP
(return897)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@LCL //push local
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@List.getNext
D=A
@R13
M=D
@return898
D=A
@CALL
0;JMP
(return898)
@LCL //pop local
D=M
@1
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@ARP.clearAddresses$while7
0;JMP
(ARP.clearAddresses$whileend7)
@ARP.0   //push static
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@List.dispose
D=A
@R13
M=D
@return899
D=A
@CALL
0;JMP
(return899)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //pop static
AM=M-1
D=M
@ARP.0
M=D
(ARP.clearAddresses$ifelse1)
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@RETURN
0;JMP

(ARP.setAddress)
@1
D=A
(ARP.setAddress_LOOP)
@ARP.setAddress_END
D;JEQ
@SP
A=M
M=0
@SP
M=M+1
D=D-1
@ARP.setAddress_LOOP
0;JMP
(ARP.setAddress_END)

@ARG //push argument
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@ARP.findIP
D=A
@R13
M=D
@return900
D=A
@CALL
0;JMP
(return900)
@LCL //pop local
D=M
@0
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@LCL //push local
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
D=D-M
M=-1
@eq145
D;JEQ
@SP
A=M-1
M=0
(eq145)
@SP
AM=M-1
D=M
@ARP.setAddress$if1
D;JNE
@ARP.setAddress$ifelse1
0;JMP
(ARP.setAddress$if1)
@ARG //push argument
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG //push argument
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@Address.new
D=A
@R13
M=D
@return901
D=A
@CALL
0;JMP
(return901)
@LCL //pop local
D=M
@0
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@LCL //push local
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARP.0   //push static
D=M
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@List.new
D=A
@R13
M=D
@return902
D=A
@CALL
0;JMP
(return902)
@SP  //pop static
AM=M-1
D=M
@ARP.0
M=D
@ARP.setAddress$ifend1
0;JMP
(ARP.setAddress$ifelse1)
@LCL //push local
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG //push argument
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@Address.setMAC
D=A
@R13
M=D
@return903
D=A
@CALL
0;JMP
(return903)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
(ARP.setAddress$ifend1)
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@RETURN
0;JMP

(ARP.getMAC)
@1
D=A
(ARP.getMAC_LOOP)
@ARP.getMAC_END
D;JEQ
@SP
A=M
M=0
@SP
M=M+1
D=D-1
@ARP.getMAC_LOOP
0;JMP
(ARP.getMAC_END)

@ARG //push argument
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@ARP.findIP
D=A
@R13
M=D
@return904
D=A
@CALL
0;JMP
(return904)
@LCL //pop local
D=M
@0
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@LCL //push local
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
D=D-M
M=-1
@eq146
D;JEQ
@SP
A=M-1
M=0
(eq146)
@SP
AM=M-1
D=M
@ARP.getMAC$if1
D;JNE
@ARP.getMAC$ifelse1
0;JMP
(ARP.getMAC$if1)
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@RETURN
0;JMP

(ARP.getMAC$ifelse1)
@LCL //push local
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@Address.getMAC
D=A
@R13
M=D
@return905
D=A
@CALL
0;JMP
(return905)
@RETURN
0;JMP

(ARP.findIP)
@2
D=A
(ARP.findIP_LOOP)
@ARP.findIP_END
D;JEQ
@SP
A=M
M=0
@SP
M=M+1
D=D-1
@ARP.findIP_LOOP
0;JMP
(ARP.findIP_END)

@ARP.0   //push static
D=M
@SP
A=M
M=D
@SP
M=M+1
@LCL //pop local
D=M
@1
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
(ARP.findIP$while2)
@LCL //push local
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
D=D-M
M=-1
@eq147
D;JEQ
@SP
A=M-1
M=0
(eq147)
@SP  //not
A=M-1
M=!M
@SP  //not
A=M-1
M=!M
@SP
AM=M-1
D=M
@ARP.findIP$whileend2
D;JNE
@LCL //push local
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@List.getData
D=A
@R13
M=D
@return906
D=A
@CALL
0;JMP
(return906)
@LCL //pop local
D=M
@0
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@LCL //push local
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG //push argument
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@Address.isIP
D=A
@R13
M=D
@return907
D=A
@CALL
0;JMP
(return907)
@SP
AM=M-1
D=M
@ARP.findIP$if3
D;JNE
@ARP.findIP$ifelse3
0;JMP
(ARP.findIP$if3)
@LCL //push local
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@RETURN
0;JMP

(ARP.findIP$ifelse3)
@LCL //push local
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@List.getNext
D=A
@R13
M=D
@return908
D=A
@CALL
0;JMP
(return908)
@LCL //pop local
D=M
@1
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@ARP.findIP$while2
0;JMP
(ARP.findIP$whileend2)
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@RETURN
0;JMP

(ARP.write)
@2
D=A
(ARP.write_LOOP)
@ARP.write_END
D;JEQ
@SP
A=M
M=0
@SP
M=M+1
D=D-1
@ARP.write_LOOP
0;JMP
(ARP.write_END)

@28  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@String.new
D=A
@R13
M=D
@return909
D=A
@CALL
0;JMP
(return909)
@LCL //pop local
D=M
@0
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@LCL //push local
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return910
D=A
@CALL
0;JMP
(return910)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@LCL //push local
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return911
D=A
@CALL
0;JMP
(return911)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@LCL //push local
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@8  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return912
D=A
@CALL
0;JMP
(return912)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@LCL //push local
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return913
D=A
@CALL
0;JMP
(return913)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@LCL //push local
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@6  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return914
D=A
@CALL
0;JMP
(return914)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@LCL //push local
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@4  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return915
D=A
@CALL
0;JMP
(return915)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@LCL //push local
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG //push argument
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@Math.getHigh
D=A
@R13
M=D
@return916
D=A
@CALL
0;JMP
(return916)
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return917
D=A
@CALL
0;JMP
(return917)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@LCL //push local
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG //push argument
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@Math.getLow
D=A
@R13
M=D
@return918
D=A
@CALL
0;JMP
(return918)
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return919
D=A
@CALL
0;JMP
(return919)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@LCL //push local
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@0
D=A
@R14
M=D
@Network.getMyMAC
D=A
@R13
M=D
@return920
D=A
@CALL
0;JMP
(return920)
@6  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@3
D=A
@R14
M=D
@String.appendArray
D=A
@R13
M=D
@return921
D=A
@CALL
0;JMP
(return921)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@LCL //push local
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@0
D=A
@R14
M=D
@Network.getMyIP
D=A
@R13
M=D
@return922
D=A
@CALL
0;JMP
(return922)
@4  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@3
D=A
@R14
M=D
@String.appendArray
D=A
@R13
M=D
@return923
D=A
@CALL
0;JMP
(return923)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@LCL //push local
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG //push argument
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@6  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@3
D=A
@R14
M=D
@String.appendArray
D=A
@R13
M=D
@return924
D=A
@CALL
0;JMP
(return924)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@LCL //push local
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG //push argument
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@4  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@3
D=A
@R14
M=D
@String.appendArray
D=A
@R13
M=D
@return925
D=A
@CALL
0;JMP
(return925)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@LCL //push local
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@List.new
D=A
@R13
M=D
@return926
D=A
@CALL
0;JMP
(return926)
@LCL //pop local
D=M
@1
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@ARG //push argument
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@2054  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL //push local
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@3
D=A
@R14
M=D
@Ethernet.write
D=A
@R13
M=D
@return927
D=A
@CALL
0;JMP
(return927)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@LCL //push local
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@List.pop
D=A
@R13
M=D
@return928
D=A
@CALL
0;JMP
(return928)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@RETURN
0;JMP

(ARP.printAddresses)
@2
D=A
(ARP.printAddresses_LOOP)
@ARP.printAddresses_END
D;JEQ
@SP
A=M
M=0
@SP
M=M+1
D=D-1
@ARP.printAddresses_LOOP
0;JMP
(ARP.printAddresses_END)

@ARP.0   //push static
D=M
@SP
A=M
M=D
@SP
M=M+1
@LCL //pop local
D=M
@0
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@9  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@String.new
D=A
@R13
M=D
@return929
D=A
@CALL
0;JMP
(return929)
@65  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return930
D=A
@CALL
0;JMP
(return930)
@82  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return931
D=A
@CALL
0;JMP
(return931)
@80  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return932
D=A
@CALL
0;JMP
(return932)
@45  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return933
D=A
@CALL
0;JMP
(return933)
@76  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return934
D=A
@CALL
0;JMP
(return934)
@105  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return935
D=A
@CALL
0;JMP
(return935)
@115  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return936
D=A
@CALL
0;JMP
(return936)
@116  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return937
D=A
@CALL
0;JMP
(return937)
@58  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return938
D=A
@CALL
0;JMP
(return938)
@1
D=A
@R14
M=D
@Output.printString
D=A
@R13
M=D
@return939
D=A
@CALL
0;JMP
(return939)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@0
D=A
@R14
M=D
@Output.println
D=A
@R13
M=D
@return940
D=A
@CALL
0;JMP
(return940)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
(ARP.printAddresses$while6)
@LCL //push local
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
D=D-M
M=-1
@eq148
D;JEQ
@SP
A=M-1
M=0
(eq148)
@SP  //not
A=M-1
M=!M
@SP  //not
A=M-1
M=!M
@SP
AM=M-1
D=M
@ARP.printAddresses$whileend6
D;JNE
@LCL //push local
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@List.getData
D=A
@R13
M=D
@return941
D=A
@CALL
0;JMP
(return941)
@LCL //pop local
D=M
@1
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@LCL //push local
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@Address.print
D=A
@R13
M=D
@return942
D=A
@CALL
0;JMP
(return942)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@0
D=A
@R14
M=D
@Output.println
D=A
@R13
M=D
@return943
D=A
@CALL
0;JMP
(return943)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@LCL //push local
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@List.getNext
D=A
@R13
M=D
@return944
D=A
@CALL
0;JMP
(return944)
@LCL //pop local
D=M
@0
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@ARP.printAddresses$while6
0;JMP
(ARP.printAddresses$whileend6)
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@RETURN
0;JMP

(ARP.ping)
@1
D=A
(ARP.ping_LOOP)
@ARP.ping_END
D;JEQ
@SP
A=M
M=0
@SP
M=M+1
D=D-1
@ARP.ping_LOOP
0;JMP
(ARP.ping_END)

@7  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@String.new
D=A
@R13
M=D
@return945
D=A
@CALL
0;JMP
(return945)
@65  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return946
D=A
@CALL
0;JMP
(return946)
@82  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return947
D=A
@CALL
0;JMP
(return947)
@80  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return948
D=A
@CALL
0;JMP
(return948)
@73  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return949
D=A
@CALL
0;JMP
(return949)
@78  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return950
D=A
@CALL
0;JMP
(return950)
@71  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return951
D=A
@CALL
0;JMP
(return951)
@32  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return952
D=A
@CALL
0;JMP
(return952)
@1
D=A
@R14
M=D
@Output.printString
D=A
@R13
M=D
@return953
D=A
@CALL
0;JMP
(return953)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@ARG //push argument
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@Address.printIP
D=A
@R13
M=D
@return954
D=A
@CALL
0;JMP
(return954)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@0
D=A
@R14
M=D
@Output.println
D=A
@R13
M=D
@return955
D=A
@CALL
0;JMP
(return955)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@1  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@0
D=A
@R14
M=D
@Network.getBroadcast
D=A
@R13
M=D
@return956
D=A
@CALL
0;JMP
(return956)
@ARG //push argument
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@3
D=A
@R14
M=D
@ARP.write
D=A
@R13
M=D
@return957
D=A
@CALL
0;JMP
(return957)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@RETURN
0;JMP

(Checksum.sum)
@1
D=A
(Checksum.sum_LOOP)
@Checksum.sum_END
D;JEQ
@SP
A=M
M=0
@SP
M=M+1
D=D-1
@Checksum.sum_LOOP
0;JMP
(Checksum.sum_END)

@ARG //push argument
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG //push argument
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@LCL //pop local
D=M
@0
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@ARG //push argument
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
D=M-D
M=-1
@lt149
D;JLT
@SP
A=M-1
M=0
(lt149)
@ARG //push argument
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
D=M-D
M=-1
@lt150
D;JLT
@SP
A=M-1
M=0
(lt150)
@SP  //and
AM=M-1
D=M
A=A-1
M=D&M
@SP
AM=M-1
D=M
@Checksum.sum$if1
D;JNE
@Checksum.sum$ifelse1
0;JMP
(Checksum.sum$if1)
@LCL //push local
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@RETURN
0;JMP

(Checksum.sum$ifelse1)
@ARG //push argument
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
D=M-D
M=-1
@lt151
D;JLT
@SP
A=M-1
M=0
(lt151)
@SP  //not
A=M-1
M=!M
@ARG //push argument
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
D=M-D
M=-1
@lt152
D;JLT
@SP
A=M-1
M=0
(lt152)
@SP  //not
A=M-1
M=!M
@SP  //and
AM=M-1
D=M
A=A-1
M=D&M
@SP
AM=M-1
D=M
@Checksum.sum$if4
D;JNE
@Checksum.sum$ifelse4
0;JMP
(Checksum.sum$if4)
@LCL //push local
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@RETURN
0;JMP

(Checksum.sum$ifelse4)
@LCL //push local
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
D=M-D
M=-1
@lt153
D;JLT
@SP
A=M-1
M=0
(lt153)
@SP
AM=M-1
D=M
@Checksum.sum$if7
D;JNE
@Checksum.sum$ifelse7
0;JMP
(Checksum.sum$if7)
@LCL //push local
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@RETURN
0;JMP

(Checksum.sum$ifelse7)
@LCL //push local
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@RETURN
0;JMP

(Checksum.sumString)
@4
D=A
(Checksum.sumString_LOOP)
@Checksum.sumString_END
D;JEQ
@SP
A=M
M=0
@SP
M=M+1
D=D-1
@Checksum.sumString_LOOP
0;JMP
(Checksum.sumString_END)

@ARG //push argument
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@String.length
D=A
@R13
M=D
@return958
D=A
@CALL
0;JMP
(return958)
@LCL //pop local
D=M
@3
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL //pop local
D=M
@0
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@1  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //neg
A=M-1
M=-M
@LCL //pop local
D=M
@1
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL //pop local
D=M
@2
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
(Checksum.sumString$while2)
@LCL //push local
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@LCL //push local
D=M
@3
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
D=M-D
M=-1
@lt154
D;JLT
@SP
A=M-1
M=0
(lt154)
@SP  //not
A=M-1
M=!M
@SP
AM=M-1
D=M
@Checksum.sumString$whileend2
D;JNE
@LCL //push local
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
@Checksum.sumString$if3
D;JNE
@Checksum.sumString$ifelse3
0;JMP
(Checksum.sumString$if3)
@LCL //push local
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG //push argument
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@LCL //push local
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.charAt
D=A
@R13
M=D
@return959
D=A
@CALL
0;JMP
(return959)
@256  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@Math.multiply
D=A
@R13
M=D
@return960
D=A
@CALL
0;JMP
(return960)
@2
D=A
@R14
M=D
@Checksum.sum
D=A
@R13
M=D
@return961
D=A
@CALL
0;JMP
(return961)
@LCL //pop local
D=M
@0
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@Checksum.sumString$ifend3
0;JMP
(Checksum.sumString$ifelse3)
@LCL //push local
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG //push argument
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@LCL //push local
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.charAt
D=A
@R13
M=D
@return962
D=A
@CALL
0;JMP
(return962)
@2
D=A
@R14
M=D
@Checksum.sum
D=A
@R13
M=D
@return963
D=A
@CALL
0;JMP
(return963)
@LCL //pop local
D=M
@0
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
(Checksum.sumString$ifend3)
@LCL //push local
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //not
A=M-1
M=!M
@LCL //pop local
D=M
@1
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@LCL //push local
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@LCL //pop local
D=M
@2
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@Checksum.sumString$while2
0;JMP
(Checksum.sumString$whileend2)
@LCL //push local
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@RETURN
0;JMP

(Checksum.sumList)
@0
D=A
(Checksum.sumList_LOOP)
@Checksum.sumList_END
D;JEQ
@SP
A=M
M=0
@SP
M=M+1
D=D-1
@Checksum.sumList_LOOP
0;JMP
(Checksum.sumList_END)

@ARG //push argument
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
D=D-M
M=-1
@eq155
D;JEQ
@SP
A=M-1
M=0
(eq155)
@SP
AM=M-1
D=M
@Checksum.sumList$if1
D;JNE
@Checksum.sumList$ifelse1
0;JMP
(Checksum.sumList$if1)
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@RETURN
0;JMP

(Checksum.sumList$ifelse1)
@ARG //push argument
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@List.getData
D=A
@R13
M=D
@return964
D=A
@CALL
0;JMP
(return964)
@1
D=A
@R14
M=D
@Checksum.sumString
D=A
@R13
M=D
@return965
D=A
@CALL
0;JMP
(return965)
@ARG //push argument
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@List.getNext
D=A
@R13
M=D
@return966
D=A
@CALL
0;JMP
(return966)
@1
D=A
@R14
M=D
@Checksum.sumList
D=A
@R13
M=D
@return967
D=A
@CALL
0;JMP
(return967)
@2
D=A
@R14
M=D
@Checksum.sum
D=A
@R13
M=D
@return968
D=A
@CALL
0;JMP
(return968)
@RETURN
0;JMP

(GPIO.init)
@0
D=A
(GPIO.init_LOOP)
@GPIO.init_END
D;JEQ
@SP
A=M
M=0
@SP
M=M+1
D=D-1
@GPIO.init_LOOP
0;JMP
(GPIO.init_END)

@ARG //push argument
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //pop static
AM=M-1
D=M
@GPIO.0
M=D
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@RETURN
0;JMP

(GPIO.getBut)
@0
D=A
(GPIO.getBut_LOOP)
@GPIO.getBut_END
D;JEQ
@SP
A=M
M=0
@SP
M=M+1
D=D-1
@GPIO.getBut_LOOP
0;JMP
(GPIO.getBut_END)

@GPIO.0   //push static
D=M
@SP
A=M
M=D
@SP
M=M+1
@1  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@SP  //pop pointer
AM=M-1
D=M
@THAT
M=D
@THAT    //push that
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@RETURN
0;JMP

(GPIO.getLed)
@0
D=A
(GPIO.getLed_LOOP)
@GPIO.getLed_END
D;JEQ
@SP
A=M
M=0
@SP
M=M+1
D=D-1
@GPIO.getLed_LOOP
0;JMP
(GPIO.getLed_END)

@GPIO.0   //push static
D=M
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@SP  //pop pointer
AM=M-1
D=M
@THAT
M=D
@THAT    //push that
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@RETURN
0;JMP

(GPIO.setLed)
@0
D=A
(GPIO.setLed_LOOP)
@GPIO.setLed_END
D;JEQ
@SP
A=M
M=0
@SP
M=M+1
D=D-1
@GPIO.setLed_LOOP
0;JMP
(GPIO.setLed_END)

@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@GPIO.0   //push static
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@ARG //push argument
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@SP  //pop pointer
AM=M-1
D=M
@THAT
M=D
@R5 //push temp
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT    //pop that
D=M
@0
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@RETURN
0;JMP

(Math.init)
@2
D=A
(Math.init_LOOP)
@Math.init_END
D;JEQ
@SP
A=M
M=0
@SP
M=M+1
D=D-1
@Math.init_LOOP
0;JMP
(Math.init_END)

@16  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@Array.new
D=A
@R13
M=D
@return969
D=A
@CALL
0;JMP
(return969)
@SP  //pop static
AM=M-1
D=M
@Math.0
M=D
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL //pop local
D=M
@0
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@1  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL //pop local
D=M
@1
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
(Math.init$while2)
@LCL //push local
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@16  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
D=M-D
M=-1
@lt156
D;JLT
@SP
A=M-1
M=0
(lt156)
@SP  //not
A=M-1
M=!M
@SP
AM=M-1
D=M
@Math.init$whileend2
D;JNE
@LCL //push local
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@Math.0   //push static
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@LCL //push local
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@SP  //pop pointer
AM=M-1
D=M
@THAT
M=D
@R5 //push temp
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT    //pop that
D=M
@0
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@LCL //push local
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@LCL //push local
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@LCL //pop local
D=M
@1
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@LCL //push local
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@LCL //pop local
D=M
@0
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@Math.init$while2
0;JMP
(Math.init$whileend2)
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@RETURN
0;JMP

(Math.abs)
@0
D=A
(Math.abs_LOOP)
@Math.abs_END
D;JEQ
@SP
A=M
M=0
@SP
M=M+1
D=D-1
@Math.abs_LOOP
0;JMP
(Math.abs_END)

@ARG //push argument
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
D=M-D
M=-1
@lt157
D;JLT
@SP
A=M-1
M=0
(lt157)
@SP
AM=M-1
D=M
@Math.abs$if1
D;JNE
@Math.abs$ifelse1
0;JMP
(Math.abs$if1)
@ARG //push argument
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //neg
A=M-1
M=-M
@RETURN
0;JMP

(Math.abs$ifelse1)
@ARG //push argument
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@RETURN
0;JMP

(Math.multiply)
@2
D=A
(Math.multiply_LOOP)
@Math.multiply_END
D;JEQ
@SP
A=M
M=0
@SP
M=M+1
D=D-1
@Math.multiply_LOOP
0;JMP
(Math.multiply_END)

@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL //pop local
D=M
@0
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL //pop local
D=M
@1
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
(Math.multiply$while2)
@LCL //push local
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@16  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
D=M-D
M=-1
@lt158
D;JLT
@SP
A=M-1
M=0
(lt158)
@SP  //not
A=M-1
M=!M
@SP
AM=M-1
D=M
@Math.multiply$whileend2
D;JNE
@Math.0   //push static
D=M
@SP
A=M
M=D
@SP
M=M+1
@LCL //push local
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@SP  //pop pointer
AM=M-1
D=M
@THAT
M=D
@THAT    //push that
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG //push argument
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //and
AM=M-1
D=M
A=A-1
M=D&M
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
D=D-M
M=-1
@eq159
D;JEQ
@SP
A=M-1
M=0
(eq159)
@SP
AM=M-1
D=M
@Math.multiply$if3
D;JNE
@Math.multiply$ifelse3
0;JMP
(Math.multiply$if3)
@Math.multiply$ifend3
0;JMP
(Math.multiply$ifelse3)
@LCL //push local
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG //push argument
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@LCL //pop local
D=M
@0
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
(Math.multiply$ifend3)
@LCL //push local
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@LCL //pop local
D=M
@1
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@ARG //push argument
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG //push argument
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@ARG //pop argument
D=M
@1
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@Math.multiply$while2
0;JMP
(Math.multiply$whileend2)
@LCL //push local
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@RETURN
0;JMP

(Math.divide)
@2
D=A
(Math.divide_LOOP)
@Math.divide_END
D;JEQ
@SP
A=M
M=0
@SP
M=M+1
D=D-1
@Math.divide_LOOP
0;JMP
(Math.divide_END)

@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL //pop local
D=M
@1
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@ARG //push argument
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
D=M-D
M=-1
@lt160
D;JLT
@SP
A=M-1
M=0
(lt160)
@SP
AM=M-1
D=M
@Math.divide$if1
D;JNE
@Math.divide$ifelse1
0;JMP
(Math.divide$if1)
@ARG //push argument
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@Math.abs
D=A
@R13
M=D
@return970
D=A
@CALL
0;JMP
(return970)
@ARG //pop argument
D=M
@0
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@LCL //push local
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //not
A=M-1
M=!M
@LCL //pop local
D=M
@1
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
(Math.divide$ifelse1)
@ARG //push argument
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
D=M-D
M=-1
@lt161
D;JLT
@SP
A=M-1
M=0
(lt161)
@SP
AM=M-1
D=M
@Math.divide$if4
D;JNE
@Math.divide$ifelse4
0;JMP
(Math.divide$if4)
@ARG //push argument
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@Math.abs
D=A
@R13
M=D
@return971
D=A
@CALL
0;JMP
(return971)
@ARG //pop argument
D=M
@1
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@LCL //push local
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //not
A=M-1
M=!M
@LCL //pop local
D=M
@1
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
(Math.divide$ifelse4)
@ARG //push argument
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG //push argument
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
D=M-D
M=-1
@lt162
D;JLT
@SP
A=M-1
M=0
(lt162)
@SP
AM=M-1
D=M
@Math.divide$if7
D;JNE
@Math.divide$ifelse7
0;JMP
(Math.divide$if7)
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@RETURN
0;JMP

(Math.divide$ifelse7)
@ARG //push argument
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG //push argument
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG //push argument
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@SP
AM=M-1
D=M
A=A-1
D=M-D
M=-1
@lt163
D;JLT
@SP
A=M-1
M=0
(lt163)
@SP
AM=M-1
D=M
@Math.divide$if10
D;JNE
@Math.divide$ifelse10
0;JMP
(Math.divide$if10)
@LCL //push local
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
@Math.divide$if11
D;JNE
@Math.divide$ifelse11
0;JMP
(Math.divide$if11)
@1  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //neg
A=M-1
M=-M
@RETURN
0;JMP

(Math.divide$ifelse11)
@1  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@RETURN
0;JMP

(Math.divide$ifelse10)
@ARG //push argument
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG //push argument
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG //push argument
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@2
D=A
@R14
M=D
@Math.divide
D=A
@R13
M=D
@return972
D=A
@CALL
0;JMP
(return972)
@LCL //pop local
D=M
@0
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@LCL //push local
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@LCL //push local
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@ARG //push argument
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@LCL //push local
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG //push argument
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG //push argument
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@2
D=A
@R14
M=D
@Math.multiply
D=A
@R13
M=D
@return973
D=A
@CALL
0;JMP
(return973)
@SP  //sub
AM=M-1
D=M
A=A-1
M=M-D
@ARG //push argument
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@Math.divide
D=A
@R13
M=D
@return974
D=A
@CALL
0;JMP
(return974)
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@LCL //pop local
D=M
@0
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@LCL //push local
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
@Math.divide$if16
D;JNE
@Math.divide$ifelse16
0;JMP
(Math.divide$if16)
@LCL //push local
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //neg
A=M-1
M=-M
@RETURN
0;JMP

(Math.divide$ifelse16)
@LCL //push local
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@RETURN
0;JMP

(Math.sqrt)
@3
D=A
(Math.sqrt_LOOP)
@Math.sqrt_END
D;JEQ
@SP
A=M
M=0
@SP
M=M+1
D=D-1
@Math.sqrt_LOOP
0;JMP
(Math.sqrt_END)

@ARG //push argument
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
D=M-D
M=-1
@lt164
D;JLT
@SP
A=M-1
M=0
(lt164)
@SP
AM=M-1
D=M
@Math.sqrt$if1
D;JNE
@Math.sqrt$ifelse1
0;JMP
(Math.sqrt$if1)
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@RETURN
0;JMP

(Math.sqrt$ifelse1)
@7  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL //pop local
D=M
@0
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL //pop local
D=M
@1
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
(Math.sqrt$while5)
@LCL //push local
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
D=M-D
M=-1
@lt165
D;JLT
@SP
A=M-1
M=0
(lt165)
@SP  //not
A=M-1
M=!M
@SP  //not
A=M-1
M=!M
@SP
AM=M-1
D=M
@Math.sqrt$whileend5
D;JNE
@LCL //push local
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@Math.0   //push static
D=M
@SP
A=M
M=D
@SP
M=M+1
@LCL //push local
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@SP  //pop pointer
AM=M-1
D=M
@THAT
M=D
@THAT    //push that
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@LCL //push local
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@Math.0   //push static
D=M
@SP
A=M
M=D
@SP
M=M+1
@LCL //push local
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@SP  //pop pointer
AM=M-1
D=M
@THAT
M=D
@THAT    //push that
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@2
D=A
@R14
M=D
@Math.multiply
D=A
@R13
M=D
@return975
D=A
@CALL
0;JMP
(return975)
@LCL //pop local
D=M
@2
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@LCL //push local
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
D=M-D
M=-1
@lt166
D;JLT
@SP
A=M-1
M=0
(lt166)
@LCL //push local
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG //push argument
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
D=M-D
M=-1
@gt167
D;JGT
@SP
A=M-1
M=0
(gt167)
@SP  //or
AM=M-1
D=M
A=A-1
M=D|M
@SP
AM=M-1
D=M
@Math.sqrt$if6
D;JNE
@Math.sqrt$ifelse6
0;JMP
(Math.sqrt$if6)
@Math.sqrt$ifend6
0;JMP
(Math.sqrt$ifelse6)
@LCL //push local
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@Math.0   //push static
D=M
@SP
A=M
M=D
@SP
M=M+1
@LCL //push local
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@SP  //pop pointer
AM=M-1
D=M
@THAT
M=D
@THAT    //push that
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@LCL //pop local
D=M
@1
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
(Math.sqrt$ifend6)
@LCL //push local
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //sub
AM=M-1
D=M
A=A-1
M=M-D
@LCL //pop local
D=M
@0
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@Math.sqrt$while5
0;JMP
(Math.sqrt$whileend5)
@LCL //push local
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@RETURN
0;JMP

(Math.max)
@0
D=A
(Math.max_LOOP)
@Math.max_END
D;JEQ
@SP
A=M
M=0
@SP
M=M+1
D=D-1
@Math.max_LOOP
0;JMP
(Math.max_END)

@ARG //push argument
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@Math.0   //push static
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
D=M-D
M=-1
@gt168
D;JGT
@SP
A=M-1
M=0
(gt168)
@SP
AM=M-1
D=M
@Math.max$if1
D;JNE
@Math.max$ifelse1
0;JMP
(Math.max$if1)
@ARG //push argument
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@RETURN
0;JMP

(Math.max$ifelse1)
@Math.0   //push static
D=M
@SP
A=M
M=D
@SP
M=M+1
@RETURN
0;JMP

(Math.min)
@0
D=A
(Math.min_LOOP)
@Math.min_END
D;JEQ
@SP
A=M
M=0
@SP
M=M+1
D=D-1
@Math.min_LOOP
0;JMP
(Math.min_END)

@ARG //push argument
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@Math.0   //push static
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
D=M-D
M=-1
@lt169
D;JLT
@SP
A=M-1
M=0
(lt169)
@SP
AM=M-1
D=M
@Math.min$if1
D;JNE
@Math.min$ifelse1
0;JMP
(Math.min$if1)
@ARG //push argument
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@RETURN
0;JMP

(Math.min$ifelse1)
@Math.0   //push static
D=M
@SP
A=M
M=D
@SP
M=M+1
@RETURN
0;JMP

(Math.getHigh)
@0
D=A
(Math.getHigh_LOOP)
@Math.getHigh_END
D;JEQ
@SP
A=M
M=0
@SP
M=M+1
D=D-1
@Math.getHigh_LOOP
0;JMP
(Math.getHigh_END)

@ARG //push argument
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
D=M-D
M=-1
@lt170
D;JLT
@SP
A=M-1
M=0
(lt170)
@SP
AM=M-1
D=M
@Math.getHigh$if1
D;JNE
@Math.getHigh$ifelse1
0;JMP
(Math.getHigh$if1)
@ARG //push argument
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //not
A=M-1
M=!M
@256  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@Math.divide
D=A
@R13
M=D
@return976
D=A
@CALL
0;JMP
(return976)
@SP  //not
A=M-1
M=!M
@255  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //and
AM=M-1
D=M
A=A-1
M=D&M
@RETURN
0;JMP

(Math.getHigh$ifelse1)
@ARG //push argument
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@256  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@Math.divide
D=A
@R13
M=D
@return977
D=A
@CALL
0;JMP
(return977)
@RETURN
0;JMP

(Math.getLow)
@0
D=A
(Math.getLow_LOOP)
@Math.getLow_END
D;JEQ
@SP
A=M
M=0
@SP
M=M+1
D=D-1
@Math.getLow_LOOP
0;JMP
(Math.getLow_END)

@ARG //push argument
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@255  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //and
AM=M-1
D=M
A=A-1
M=D&M
@RETURN
0;JMP

(TCP.init)
@0
D=A
(TCP.init_LOOP)
@TCP.init_END
D;JEQ
@SP
A=M
M=0
@SP
M=M+1
D=D-1
@TCP.init_LOOP
0;JMP
(TCP.init_END)

@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //pop static
AM=M-1
D=M
@TCP.0
M=D
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@RETURN
0;JMP

(TCP.read)
@13
D=A
(TCP.read_LOOP)
@TCP.read_END
D;JEQ
@SP
A=M
M=0
@SP
M=M+1
D=D-1
@TCP.read_LOOP
0;JMP
(TCP.read_END)

@0
D=A
@R14
M=D
@GPIO.getLed
D=A
@R13
M=D
@return978
D=A
@CALL
0;JMP
(return978)
@128  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //or
AM=M-1
D=M
A=A-1
M=D|M
@1
D=A
@R14
M=D
@GPIO.setLed
D=A
@R13
M=D
@return979
D=A
@CALL
0;JMP
(return979)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@ARG //push argument
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@12  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@SP  //pop pointer
AM=M-1
D=M
@THAT
M=D
@THAT    //push that
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@16  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@Math.divide
D=A
@R13
M=D
@return980
D=A
@CALL
0;JMP
(return980)
@LCL //pop local
D=M
@11
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@ARG //push argument
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@4  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL //push local
D=M
@11
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@Math.multiply
D=A
@R13
M=D
@return981
D=A
@CALL
0;JMP
(return981)
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@LCL //pop local
D=M
@9
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@ARG //push argument
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@4  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL //push local
D=M
@11
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@Math.multiply
D=A
@R13
M=D
@return982
D=A
@CALL
0;JMP
(return982)
@SP  //sub
AM=M-1
D=M
A=A-1
M=M-D
@LCL //pop local
D=M
@10
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@ARG //push argument
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@SP  //pop pointer
AM=M-1
D=M
@THAT
M=D
@THAT    //push that
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@256  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@Math.multiply
D=A
@R13
M=D
@return983
D=A
@CALL
0;JMP
(return983)
@ARG //push argument
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@SP  //pop pointer
AM=M-1
D=M
@THAT
M=D
@THAT    //push that
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //or
AM=M-1
D=M
A=A-1
M=D|M
@LCL //pop local
D=M
@0
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@ARG //push argument
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@2  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@SP  //pop pointer
AM=M-1
D=M
@THAT
M=D
@THAT    //push that
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@256  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@Math.multiply
D=A
@R13
M=D
@return984
D=A
@CALL
0;JMP
(return984)
@ARG //push argument
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@3  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@SP  //pop pointer
AM=M-1
D=M
@THAT
M=D
@THAT    //push that
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //or
AM=M-1
D=M
A=A-1
M=D|M
@LCL //pop local
D=M
@1
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@ARG //push argument
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@4  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@SP  //pop pointer
AM=M-1
D=M
@THAT
M=D
@THAT    //push that
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@256  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@Math.multiply
D=A
@R13
M=D
@return985
D=A
@CALL
0;JMP
(return985)
@ARG //push argument
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@5  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@SP  //pop pointer
AM=M-1
D=M
@THAT
M=D
@THAT    //push that
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //or
AM=M-1
D=M
A=A-1
M=D|M
@ARG //push argument
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@6  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@SP  //pop pointer
AM=M-1
D=M
@THAT
M=D
@THAT    //push that
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@256  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@Math.multiply
D=A
@R13
M=D
@return986
D=A
@CALL
0;JMP
(return986)
@ARG //push argument
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@7  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@SP  //pop pointer
AM=M-1
D=M
@THAT
M=D
@THAT    //push that
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //or
AM=M-1
D=M
A=A-1
M=D|M
@2
D=A
@R14
M=D
@Int32.new
D=A
@R13
M=D
@return987
D=A
@CALL
0;JMP
(return987)
@LCL //pop local
D=M
@2
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@ARG //push argument
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@8  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@SP  //pop pointer
AM=M-1
D=M
@THAT
M=D
@THAT    //push that
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@256  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@Math.multiply
D=A
@R13
M=D
@return988
D=A
@CALL
0;JMP
(return988)
@ARG //push argument
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@9  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@SP  //pop pointer
AM=M-1
D=M
@THAT
M=D
@THAT    //push that
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //or
AM=M-1
D=M
A=A-1
M=D|M
@ARG //push argument
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@10  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@SP  //pop pointer
AM=M-1
D=M
@THAT
M=D
@THAT    //push that
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@256  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@Math.multiply
D=A
@R13
M=D
@return989
D=A
@CALL
0;JMP
(return989)
@ARG //push argument
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@11  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@SP  //pop pointer
AM=M-1
D=M
@THAT
M=D
@THAT    //push that
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP  //or
AM=M-1
D=M
A=A-1
M=D|M
@2
D=A
@R14
M=D
@Int32.new
D=A
@R13
M=D
@return990
D=A
@CALL
0;JMP
(return990)
@LCL //pop local
D=M
@3
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@ARG //push argument
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@13  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@SP  //pop pointer
AM=M-1
D=M
@THAT
M=D
@THAT    //push that
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@LCL //pop local
D=M
@4
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@LCL //push local
D=M
@4
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@16  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //and
AM=M-1
D=M
A=A-1
M=D&M
@16  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
D=D-M
M=-1
@eq171
D;JEQ
@SP
A=M-1
M=0
(eq171)
@LCL //pop local
D=M
@5
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@LCL //push local
D=M
@4
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@8  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //and
AM=M-1
D=M
A=A-1
M=D&M
@8  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
D=D-M
M=-1
@eq172
D;JEQ
@SP
A=M-1
M=0
(eq172)
@LCL //pop local
D=M
@6
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@LCL //push local
D=M
@4
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@2  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //and
AM=M-1
D=M
A=A-1
M=D&M
@2  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
D=D-M
M=-1
@eq173
D;JEQ
@SP
A=M-1
M=0
(eq173)
@LCL //pop local
D=M
@7
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@LCL //push local
D=M
@4
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //and
AM=M-1
D=M
A=A-1
M=D&M
@1  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
D=D-M
M=-1
@eq174
D;JEQ
@SP
A=M-1
M=0
(eq174)
@LCL //pop local
D=M
@8
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@LCL //push local
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@6000  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
D=D-M
M=-1
@eq175
D;JEQ
@SP
A=M-1
M=0
(eq175)
@LCL //push local
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@80  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
D=D-M
M=-1
@eq176
D;JEQ
@SP
A=M-1
M=0
(eq176)
@SP  //or
AM=M-1
D=M
A=A-1
M=D|M
@SP
AM=M-1
D=M
@TCP.read$if3
D;JNE
@TCP.read$ifelse3
0;JMP
(TCP.read$if3)
@ARG //push argument
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@LCL //push local
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@TCP.0   //push static
D=M
@SP
A=M
M=D
@SP
M=M+1
@3
D=A
@R14
M=D
@TCP.getSocket
D=A
@R13
M=D
@return991
D=A
@CALL
0;JMP
(return991)
@LCL //pop local
D=M
@12
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@LCL //push local
D=M
@12
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
D=D-M
M=-1
@eq177
D;JEQ
@SP
A=M-1
M=0
(eq177)
@SP
AM=M-1
D=M
@TCP.read$if4
D;JNE
@TCP.read$ifelse4
0;JMP
(TCP.read$if4)
@LCL //push local
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG //push argument
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@LCL //push local
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@3
D=A
@R14
M=D
@Socket.new
D=A
@R13
M=D
@return992
D=A
@CALL
0;JMP
(return992)
@LCL //pop local
D=M
@12
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@LCL //push local
D=M
@12
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@TCP.0   //push static
D=M
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@List.new
D=A
@R13
M=D
@return993
D=A
@CALL
0;JMP
(return993)
@SP  //pop static
AM=M-1
D=M
@TCP.0
M=D
(TCP.read$ifelse4)
@LCL //push local
D=M
@7
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
@TCP.read$if7
D;JNE
@TCP.read$ifelse7
0;JMP
(TCP.read$if7)
@LCL //push local
D=M
@12
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@LCL //push local
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@Socket.syn
D=A
@R13
M=D
@return994
D=A
@CALL
0;JMP
(return994)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@TCP.read$ifend7
0;JMP
(TCP.read$ifelse7)
@LCL //push local
D=M
@5
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
@TCP.read$if12
D;JNE
@TCP.read$ifelse12
0;JMP
(TCP.read$if12)
@LCL //push local
D=M
@12
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@LCL //push local
D=M
@3
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@Socket.ack
D=A
@R13
M=D
@return995
D=A
@CALL
0;JMP
(return995)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
(TCP.read$ifelse12)
@LCL //push local
D=M
@6
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
@TCP.read$if17
D;JNE
@TCP.read$ifelse17
0;JMP
(TCP.read$if17)
@LCL //push local
D=M
@12
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@LCL //push local
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@LCL //push local
D=M
@9
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@LCL //push local
D=M
@10
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@4
D=A
@R14
M=D
@Socket.psh
D=A
@R13
M=D
@return996
D=A
@CALL
0;JMP
(return996)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
(TCP.read$ifelse17)
@LCL //push local
D=M
@8
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
@TCP.read$if22
D;JNE
@TCP.read$ifelse22
0;JMP
(TCP.read$if22)
@LCL //push local
D=M
@12
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@LCL //push local
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@Socket.fin
D=A
@R13
M=D
@return997
D=A
@CALL
0;JMP
(return997)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
(TCP.read$ifelse22)
(TCP.read$ifend7)
@LCL //push local
D=M
@12
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@Socket.send
D=A
@R13
M=D
@return998
D=A
@CALL
0;JMP
(return998)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@LCL //push local
D=M
@12
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@Socket.isClosed
D=A
@R13
M=D
@return999
D=A
@CALL
0;JMP
(return999)
@SP
AM=M-1
D=M
@TCP.read$if31
D;JNE
@TCP.read$ifelse31
0;JMP
(TCP.read$if31)
@LCL //push local
D=M
@12
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@Socket.dispose
D=A
@R13
M=D
@return1000
D=A
@CALL
0;JMP
(return1000)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@LCL //push local
D=M
@12
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@TCP.0   //push static
D=M
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@List.remove
D=A
@R13
M=D
@return1001
D=A
@CALL
0;JMP
(return1001)
@SP  //pop static
AM=M-1
D=M
@TCP.0
M=D
(TCP.read$ifelse31)
(TCP.read$ifelse3)
@LCL //push local
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@Int32.dispose
D=A
@R13
M=D
@return1002
D=A
@CALL
0;JMP
(return1002)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@LCL //push local
D=M
@3
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@Int32.dispose
D=A
@R13
M=D
@return1003
D=A
@CALL
0;JMP
(return1003)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@0
D=A
@R14
M=D
@GPIO.getLed
D=A
@R13
M=D
@return1004
D=A
@CALL
0;JMP
(return1004)
@127  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //and
AM=M-1
D=M
A=A-1
M=D&M
@1
D=A
@R14
M=D
@GPIO.setLed
D=A
@R13
M=D
@return1005
D=A
@CALL
0;JMP
(return1005)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@RETURN
0;JMP

(TCP.getSocket)
@1
D=A
(TCP.getSocket_LOOP)
@TCP.getSocket_END
D;JEQ
@SP
A=M
M=0
@SP
M=M+1
D=D-1
@TCP.getSocket_LOOP
0;JMP
(TCP.getSocket_END)

@ARG //push argument
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
D=D-M
M=-1
@eq178
D;JEQ
@SP
A=M-1
M=0
(eq178)
@SP
AM=M-1
D=M
@TCP.getSocket$if1
D;JNE
@TCP.getSocket$ifelse1
0;JMP
(TCP.getSocket$if1)
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@RETURN
0;JMP

(TCP.getSocket$ifelse1)
@ARG //push argument
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@List.getData
D=A
@R13
M=D
@return1006
D=A
@CALL
0;JMP
(return1006)
@LCL //pop local
D=M
@0
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@LCL //push local
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG //push argument
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG //push argument
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@3
D=A
@R14
M=D
@Socket.isClient
D=A
@R13
M=D
@return1007
D=A
@CALL
0;JMP
(return1007)
@SP
AM=M-1
D=M
@TCP.getSocket$if4
D;JNE
@TCP.getSocket$ifelse4
0;JMP
(TCP.getSocket$if4)
@LCL //push local
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@RETURN
0;JMP

(TCP.getSocket$ifelse4)
@ARG //push argument
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG //push argument
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG //push argument
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@List.getNext
D=A
@R13
M=D
@return1008
D=A
@CALL
0;JMP
(return1008)
@3
D=A
@R14
M=D
@TCP.getSocket
D=A
@R13
M=D
@return1009
D=A
@CALL
0;JMP
(return1009)
@RETURN
0;JMP

(TCP.write)
@4
D=A
(TCP.write_LOOP)
@TCP.write_END
D;JEQ
@SP
A=M
M=0
@SP
M=M+1
D=D-1
@TCP.write_LOOP
0;JMP
(TCP.write_END)

@0
D=A
@R14
M=D
@GPIO.getLed
D=A
@R13
M=D
@return1010
D=A
@CALL
0;JMP
(return1010)
@64  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //or
AM=M-1
D=M
A=A-1
M=D|M
@1
D=A
@R14
M=D
@GPIO.setLed
D=A
@R13
M=D
@return1011
D=A
@CALL
0;JMP
(return1011)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@20  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@String.new
D=A
@R13
M=D
@return1012
D=A
@CALL
0;JMP
(return1012)
@LCL //pop local
D=M
@0
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@LCL //push local
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG //push argument
D=M
@6
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@List.new
D=A
@R13
M=D
@return1013
D=A
@CALL
0;JMP
(return1013)
@ARG //pop argument
D=M
@6
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@ARG //push argument
D=M
@6
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@List.getLength
D=A
@R13
M=D
@return1014
D=A
@CALL
0;JMP
(return1014)
@20  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //add
AM=M-1
D=M
A=A-1
M=D+M
@LCL //pop local
D=M
@2
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@LCL //push local
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG //push argument
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@Math.getHigh
D=A
@R13
M=D
@return1015
D=A
@CALL
0;JMP
(return1015)
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return1016
D=A
@CALL
0;JMP
(return1016)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@LCL //push local
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG //push argument
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@Math.getLow
D=A
@R13
M=D
@return1017
D=A
@CALL
0;JMP
(return1017)
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return1018
D=A
@CALL
0;JMP
(return1018)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@LCL //push local
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG //push argument
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@Math.getHigh
D=A
@R13
M=D
@return1019
D=A
@CALL
0;JMP
(return1019)
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return1020
D=A
@CALL
0;JMP
(return1020)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@LCL //push local
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG //push argument
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@Math.getLow
D=A
@R13
M=D
@return1021
D=A
@CALL
0;JMP
(return1021)
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return1022
D=A
@CALL
0;JMP
(return1022)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@LCL //push local
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG //push argument
D=M
@3
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@Int32.getHigh
D=A
@R13
M=D
@return1023
D=A
@CALL
0;JMP
(return1023)
@1
D=A
@R14
M=D
@Math.getHigh
D=A
@R13
M=D
@return1024
D=A
@CALL
0;JMP
(return1024)
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return1025
D=A
@CALL
0;JMP
(return1025)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@LCL //push local
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG //push argument
D=M
@3
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@Int32.getHigh
D=A
@R13
M=D
@return1026
D=A
@CALL
0;JMP
(return1026)
@1
D=A
@R14
M=D
@Math.getLow
D=A
@R13
M=D
@return1027
D=A
@CALL
0;JMP
(return1027)
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return1028
D=A
@CALL
0;JMP
(return1028)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@LCL //push local
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG //push argument
D=M
@3
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@Int32.getLow
D=A
@R13
M=D
@return1029
D=A
@CALL
0;JMP
(return1029)
@1
D=A
@R14
M=D
@Math.getHigh
D=A
@R13
M=D
@return1030
D=A
@CALL
0;JMP
(return1030)
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return1031
D=A
@CALL
0;JMP
(return1031)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@LCL //push local
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG //push argument
D=M
@3
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@Int32.getLow
D=A
@R13
M=D
@return1032
D=A
@CALL
0;JMP
(return1032)
@1
D=A
@R14
M=D
@Math.getLow
D=A
@R13
M=D
@return1033
D=A
@CALL
0;JMP
(return1033)
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return1034
D=A
@CALL
0;JMP
(return1034)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@LCL //push local
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG //push argument
D=M
@4
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@Int32.getHigh
D=A
@R13
M=D
@return1035
D=A
@CALL
0;JMP
(return1035)
@1
D=A
@R14
M=D
@Math.getHigh
D=A
@R13
M=D
@return1036
D=A
@CALL
0;JMP
(return1036)
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return1037
D=A
@CALL
0;JMP
(return1037)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@LCL //push local
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG //push argument
D=M
@4
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@Int32.getHigh
D=A
@R13
M=D
@return1038
D=A
@CALL
0;JMP
(return1038)
@1
D=A
@R14
M=D
@Math.getLow
D=A
@R13
M=D
@return1039
D=A
@CALL
0;JMP
(return1039)
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return1040
D=A
@CALL
0;JMP
(return1040)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@LCL //push local
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG //push argument
D=M
@4
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@Int32.getLow
D=A
@R13
M=D
@return1041
D=A
@CALL
0;JMP
(return1041)
@1
D=A
@R14
M=D
@Math.getHigh
D=A
@R13
M=D
@return1042
D=A
@CALL
0;JMP
(return1042)
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return1043
D=A
@CALL
0;JMP
(return1043)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@LCL //push local
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG //push argument
D=M
@4
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@Int32.getLow
D=A
@R13
M=D
@return1044
D=A
@CALL
0;JMP
(return1044)
@1
D=A
@R14
M=D
@Math.getLow
D=A
@R13
M=D
@return1045
D=A
@CALL
0;JMP
(return1045)
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return1046
D=A
@CALL
0;JMP
(return1046)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@LCL //push local
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@80  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return1047
D=A
@CALL
0;JMP
(return1047)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@LCL //push local
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG //push argument
D=M
@5
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return1048
D=A
@CALL
0;JMP
(return1048)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@LCL //push local
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@15  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return1049
D=A
@CALL
0;JMP
(return1049)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@LCL //push local
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@255  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return1050
D=A
@CALL
0;JMP
(return1050)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@LCL //push local
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return1051
D=A
@CALL
0;JMP
(return1051)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@LCL //push local
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return1052
D=A
@CALL
0;JMP
(return1052)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@LCL //push local
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return1053
D=A
@CALL
0;JMP
(return1053)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@LCL //push local
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return1054
D=A
@CALL
0;JMP
(return1054)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@12  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@String.new
D=A
@R13
M=D
@return1055
D=A
@CALL
0;JMP
(return1055)
@LCL //pop local
D=M
@1
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@LCL //push local
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG //push argument
D=M
@6
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@List.new
D=A
@R13
M=D
@return1056
D=A
@CALL
0;JMP
(return1056)
@ARG //pop argument
D=M
@6
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@LCL //push local
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG //push argument
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@4  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@3
D=A
@R14
M=D
@String.appendArray
D=A
@R13
M=D
@return1057
D=A
@CALL
0;JMP
(return1057)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@LCL //push local
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@0
D=A
@R14
M=D
@Network.getMyIP
D=A
@R13
M=D
@return1058
D=A
@CALL
0;JMP
(return1058)
@4  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@3
D=A
@R14
M=D
@String.appendArray
D=A
@R13
M=D
@return1059
D=A
@CALL
0;JMP
(return1059)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@LCL //push local
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return1060
D=A
@CALL
0;JMP
(return1060)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@LCL //push local
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@6  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return1061
D=A
@CALL
0;JMP
(return1061)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@LCL //push local
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@LCL //push local
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@Math.getHigh
D=A
@R13
M=D
@return1062
D=A
@CALL
0;JMP
(return1062)
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return1063
D=A
@CALL
0;JMP
(return1063)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@LCL //push local
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@LCL //push local
D=M
@2
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@Math.getLow
D=A
@R13
M=D
@return1064
D=A
@CALL
0;JMP
(return1064)
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return1065
D=A
@CALL
0;JMP
(return1065)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@ARG //push argument
D=M
@6
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@Checksum.sumList
D=A
@R13
M=D
@return1066
D=A
@CALL
0;JMP
(return1066)
@SP  //not
A=M-1
M=!M
@LCL //pop local
D=M
@3
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@LCL //push local
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@16  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL //push local
D=M
@3
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@Math.getHigh
D=A
@R13
M=D
@return1067
D=A
@CALL
0;JMP
(return1067)
@3
D=A
@R14
M=D
@String.setCharAt
D=A
@R13
M=D
@return1068
D=A
@CALL
0;JMP
(return1068)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@LCL //push local
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@17  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL //push local
D=M
@3
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@Math.getLow
D=A
@R13
M=D
@return1069
D=A
@CALL
0;JMP
(return1069)
@3
D=A
@R14
M=D
@String.setCharAt
D=A
@R13
M=D
@return1070
D=A
@CALL
0;JMP
(return1070)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@ARG //push argument
D=M
@6
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@List.pop
D=A
@R13
M=D
@return1071
D=A
@CALL
0;JMP
(return1071)
@ARG //pop argument
D=M
@6
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@ARG //push argument
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@6  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@ARG //push argument
D=M
@6
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@3
D=A
@R14
M=D
@IP.write
D=A
@R13
M=D
@return1072
D=A
@CALL
0;JMP
(return1072)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@ARG //push argument
D=M
@6
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@List.pop
D=A
@R13
M=D
@return1073
D=A
@CALL
0;JMP
(return1073)
@ARG //pop argument
D=M
@6
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@0
D=A
@R14
M=D
@GPIO.getLed
D=A
@R13
M=D
@return1074
D=A
@CALL
0;JMP
(return1074)
@191  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //and
AM=M-1
D=M
A=A-1
M=D&M
@1
D=A
@R14
M=D
@GPIO.setLed
D=A
@R13
M=D
@return1075
D=A
@CALL
0;JMP
(return1075)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@RETURN
0;JMP

(TCP.printSockets)
@2
D=A
(TCP.printSockets_LOOP)
@TCP.printSockets_END
D;JEQ
@SP
A=M
M=0
@SP
M=M+1
D=D-1
@TCP.printSockets_LOOP
0;JMP
(TCP.printSockets_END)

@13  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@String.new
D=A
@R13
M=D
@return1076
D=A
@CALL
0;JMP
(return1076)
@79  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return1077
D=A
@CALL
0;JMP
(return1077)
@112  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return1078
D=A
@CALL
0;JMP
(return1078)
@101  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return1079
D=A
@CALL
0;JMP
(return1079)
@110  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return1080
D=A
@CALL
0;JMP
(return1080)
@32  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return1081
D=A
@CALL
0;JMP
(return1081)
@83  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return1082
D=A
@CALL
0;JMP
(return1082)
@111  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return1083
D=A
@CALL
0;JMP
(return1083)
@99  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return1084
D=A
@CALL
0;JMP
(return1084)
@107  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return1085
D=A
@CALL
0;JMP
(return1085)
@101  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return1086
D=A
@CALL
0;JMP
(return1086)
@116  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return1087
D=A
@CALL
0;JMP
(return1087)
@115  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return1088
D=A
@CALL
0;JMP
(return1088)
@58  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return1089
D=A
@CALL
0;JMP
(return1089)
@1
D=A
@R14
M=D
@Output.printString
D=A
@R13
M=D
@return1090
D=A
@CALL
0;JMP
(return1090)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@0
D=A
@R14
M=D
@Output.println
D=A
@R13
M=D
@return1091
D=A
@CALL
0;JMP
(return1091)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@TCP.0   //push static
D=M
@SP
A=M
M=D
@SP
M=M+1
@LCL //pop local
D=M
@1
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
(TCP.printSockets$while6)
@LCL //push local
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
D=D-M
M=-1
@eq179
D;JEQ
@SP
A=M-1
M=0
(eq179)
@SP  //not
A=M-1
M=!M
@SP  //not
A=M-1
M=!M
@SP
AM=M-1
D=M
@TCP.printSockets$whileend6
D;JNE
@LCL //push local
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@List.getData
D=A
@R13
M=D
@return1092
D=A
@CALL
0;JMP
(return1092)
@LCL //pop local
D=M
@0
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@LCL //push local
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@Socket.print
D=A
@R13
M=D
@return1093
D=A
@CALL
0;JMP
(return1093)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@0
D=A
@R14
M=D
@Output.println
D=A
@R13
M=D
@return1094
D=A
@CALL
0;JMP
(return1094)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@LCL //push local
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@List.getNext
D=A
@R13
M=D
@return1095
D=A
@CALL
0;JMP
(return1095)
@LCL //pop local
D=M
@1
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@TCP.printSockets$while6
0;JMP
(TCP.printSockets$whileend6)
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@RETURN
0;JMP

(TCP.clearSockets)
@2
D=A
(TCP.clearSockets_LOOP)
@TCP.clearSockets_END
D;JEQ
@SP
A=M
M=0
@SP
M=M+1
D=D-1
@TCP.clearSockets_LOOP
0;JMP
(TCP.clearSockets_END)

@TCP.0   //push static
D=M
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
D=D-M
M=-1
@eq180
D;JEQ
@SP
A=M-1
M=0
(eq180)
@SP  //not
A=M-1
M=!M
@SP
AM=M-1
D=M
@TCP.clearSockets$if1
D;JNE
@TCP.clearSockets$ifelse1
0;JMP
(TCP.clearSockets$if1)
@14  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@String.new
D=A
@R13
M=D
@return1096
D=A
@CALL
0;JMP
(return1096)
@67  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return1097
D=A
@CALL
0;JMP
(return1097)
@108  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return1098
D=A
@CALL
0;JMP
(return1098)
@101  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return1099
D=A
@CALL
0;JMP
(return1099)
@97  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return1100
D=A
@CALL
0;JMP
(return1100)
@114  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return1101
D=A
@CALL
0;JMP
(return1101)
@32  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return1102
D=A
@CALL
0;JMP
(return1102)
@83  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return1103
D=A
@CALL
0;JMP
(return1103)
@111  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return1104
D=A
@CALL
0;JMP
(return1104)
@99  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return1105
D=A
@CALL
0;JMP
(return1105)
@107  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return1106
D=A
@CALL
0;JMP
(return1106)
@101  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return1107
D=A
@CALL
0;JMP
(return1107)
@116  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return1108
D=A
@CALL
0;JMP
(return1108)
@115  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return1109
D=A
@CALL
0;JMP
(return1109)
@58  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@2
D=A
@R14
M=D
@String.appendChar
D=A
@R13
M=D
@return1110
D=A
@CALL
0;JMP
(return1110)
@1
D=A
@R14
M=D
@Output.printString
D=A
@R13
M=D
@return1111
D=A
@CALL
0;JMP
(return1111)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@0
D=A
@R14
M=D
@Output.println
D=A
@R13
M=D
@return1112
D=A
@CALL
0;JMP
(return1112)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@TCP.0   //push static
D=M
@SP
A=M
M=D
@SP
M=M+1
@LCL //pop local
D=M
@1
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
(TCP.clearSockets$while7)
@LCL //push local
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP
AM=M-1
D=M
A=A-1
D=D-M
M=-1
@eq181
D;JEQ
@SP
A=M-1
M=0
(eq181)
@SP  //not
A=M-1
M=!M
@SP  //not
A=M-1
M=!M
@SP
AM=M-1
D=M
@TCP.clearSockets$whileend7
D;JNE
@LCL //push local
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@List.getData
D=A
@R13
M=D
@return1113
D=A
@CALL
0;JMP
(return1113)
@LCL //pop local
D=M
@0
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@LCL //push local
D=M
@0
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@Socket.dispose
D=A
@R13
M=D
@return1114
D=A
@CALL
0;JMP
(return1114)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@LCL //push local
D=M
@1
A=D+A
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@List.getNext
D=A
@R13
M=D
@return1115
D=A
@CALL
0;JMP
(return1115)
@LCL //pop local
D=M
@1
D=D+A
@R13
M=D
@SP
AM=M-1
D=M
@R13
A=M
M=D
@TCP.clearSockets$while7
0;JMP
(TCP.clearSockets$whileend7)
@TCP.0   //push static
D=M
@SP
A=M
M=D
@SP
M=M+1
@1
D=A
@R14
M=D
@List.dispose
D=A
@R13
M=D
@return1116
D=A
@CALL
0;JMP
(return1116)
@SP  //pop temp
AM=M-1
D=M
@R5
M=D
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@SP  //pop static
AM=M-1
D=M
@TCP.0
M=D
(TCP.clearSockets$ifelse1)
@0  //push constant
D=A
@SP
A=M
M=D
@SP
M=M+1
@RETURN
0;JMP

